{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/diaspora/source/css/diaspora.css","path":"css/diaspora.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/diaspora.js","path":"js/diaspora.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","path":"photoswipe/photoswipe-ui-default.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","path":"photoswipe/photoswipe-ui-default.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","path":"photoswipe/photoswipe.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","path":"photoswipe/photoswipe.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","path":"img/welcome-cover.jpg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","path":"photoswipe/photoswipe.js","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","path":"photoswipe/default-skin/default-skin.css","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","path":"photoswipe/default-skin/default-skin.png","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","path":"photoswipe/default-skin/default-skin.svg","modified":0,"renderable":1},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","path":"photoswipe/default-skin/preloader.gif","modified":0,"renderable":1},{"_id":"themes/diaspora/source/img/cover.jpg","path":"img/cover.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/diaspora/.DS_Store","hash":"cf92b70354ac9ffa4a77d515e0147f4b3f803e54","modified":1564480344251},{"_id":"source/.DS_Store","hash":"4f181ea2ff1d1217efaaa80ad4104c2dc4b8b416","modified":1564374721904},{"_id":"themes/diaspora/_config.yml","hash":"78a49bac8290d4e2d155afe8fcf1931f1e085b8c","modified":1564503641160},{"_id":"themes/diaspora/LICENSE","hash":"63175a16773044bed84e1778009a54ad03dd5520","modified":1561470637579},{"_id":"themes/diaspora/README.md","hash":"9037ddf0e76bf214544fd2d7e15b5116717aebdf","modified":1564485403108},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1564375154730},{"_id":"source/_posts/javascript类型检测汇总.md","hash":"8eaacc68e7168d925b554794f0f72aafcb9345b4","modified":1564475859105},{"_id":"source/_posts/react-native-生成二维码.md","hash":"19a7ea3702f3dd11e239f0e25c31376394853555","modified":1564486622801},{"_id":"source/_posts/Git多帐号配置-管理多个SSH.md","hash":"0a8f84d2f04c1e6c35475f20f475c7710ca74e5b","modified":1564470505544},{"_id":"source/_posts/react-native-获取设备imei.md","hash":"51590f27b9ab4ffde6f2fa4656b303e1dde2725c","modified":1564493812533},{"_id":"source/_posts/react-native-因图片打包太大问题.md","hash":"481dc4aedfb685e9c62507a188bed9fdaa78b349","modified":1564478830555},{"_id":"source/_posts/react-native-配置启动图（闪屏图）支持ios和android.md","hash":"ca113b8e4bfeab85240d6b1c9ccd7d9b69e206cf","modified":1564496590349},{"_id":"source/_posts/react-native安卓使用fetch发送https和ios发送http相关问题总结.md","hash":"5d0c1e110e146f992865c847bede61bcc315ce5f","modified":1564499150354},{"_id":"source/_posts/Ubuntu 创建快捷启动.md","hash":"833d1f3a772142001b06b0efdd99d24d28d1242f","modified":1564471740688},{"_id":"source/_posts/面向对象从ES3到ES6-的继承方法总结以及对比.md","hash":"a691be95fbe597ea6c9ea158e4e374cbc581e197","modified":1564474695715},{"_id":"source/_posts/vue调试神器vue-devtools安装.md","hash":"6b839a76afe335b0871620093f1f38f807e03daa","modified":1564404005755},{"_id":"source/tags/index.md","hash":"df069bd40008a04e9ee24ea7650d5026a69d1717","modified":1562960257118},{"_id":"source/categories/index.md","hash":"8b7256603a81e4163a38b3ed3f86345620a4bc6c","modified":1564375046664},{"_id":"themes/diaspora/languages/default.yml","hash":"1b2b75ca9ff3bfeddb596239889b584cdfcecc32","modified":1561470637580},{"_id":"themes/diaspora/languages/it.yml","hash":"6ae71000ed039f56572143ffe90da17b95d1a66f","modified":1561470637580},{"_id":"themes/diaspora/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1561470637580},{"_id":"themes/diaspora/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1561470637580},{"_id":"themes/diaspora/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1561470637580},{"_id":"themes/diaspora/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1561470637580},{"_id":"themes/diaspora/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1561470637581},{"_id":"themes/diaspora/languages/zh-CN.yml","hash":"ccbba6315760755926f5abfe1b98c225a6650581","modified":1561470637581},{"_id":"themes/diaspora/layout/archive.ejs","hash":"e50d2e66e8a66789d6a8ef456979aa05143224ce","modified":1561470637585},{"_id":"themes/diaspora/layout/category.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1561470637585},{"_id":"themes/diaspora/layout/index.ejs","hash":"7ccb03f40fada2cd74c00554e5b6718508545d71","modified":1561470637585},{"_id":"themes/diaspora/layout/layout.ejs","hash":"bbead31ed8f81cb75b22d6c220793c9ed4ff3e66","modified":1561470637585},{"_id":"themes/diaspora/scripts/page_title.js","hash":"35dbc39e4edd53b20f5433dc0d1708024049186d","modified":1561470637586},{"_id":"themes/diaspora/layout/page.ejs","hash":"c311e177fc5eea6954e313374e73bd690814c91a","modified":1561470637586},{"_id":"themes/diaspora/layout/tag.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1561470637586},{"_id":"themes/diaspora/layout/post.ejs","hash":"e585d8b4680c52dccfc40ffa6b2c5df515bf20d2","modified":1561470637586},{"_id":"themes/diaspora/source/.DS_Store","hash":"6eb13211c50a3ab8ea56febb65ac07b4973c1577","modified":1564480344250},{"_id":"themes/diaspora/layout/_partial/categories.ejs","hash":"02cf5a962644da311e52fa441d2b300b0c9286a5","modified":1561470637581},{"_id":"themes/diaspora/layout/_partial/google-analytics.ejs","hash":"4806289a1c3de19a1cc4e6242c82cdd429c3bfe8","modified":1561470637581},{"_id":"themes/diaspora/layout/_partial/head.ejs","hash":"af13f26ebecc228ff8893cf458959aec9ba328d0","modified":1561470637582},{"_id":"themes/diaspora/layout/_partial/menu.ejs","hash":"e2f1c6944b269760456575fb7fed713fa04a1761","modified":1561470637582},{"_id":"themes/diaspora/layout/_partial/list.ejs","hash":"8e03499580aa81ec0b4c8316347b4e3839849007","modified":1561470637582},{"_id":"themes/diaspora/layout/_partial/photoswipe.ejs","hash":"d1d36cf0a2c03ff3c2acbc208fe11cd0afd8b7bd","modified":1561470637582},{"_id":"themes/diaspora/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1561470637582},{"_id":"themes/diaspora/layout/_partial/scripts.ejs","hash":"041a2e405157447b20b5d339596f35a2ec89808c","modified":1561470637584},{"_id":"themes/diaspora/layout/_partial/tags.ejs","hash":"16cfcf585417ec279c12d8cfbcf6383bf7f2a8c6","modified":1561470637584},{"_id":"themes/diaspora/layout/_partial/screen.ejs","hash":"33b014bf5c9bbe12e73231a6a30b1737c99da894","modified":1564472536144},{"_id":"themes/diaspora/source/css/diaspora.css","hash":"4506bdd137aa71d64ac5f3e5a329f17acea88966","modified":1562421642804},{"_id":"themes/diaspora/source/img/.DS_Store","hash":"17ff80e16e78966bddc6f15557a1e15fba5382a3","modified":1564480338127},{"_id":"themes/diaspora/source/img/logo2.png","hash":"26aa13d23a30369b683aab639499f977fe9f8175","modified":1561470637589},{"_id":"themes/diaspora/source/img/logo.png","hash":"80cb1e53f3b858c059a0f26d77ac5ee5cbd1044e","modified":1562418812477},{"_id":"themes/diaspora/source/img/logo4.png","hash":"4174b87ffe8b7dec67ea9d635554c5dcc7bd52e7","modified":1562418805001},{"_id":"themes/diaspora/source/img/logo5.png","hash":"afb396fb4565cf4f8c0c8195365160e3a7c3b3e2","modified":1562418914231},{"_id":"themes/diaspora/source/js/diaspora.js","hash":"559740e9f119855dcd4b94435c8bc532ba7caeb3","modified":1561470637591},{"_id":"themes/diaspora/source/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1561470637592},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1561470637594},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1561470637594},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1561470637594},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1561470637595},{"_id":"themes/diaspora/source/img/1561471321286.jpg","hash":"261f97903745c6b809252f9e81483aa5d6157f92","modified":1561471323333},{"_id":"themes/diaspora/source/img/1561471320298.jpg","hash":"261f97903745c6b809252f9e81483aa5d6157f92","modified":1561471321946},{"_id":"themes/diaspora/source/img/1561471359244.jpg","hash":"cf878500f0c93c89b6c6522189ef1938d351af52","modified":1561471360734},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","hash":"81e9751d3387556b36869113c812f881ca4767bf","modified":1561471822654},{"_id":"themes/diaspora/source/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1561470637592},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1561470637595},{"_id":"themes/diaspora/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1561470637583},{"_id":"themes/diaspora/layout/_partial/post/article.ejs","hash":"b2dbaf24cc2fa05be414b97ec5f0315328a8d84c","modified":1561470637583},{"_id":"themes/diaspora/layout/_partial/post/gitalk.ejs","hash":"7b684b561eca872b8e18e270c07f459ea3634676","modified":1561470637583},{"_id":"themes/diaspora/layout/_partial/post/header.ejs","hash":"5e10a5e619a52fa229228bc4ceb22e54149f0df5","modified":1564485735334},{"_id":"themes/diaspora/layout/_partial/post/item.ejs","hash":"b7a75aa667765b5c3a16b3b9a71ed38ea0a128a4","modified":1561470637584},{"_id":"themes/diaspora/layout/_partial/post/tag.ejs","hash":"c2b4ce7e1d7eed59f4c333915cd431f008f898e3","modified":1561470637584},{"_id":"themes/diaspora/layout/_partial/post/title.ejs","hash":"33f2a96f17fb1efa354c92aef906d96984abd9ab","modified":1561470637584},{"_id":"themes/diaspora/source/img/cover2.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1561470637588},{"_id":"themes/diaspora/source/img/welcome-cover1.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1561470637590},{"_id":"themes/diaspora/source/img/welcome-cover4.jpg","hash":"45993c2eba655e2ac566c9de54b7a4054a129167","modified":1561471376076},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1561470637593},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1561470637593},{"_id":"themes/diaspora/source/img/welcome-cover2.jpg","hash":"4035a180f7c7949fca80785075feb882a9f7b3fb","modified":1561471336855},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1561470637593},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1561470637593},{"_id":"themes/diaspora/source/img/1561471345421.jpg","hash":"aa592bef3979e2ac1d4ab5275ca324c63e267d48","modified":1561471345862},{"_id":"themes/diaspora/source/img/cover.jpg","hash":"962f0272162c036ca2eeef9f9632ec95fcd8af53","modified":1561471861456},{"_id":"themes/diaspora/source/img/favicon.png","hash":"88d2bc63fb505583d827a5c5e9650db51bcfcd7d","modified":1551670280000},{"_id":"themes/diaspora/source/img/logo3.png","hash":"88d2bc63fb505583d827a5c5e9650db51bcfcd7d","modified":1551670280000},{"_id":"public/categories/index.html","hash":"6958c861d9cd7cdff0016c7d09824da940569852","modified":1564499448314},{"_id":"public/tags/index.html","hash":"32ff15a7bd8c38b191279d5168c7adb076399461","modified":1564499448314},{"_id":"public/archives/index.html","hash":"e05eb2af1f2720fbecc0937c4031f753b94b899d","modified":1564503050704},{"_id":"public/archives/2019/index.html","hash":"e610d151b3772a4217cc0b78a7c40c5eab46be75","modified":1564503050704},{"_id":"public/archives/2019/07/index.html","hash":"add84ebf8e7c4b50e1e8305f1fd82f9a7b5b0065","modified":1564503050704},{"_id":"public/index.html","hash":"09f7c790b5dfc304b89c3c8a31606752b8504f59","modified":1564503050704},{"_id":"public/tags/Javascript/index.html","hash":"43153571aaa7dacb0313c1d3bd51fb0b44252834","modified":1564499448408},{"_id":"public/2019/07/30/javascript类型检测汇总/index.html","hash":"41704182a1ba77e39f76ce0aed71692855ac946a","modified":1564503646377},{"_id":"public/2019/07/30/react-native-生成二维码/index.html","hash":"44fbdb997ef8c98fc82f19cd546f457fc1df49db","modified":1564503646377},{"_id":"public/2019/07/30/react-native-因图片打包太大问题/index.html","hash":"9e52980e974d5f6b9d2e220613cce27b5d8e978a","modified":1564503646378},{"_id":"public/2019/07/29/Ubuntu 创建快捷启动/index.html","hash":"896b7c0c24d31efc05cb17f3fb9b1aff10d719e6","modified":1564503646378},{"_id":"public/2019/07/29/Git多帐号配置-管理多个SSH/index.html","hash":"0bc991e6a1a5e8ce5e27fcc23366ccf6b9203624","modified":1564503646378},{"_id":"public/2019/07/29/vue调试神器vue-devtools安装/index.html","hash":"afc9aa072906b4f1415dccb2e364d9dcbd0733f7","modified":1564503646378},{"_id":"public/categories/版本管理/index.html","hash":"fc965a7d151f27a5e60d6f80cbb852092d62a422","modified":1564499448411},{"_id":"public/categories/前端/index.html","hash":"9adf672d817457bf352633629cd60d1089ac54bc","modified":1564503050704},{"_id":"public/categories/系统平台/index.html","hash":"23a6c6fff57bf8ae7f59e5c5f313e43e32f69574","modified":1564499448412},{"_id":"public/categories/实用工具/index.html","hash":"86c2ec5d6bebff0e28790e23118e28230a134b95","modified":1564499448412},{"_id":"public/tags/Git/index.html","hash":"a0c9c7731e892e039d24985847aa09df0d3e7bda","modified":1564499448412},{"_id":"public/tags/ReactNative/index.html","hash":"0a0cb6251a4bfc96a4dc77da8efafcddcf9b982f","modified":1564503050704},{"_id":"public/tags/ubuntu/index.html","hash":"501d442e299c2e41325f3f472fd554732d17bb61","modified":1564499448412},{"_id":"public/tags/Vue/index.html","hash":"67461944130e24ecd9989783f3814e1a29749f35","modified":1564499448412},{"_id":"public/2019/07/30/react-native-配置启动图（闪屏图）支持ios和android/index.html","hash":"9b337f9a59aa50da6ccbfde8c2b866010184256e","modified":1564503646378},{"_id":"public/2019/07/30/react-native安卓使用fetch发送https和ios发送http相关问题总结/index.html","hash":"a8ebdef6987f32cf020665bfedbfa1482ef490d8","modified":1564499448413},{"_id":"public/2019/07/30/react-native-获取设备imei/index.html","hash":"21e6459046002481343a740cb02650c9baa2697c","modified":1564503646378},{"_id":"public/2019/07/29/面向对象从ES3到ES6-的继承方法总结以及对比/index.html","hash":"db5384a622e1d3b707db1fb64ae95b0db00ac25c","modified":1564503646378},{"_id":"source/_posts/react-native使用fetch发送https和http相关问题总结.md","hash":"5d0c1e110e146f992865c847bede61bcc315ce5f","modified":1564502677776},{"_id":"source/_posts/react-native.md","hash":"5d0c1e110e146f992865c847bede61bcc315ce5f","modified":1564502846072},{"_id":"source/_posts/react-native中fetch发送https或http相关问题总结.md","hash":"7aa0256ccf50a3e6422a1f1be43f030951c0a599","modified":1564503022985},{"_id":"public/2019/07/30/react-native中fetch发送https或http相关问题总结/index.html","hash":"d928080c691ce387b7b9459052d449996dc7d826","modified":1564503646378}],"Category":[{"name":"版本管理","_id":"cjypkjpnu0002cdt5x5jyj9e1"},{"name":"前端","_id":"cjypkjpo20009cdt5hjral0yj"},{"name":"系统平台","_id":"cjypkjpo6000ecdt5rhdgwv90"},{"name":"实用工具","_id":"cjypkjpoq000pcdt55f7wusrj"}],"Data":[],"Page":[{"title":"分类","date":"2019-07-12T19:36:55.000Z","type":"categories","_content":"\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-07-13 03:36:55\ntype: categories\n---\n\n","updated":"2019-07-29T04:37:26.664Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjypkjpoi000lcdt54gg0jc1v","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-07-12T19:36:46.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-07-13 03:36:46\ntype: tags\n---\n","updated":"2019-07-12T19:37:37.118Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjypkjpon000ncdt5qfa0z4h5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Git多帐号配置,管理多个SSH","date":"2019-07-29T10:09:58.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/070816.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/070816.jpg)\n\n当我们存在多个`git`账号的时候,比如公司用`Gitlib`或者`Gerrit`等等,而日常自己做的一些东西则会托管到`Github`上面。这些`git`账号的邮箱如果使用的是不同的话，就会存在生成一个`git`的`key`的时候会覆盖另外其他的的key 的问题，下面说一下怎么处理😸\n\n### 查看自己现有的SSH-Key\n\n```python\ncd ~/.ssh\nls\n\nid_rsa\nid_rsa.pub\nknown_hosts\n```\n\n如果你已经创建过git账号那你可能和我一样会看到只有一个`SSH-Key`,\n\n这个`SSH-Key`是我在公司`Gerrit`(你也可以理解为`Gitlib`一样的东西)所使用的`SSH-Key`。\n\n由于公司所用邮箱于`Gitlib`上邮箱不一致,如果重复生成新的`SSH-Key`只会吧之前的公司的`SSH-Key`覆盖掉,这样并不是我们所想看到的结果。\n\n废话说完了，就开始说说怎么解决这个问题:\n\n### 生成新的的SSH-Key\n\n```python\nssh-keygen -t rsa -C \"你的邮箱\"\n```\n\n\n\n第一个内容输入`ompany_id_rsa`(名字随便起，自己能区分的开就行)，余下的一路回车即可\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101105.png)\n\n到这里,你公司的`SSH-Key`就完成了，查看一下`.ssh`文件夹会多出你新添加`SSH-Key`\n\n```python\ncd ~/.ssh\nls\n\nid_rsa\nid_rsa.pub\nompany_id_rsa\nompany_id_rsa.pub\nknown_hosts\n```\n\n可以看到目前我们拥有两个不同的SSH-Key，到此为止已经完成一半了，现在还需要关键一步，接着往下看...\n\n### 添加config配置文件\n\n`config`文件作用是给`HOST`单独配置各自的`SSH-Key`，看下具体配置\n\n```python\n# 配置GitHub的SSH-Key\nHost github.com\n    HostName github.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/id_rsa\n    \n# 配置公司的SSH-Key\nHost gerrit.com\n    HostName gerrit.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/ompany_id_rsa\n```\n\n保存后配置`**_id_rsa.pub`公钥,以`GitHub`为例：\n\n1. 打开`GitHub`选择右上角头像下拉框选择`Settings`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101107.png)\n\n2. 找到`SSH and GPG keys`选项，点击`New SSH key`按钮添加公钥。\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101108.png)\n\n3. 公钥即为`～/.ssh/**_id_rsa.pub`文件中的内容，我这里使用的是`GitHub`的`id_rsa.pub`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101109.png)\n好了，没有之后了。祝你在技术的道路上越走越远🤣🤣🤣\n\n","source":"_posts/Git多帐号配置-管理多个SSH.md","raw":"---\ntitle: 'Git多帐号配置,管理多个SSH'\ndate: 2019-07-29 18:09:58\ntags: Git\ncategories: 版本管理\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/070816.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/070816.jpg)\n\n当我们存在多个`git`账号的时候,比如公司用`Gitlib`或者`Gerrit`等等,而日常自己做的一些东西则会托管到`Github`上面。这些`git`账号的邮箱如果使用的是不同的话，就会存在生成一个`git`的`key`的时候会覆盖另外其他的的key 的问题，下面说一下怎么处理😸\n\n### 查看自己现有的SSH-Key\n\n```python\ncd ~/.ssh\nls\n\nid_rsa\nid_rsa.pub\nknown_hosts\n```\n\n如果你已经创建过git账号那你可能和我一样会看到只有一个`SSH-Key`,\n\n这个`SSH-Key`是我在公司`Gerrit`(你也可以理解为`Gitlib`一样的东西)所使用的`SSH-Key`。\n\n由于公司所用邮箱于`Gitlib`上邮箱不一致,如果重复生成新的`SSH-Key`只会吧之前的公司的`SSH-Key`覆盖掉,这样并不是我们所想看到的结果。\n\n废话说完了，就开始说说怎么解决这个问题:\n\n### 生成新的的SSH-Key\n\n```python\nssh-keygen -t rsa -C \"你的邮箱\"\n```\n\n\n\n第一个内容输入`ompany_id_rsa`(名字随便起，自己能区分的开就行)，余下的一路回车即可\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101105.png)\n\n到这里,你公司的`SSH-Key`就完成了，查看一下`.ssh`文件夹会多出你新添加`SSH-Key`\n\n```python\ncd ~/.ssh\nls\n\nid_rsa\nid_rsa.pub\nompany_id_rsa\nompany_id_rsa.pub\nknown_hosts\n```\n\n可以看到目前我们拥有两个不同的SSH-Key，到此为止已经完成一半了，现在还需要关键一步，接着往下看...\n\n### 添加config配置文件\n\n`config`文件作用是给`HOST`单独配置各自的`SSH-Key`，看下具体配置\n\n```python\n# 配置GitHub的SSH-Key\nHost github.com\n    HostName github.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/id_rsa\n    \n# 配置公司的SSH-Key\nHost gerrit.com\n    HostName gerrit.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/ompany_id_rsa\n```\n\n保存后配置`**_id_rsa.pub`公钥,以`GitHub`为例：\n\n1. 打开`GitHub`选择右上角头像下拉框选择`Settings`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101107.png)\n\n2. 找到`SSH and GPG keys`选项，点击`New SSH key`按钮添加公钥。\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101108.png)\n\n3. 公钥即为`～/.ssh/**_id_rsa.pub`文件中的内容，我这里使用的是`GitHub`的`id_rsa.pub`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101109.png)\n好了，没有之后了。祝你在技术的道路上越走越远🤣🤣🤣\n\n","slug":"Git多帐号配置-管理多个SSH","published":1,"updated":"2019-07-30T07:08:25.544Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjypkjpno0000cdt5qzmbjdi2","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/070816.jpg\" alt></p>\n<p>当我们存在多个<code>git</code>账号的时候,比如公司用<code>Gitlib</code>或者<code>Gerrit</code>等等,而日常自己做的一些东西则会托管到<code>Github</code>上面。这些<code>git</code>账号的邮箱如果使用的是不同的话，就会存在生成一个<code>git</code>的<code>key</code>的时候会覆盖另外其他的的key 的问题，下面说一下怎么处理😸</p>\n<h3 id=\"查看自己现有的SSH-Key\"><a href=\"#查看自己现有的SSH-Key\" class=\"headerlink\" title=\"查看自己现有的SSH-Key\"></a>查看自己现有的SSH-Key</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ls</span><br><span class=\"line\"></span><br><span class=\"line\">id_rsa</span><br><span class=\"line\">id_rsa.pub</span><br><span class=\"line\">known_hosts</span><br></pre></td></tr></table></figure>\n\n<p>如果你已经创建过git账号那你可能和我一样会看到只有一个<code>SSH-Key</code>,</p>\n<p>这个<code>SSH-Key</code>是我在公司<code>Gerrit</code>(你也可以理解为<code>Gitlib</code>一样的东西)所使用的<code>SSH-Key</code>。</p>\n<p>由于公司所用邮箱于<code>Gitlib</code>上邮箱不一致,如果重复生成新的<code>SSH-Key</code>只会吧之前的公司的<code>SSH-Key</code>覆盖掉,这样并不是我们所想看到的结果。</p>\n<p>废话说完了，就开始说说怎么解决这个问题:</p>\n<h3 id=\"生成新的的SSH-Key\"><a href=\"#生成新的的SSH-Key\" class=\"headerlink\" title=\"生成新的的SSH-Key\"></a>生成新的的SSH-Key</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"你的邮箱\"</span></span><br></pre></td></tr></table></figure>\n\n<p>第一个内容输入<code>ompany_id_rsa</code>(名字随便起，自己能区分的开就行)，余下的一路回车即可</p>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101105.png\" alt></p>\n<p>到这里,你公司的<code>SSH-Key</code>就完成了，查看一下<code>.ssh</code>文件夹会多出你新添加<code>SSH-Key</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ls</span><br><span class=\"line\"></span><br><span class=\"line\">id_rsa</span><br><span class=\"line\">id_rsa.pub</span><br><span class=\"line\">ompany_id_rsa</span><br><span class=\"line\">ompany_id_rsa.pub</span><br><span class=\"line\">known_hosts</span><br></pre></td></tr></table></figure>\n\n<p>可以看到目前我们拥有两个不同的SSH-Key，到此为止已经完成一半了，现在还需要关键一步，接着往下看…</p>\n<h3 id=\"添加config配置文件\"><a href=\"#添加config配置文件\" class=\"headerlink\" title=\"添加config配置文件\"></a>添加config配置文件</h3><p><code>config</code>文件作用是给<code>HOST</code>单独配置各自的<code>SSH-Key</code>，看下具体配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置GitHub的SSH-Key</span></span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">    HostName github.com</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 配置公司的SSH-Key</span></span><br><span class=\"line\">Host gerrit.com</span><br><span class=\"line\">    HostName gerrit.com</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/ompany_id_rsa</span><br></pre></td></tr></table></figure>\n\n<p>保存后配置<code>**_id_rsa.pub</code>公钥,以<code>GitHub</code>为例：</p>\n<ol>\n<li>打开<code>GitHub</code>选择右上角头像下拉框选择<code>Settings</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101107.png\" alt></p>\n<ol start=\"2\">\n<li>找到<code>SSH and GPG keys</code>选项，点击<code>New SSH key</code>按钮添加公钥。</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101108.png\" alt></p>\n<ol start=\"3\">\n<li>公钥即为<code>～/.ssh/**_id_rsa.pub</code>文件中的内容，我这里使用的是<code>GitHub</code>的<code>id_rsa.pub</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101109.png\" alt><br>好了，没有之后了。祝你在技术的道路上越走越远🤣🤣🤣</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/070816.jpg\" alt></p>\n<p>当我们存在多个<code>git</code>账号的时候,比如公司用<code>Gitlib</code>或者<code>Gerrit</code>等等,而日常自己做的一些东西则会托管到<code>Github</code>上面。这些<code>git</code>账号的邮箱如果使用的是不同的话，就会存在生成一个<code>git</code>的<code>key</code>的时候会覆盖另外其他的的key 的问题，下面说一下怎么处理😸</p>\n<h3 id=\"查看自己现有的SSH-Key\"><a href=\"#查看自己现有的SSH-Key\" class=\"headerlink\" title=\"查看自己现有的SSH-Key\"></a>查看自己现有的SSH-Key</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ls</span><br><span class=\"line\"></span><br><span class=\"line\">id_rsa</span><br><span class=\"line\">id_rsa.pub</span><br><span class=\"line\">known_hosts</span><br></pre></td></tr></table></figure>\n\n<p>如果你已经创建过git账号那你可能和我一样会看到只有一个<code>SSH-Key</code>,</p>\n<p>这个<code>SSH-Key</code>是我在公司<code>Gerrit</code>(你也可以理解为<code>Gitlib</code>一样的东西)所使用的<code>SSH-Key</code>。</p>\n<p>由于公司所用邮箱于<code>Gitlib</code>上邮箱不一致,如果重复生成新的<code>SSH-Key</code>只会吧之前的公司的<code>SSH-Key</code>覆盖掉,这样并不是我们所想看到的结果。</p>\n<p>废话说完了，就开始说说怎么解决这个问题:</p>\n<h3 id=\"生成新的的SSH-Key\"><a href=\"#生成新的的SSH-Key\" class=\"headerlink\" title=\"生成新的的SSH-Key\"></a>生成新的的SSH-Key</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"你的邮箱\"</span></span><br></pre></td></tr></table></figure>\n\n<p>第一个内容输入<code>ompany_id_rsa</code>(名字随便起，自己能区分的开就行)，余下的一路回车即可</p>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101105.png\" alt></p>\n<p>到这里,你公司的<code>SSH-Key</code>就完成了，查看一下<code>.ssh</code>文件夹会多出你新添加<code>SSH-Key</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ls</span><br><span class=\"line\"></span><br><span class=\"line\">id_rsa</span><br><span class=\"line\">id_rsa.pub</span><br><span class=\"line\">ompany_id_rsa</span><br><span class=\"line\">ompany_id_rsa.pub</span><br><span class=\"line\">known_hosts</span><br></pre></td></tr></table></figure>\n\n<p>可以看到目前我们拥有两个不同的SSH-Key，到此为止已经完成一半了，现在还需要关键一步，接着往下看…</p>\n<h3 id=\"添加config配置文件\"><a href=\"#添加config配置文件\" class=\"headerlink\" title=\"添加config配置文件\"></a>添加config配置文件</h3><p><code>config</code>文件作用是给<code>HOST</code>单独配置各自的<code>SSH-Key</code>，看下具体配置</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置GitHub的SSH-Key</span></span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">    HostName github.com</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 配置公司的SSH-Key</span></span><br><span class=\"line\">Host gerrit.com</span><br><span class=\"line\">    HostName gerrit.com</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/ompany_id_rsa</span><br></pre></td></tr></table></figure>\n\n<p>保存后配置<code>**_id_rsa.pub</code>公钥,以<code>GitHub</code>为例：</p>\n<ol>\n<li>打开<code>GitHub</code>选择右上角头像下拉框选择<code>Settings</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101107.png\" alt></p>\n<ol start=\"2\">\n<li>找到<code>SSH and GPG keys</code>选项，点击<code>New SSH key</code>按钮添加公钥。</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101108.png\" alt></p>\n<ol start=\"3\">\n<li>公钥即为<code>～/.ssh/**_id_rsa.pub</code>文件中的内容，我这里使用的是<code>GitHub</code>的<code>id_rsa.pub</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/101109.png\" alt><br>好了，没有之后了。祝你在技术的道路上越走越远🤣🤣🤣</p>\n"},{"title":"javascript类型检测汇总","date":"2019-07-30T08:37:39.000Z","_content":"","source":"_posts/javascript类型检测汇总.md","raw":"---\ntitle: javascript类型检测汇总\ndate: 2019-07-30 16:37:39\ntags:\n---\n","slug":"javascript类型检测汇总","published":1,"updated":"2019-07-30T08:37:39.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjypkjpns0001cdt5htaqjcz8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"react-native 生成二维码","date":"2019-07-30T08:36:31.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/093827.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/093827.jpg) \n\n\n\n对于二维码我们都并不陌生，`react-native`里面我推荐一个开源库[react-native-qrcode](https://github.com/cssivision/react-native-qrcode)去生成。当然，这里只简单的说一下功能的使用，源代码并不多，有兴趣的可以去看看。\n\n好了接下来我们就简单的看一下如何使用这个模块去实现生成二维码的功能:\n\n\n\n### 当前环境\n\n- OS: macOS High Sierra 10.13.5\n- Node: 8.11.3\n- Yarn: 1.7.0\n- npm: 5.6.0\n- Watchman: 4.9.0\n- Xcode: Xcode 9.4.1\n- react: 16.3.1 => 16.3.1\n- react-native: 0.55.4 => 0.55.4\n- react-native-qrcode: 0.2.6 => 0.2.6\n\n\n\n\n\n### 兼容性\n\n- 支持`ios`和`android`\n\n\n\n### 安装模块\n\n```shell\nyarn add react-native-splash-screen \n# or with yarn\nnpm install react-native-splash-screen -S\n```\n\n\n\n### 在项目中使用模块\n\n```javascript\nimport React, { Component } from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport QRCode from 'react-native-qrcode'\n\nexport default class CreateQRCode extends Component{\n    render () {\n        return (\n            <View style={ styles.container }>\n                <QRCode\n                    value={ https://www.google.com }\n                    size={ 130 }\n                    bgColor=\"#000\"\n                    fgColor=\"#FFF\"\n                />\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width:  130,\n        height:  130\n    }\n})\n```\n\n\n\n### 示例结果\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/092753.png) \n\n## props参数说明\n\n\n| prop    | 类型               | 默认值                 |\n| ------- | ------------------ | ---------------------- |\n| value   | string             | https://www.google.com |\n| size    | number             | 128                    |\n| bgColor | string (CSS color) | \"#000\"                 |\n| fgColor | string (CSS color) | \"#FFF\"                 |\n\n\n\n**好了实现了，东西很简单，有兴趣的可以去读读源码。透露一下，内部是使用Canvas加WebView实现的，如果遇到什么小问题欢迎下方留言，Thanks♪(･ω･)ﾉ**\n\n","source":"_posts/react-native-生成二维码.md","raw":"---\ntitle: react-native 生成二维码\ndate: 2019-07-30 16:36:31\ntags: ReactNative\ncategories: 前端\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/093827.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/093827.jpg) \n\n\n\n对于二维码我们都并不陌生，`react-native`里面我推荐一个开源库[react-native-qrcode](https://github.com/cssivision/react-native-qrcode)去生成。当然，这里只简单的说一下功能的使用，源代码并不多，有兴趣的可以去看看。\n\n好了接下来我们就简单的看一下如何使用这个模块去实现生成二维码的功能:\n\n\n\n### 当前环境\n\n- OS: macOS High Sierra 10.13.5\n- Node: 8.11.3\n- Yarn: 1.7.0\n- npm: 5.6.0\n- Watchman: 4.9.0\n- Xcode: Xcode 9.4.1\n- react: 16.3.1 => 16.3.1\n- react-native: 0.55.4 => 0.55.4\n- react-native-qrcode: 0.2.6 => 0.2.6\n\n\n\n\n\n### 兼容性\n\n- 支持`ios`和`android`\n\n\n\n### 安装模块\n\n```shell\nyarn add react-native-splash-screen \n# or with yarn\nnpm install react-native-splash-screen -S\n```\n\n\n\n### 在项目中使用模块\n\n```javascript\nimport React, { Component } from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport QRCode from 'react-native-qrcode'\n\nexport default class CreateQRCode extends Component{\n    render () {\n        return (\n            <View style={ styles.container }>\n                <QRCode\n                    value={ https://www.google.com }\n                    size={ 130 }\n                    bgColor=\"#000\"\n                    fgColor=\"#FFF\"\n                />\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width:  130,\n        height:  130\n    }\n})\n```\n\n\n\n### 示例结果\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/092753.png) \n\n## props参数说明\n\n\n| prop    | 类型               | 默认值                 |\n| ------- | ------------------ | ---------------------- |\n| value   | string             | https://www.google.com |\n| size    | number             | 128                    |\n| bgColor | string (CSS color) | \"#000\"                 |\n| fgColor | string (CSS color) | \"#FFF\"                 |\n\n\n\n**好了实现了，东西很简单，有兴趣的可以去读读源码。透露一下，内部是使用Canvas加WebView实现的，如果遇到什么小问题欢迎下方留言，Thanks♪(･ω･)ﾉ**\n\n","slug":"react-native-生成二维码","published":1,"updated":"2019-07-30T11:37:02.801Z","_id":"cjypkjpnx0004cdt5ldjarr2g","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/093827.jpg\" alt> </p>\n<p>对于二维码我们都并不陌生，<code>react-native</code>里面我推荐一个开源库<a href=\"https://github.com/cssivision/react-native-qrcode\" target=\"_blank\" rel=\"noopener\">react-native-qrcode</a>去生成。当然，这里只简单的说一下功能的使用，源代码并不多，有兴趣的可以去看看。</p>\n<p>好了接下来我们就简单的看一下如何使用这个模块去实现生成二维码的功能:</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-qrcode: 0.2.6 =&gt; 0.2.6</li>\n</ul>\n<h3 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h3><ul>\n<li>支持<code>ios</code>和<code>android</code></li>\n</ul>\n<h3 id=\"安装模块\"><a href=\"#安装模块\" class=\"headerlink\" title=\"安装模块\"></a>安装模块</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add react-native-splash-screen </span><br><span class=\"line\"><span class=\"meta\">#</span> or with yarn</span><br><span class=\"line\">npm install react-native-splash-screen -S</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在项目中使用模块\"><a href=\"#在项目中使用模块\" class=\"headerlink\" title=\"在项目中使用模块\"></a>在项目中使用模块</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View, StyleSheet &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> QRCode <span class=\"keyword\">from</span> <span class=\"string\">'react-native-qrcode'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateQRCode</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span></span>&#123;</span><br><span class=\"line\">    render () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;View style=&#123; styles.container &#125;&gt;</span><br><span class=\"line\">                &lt;QRCode</span><br><span class=\"line\">                    value=&#123; <span class=\"attr\">https</span>:<span class=\"comment\">//www.google.com &#125;</span></span><br><span class=\"line\">                    size=&#123; <span class=\"number\">130</span> &#125;</span><br><span class=\"line\">                    bgColor=<span class=\"string\">\"#000\"</span></span><br><span class=\"line\">                    fgColor=<span class=\"string\">\"#FFF\"</span></span><br><span class=\"line\">                /&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    container: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        width:  130,</span></span><br><span class=\"line\"><span class=\"regexp\">        height:  130</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例结果\"><a href=\"#示例结果\" class=\"headerlink\" title=\"示例结果\"></a>示例结果</h3><p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/092753.png\" alt> </p>\n<h2 id=\"props参数说明\"><a href=\"#props参数说明\" class=\"headerlink\" title=\"props参数说明\"></a>props参数说明</h2><table>\n<thead>\n<tr>\n<th>prop</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>string</td>\n<td><a href=\"https://www.google.com\" target=\"_blank\" rel=\"noopener\">https://www.google.com</a></td>\n</tr>\n<tr>\n<td>size</td>\n<td>number</td>\n<td>128</td>\n</tr>\n<tr>\n<td>bgColor</td>\n<td>string (CSS color)</td>\n<td>“#000”</td>\n</tr>\n<tr>\n<td>fgColor</td>\n<td>string (CSS color)</td>\n<td>“#FFF”</td>\n</tr>\n</tbody></table>\n<p><strong>好了实现了，东西很简单，有兴趣的可以去读读源码。透露一下，内部是使用Canvas加WebView实现的，如果遇到什么小问题欢迎下方留言，Thanks♪(･ω･)ﾉ</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/093827.jpg\" alt> </p>\n<p>对于二维码我们都并不陌生，<code>react-native</code>里面我推荐一个开源库<a href=\"https://github.com/cssivision/react-native-qrcode\" target=\"_blank\" rel=\"noopener\">react-native-qrcode</a>去生成。当然，这里只简单的说一下功能的使用，源代码并不多，有兴趣的可以去看看。</p>\n<p>好了接下来我们就简单的看一下如何使用这个模块去实现生成二维码的功能:</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-qrcode: 0.2.6 =&gt; 0.2.6</li>\n</ul>\n<h3 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h3><ul>\n<li>支持<code>ios</code>和<code>android</code></li>\n</ul>\n<h3 id=\"安装模块\"><a href=\"#安装模块\" class=\"headerlink\" title=\"安装模块\"></a>安装模块</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add react-native-splash-screen </span><br><span class=\"line\"><span class=\"meta\">#</span> or with yarn</span><br><span class=\"line\">npm install react-native-splash-screen -S</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在项目中使用模块\"><a href=\"#在项目中使用模块\" class=\"headerlink\" title=\"在项目中使用模块\"></a>在项目中使用模块</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View, StyleSheet &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> QRCode <span class=\"keyword\">from</span> <span class=\"string\">'react-native-qrcode'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateQRCode</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span></span>&#123;</span><br><span class=\"line\">    render () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;View style=&#123; styles.container &#125;&gt;</span><br><span class=\"line\">                &lt;QRCode</span><br><span class=\"line\">                    value=&#123; <span class=\"attr\">https</span>:<span class=\"comment\">//www.google.com &#125;</span></span><br><span class=\"line\">                    size=&#123; <span class=\"number\">130</span> &#125;</span><br><span class=\"line\">                    bgColor=<span class=\"string\">\"#000\"</span></span><br><span class=\"line\">                    fgColor=<span class=\"string\">\"#FFF\"</span></span><br><span class=\"line\">                /&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    container: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        width:  130,</span></span><br><span class=\"line\"><span class=\"regexp\">        height:  130</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例结果\"><a href=\"#示例结果\" class=\"headerlink\" title=\"示例结果\"></a>示例结果</h3><p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/092753.png\" alt> </p>\n<h2 id=\"props参数说明\"><a href=\"#props参数说明\" class=\"headerlink\" title=\"props参数说明\"></a>props参数说明</h2><table>\n<thead>\n<tr>\n<th>prop</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>string</td>\n<td><a href=\"https://www.google.com\" target=\"_blank\" rel=\"noopener\">https://www.google.com</a></td>\n</tr>\n<tr>\n<td>size</td>\n<td>number</td>\n<td>128</td>\n</tr>\n<tr>\n<td>bgColor</td>\n<td>string (CSS color)</td>\n<td>“#000”</td>\n</tr>\n<tr>\n<td>fgColor</td>\n<td>string (CSS color)</td>\n<td>“#FFF”</td>\n</tr>\n</tbody></table>\n<p><strong>好了实现了，东西很简单，有兴趣的可以去读读源码。透露一下，内部是使用Canvas加WebView实现的，如果遇到什么小问题欢迎下方留言，Thanks♪(･ω･)ﾉ</strong></p>\n"},{"title":"react-native 获取设备imei","date":"2019-07-30T08:36:49.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132622.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132622.jpg)\n\n\n\n项目开发中需要获取设备的`IMEI`，所以整理了一下写出这篇文档，项目使用的是[react-native-imei](https://github.com/SimenCodes/react-native-imei)。但需要注意的是，`Ios`做不了的😿\n\n\n\n### 当前环境\n\n- OS: macOS High Sierra 10.13.5\n- Node: 8.11.3\n- Yarn: 1.7.0\n- npm: 5.6.0\n- Watchman: 4.9.0\n- Xcode: Xcode 9.4.1\n- react: 16.3.1 => 16.3.1\n- react-native: 0.55.4 => 0.55.4\n- react-native-imei: 0.1.1 => 0.1.1\n\n\n\n### 前置说明\n\n- `IOS7`以后不能获取手机`IMEI`\n- `Android`个别情况下无法获得`IMEI`\n\n\n\n### 获取android设备IMEI\n\n#### 安装\n\n```shell\nnpm install react-native-imei --save\n# or with yarn\nyarn add react-native-imei\n```\n\n\n\n#### 自动配置\n\n```shell\nreact-native link react-native-imei\n```\n\n\n\n#### 手动配置\n\n1. 在项目路径`{project}/android/`下找到`settings.gradle`文件，添加一下内容\n\n```java\n...\n  \ninclude ':react-native-imei'\n\nproject(':react-native-imei').projectDir =  new  File(rootProject.projectDir, '../node_modules/react-native-imei/android')\n  \n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132707.png) \n\n\n\n2. 在项目路径`{project}/android/app/`下找到`build.gradle`文件，添加一下内容\n\n```java\n...\n\ndependencies {\n  \n    compile project(':react-native-imei')    //-> here\n    ...\n}\n\n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132713.png) \n\n\n\n3. 在项目路径`{project}/android/app/src/main/java/com/app/`下找到`MainApplication.java`文件，添加一下内容\n\n```java\n...\n  \npublic class MainApplication extends Application implements ReactApplication  {\n    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n        ...\n\n        @Override\n        protected List<ReactPackage> getPackages()  {\n            return Arrays.<ReactPackage>asList(\n                new MainReactPackage(),\n                new IMEI() //-> here\n            );\n        }\n    }\n};\n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132721.png) \n\n\n\n### 在项目中使用\n\n1. 在项目中引入`react-native-imei`\n\n```javascript\nimport  IMEI  from  'react-native-imei'\n```\n\n2. 通过`IMEI.getImei()`方法获取当前设备IMEI\n\n```javascript\ncomponentDidMount () {\n    const imei = Platform.OS === 'android' ? IMEI.getImei() || 'android' : 'ios'\n    console.log(imei)\n}\n```\n\n3. 由于ios设备不支持IMEI所以我们直接写入`ios`字符串去辨别设备类型，当然你也可以定义其他的方式去做，都可以\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132726.png) \n\n\n\n**如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)**","source":"_posts/react-native-获取设备imei.md","raw":"---\ntitle: react-native 获取设备imei\ndate: 2019-07-30 16:36:49\ntags: ReactNative\ncategories: 前端\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132622.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132622.jpg)\n\n\n\n项目开发中需要获取设备的`IMEI`，所以整理了一下写出这篇文档，项目使用的是[react-native-imei](https://github.com/SimenCodes/react-native-imei)。但需要注意的是，`Ios`做不了的😿\n\n\n\n### 当前环境\n\n- OS: macOS High Sierra 10.13.5\n- Node: 8.11.3\n- Yarn: 1.7.0\n- npm: 5.6.0\n- Watchman: 4.9.0\n- Xcode: Xcode 9.4.1\n- react: 16.3.1 => 16.3.1\n- react-native: 0.55.4 => 0.55.4\n- react-native-imei: 0.1.1 => 0.1.1\n\n\n\n### 前置说明\n\n- `IOS7`以后不能获取手机`IMEI`\n- `Android`个别情况下无法获得`IMEI`\n\n\n\n### 获取android设备IMEI\n\n#### 安装\n\n```shell\nnpm install react-native-imei --save\n# or with yarn\nyarn add react-native-imei\n```\n\n\n\n#### 自动配置\n\n```shell\nreact-native link react-native-imei\n```\n\n\n\n#### 手动配置\n\n1. 在项目路径`{project}/android/`下找到`settings.gradle`文件，添加一下内容\n\n```java\n...\n  \ninclude ':react-native-imei'\n\nproject(':react-native-imei').projectDir =  new  File(rootProject.projectDir, '../node_modules/react-native-imei/android')\n  \n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132707.png) \n\n\n\n2. 在项目路径`{project}/android/app/`下找到`build.gradle`文件，添加一下内容\n\n```java\n...\n\ndependencies {\n  \n    compile project(':react-native-imei')    //-> here\n    ...\n}\n\n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132713.png) \n\n\n\n3. 在项目路径`{project}/android/app/src/main/java/com/app/`下找到`MainApplication.java`文件，添加一下内容\n\n```java\n...\n  \npublic class MainApplication extends Application implements ReactApplication  {\n    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n        ...\n\n        @Override\n        protected List<ReactPackage> getPackages()  {\n            return Arrays.<ReactPackage>asList(\n                new MainReactPackage(),\n                new IMEI() //-> here\n            );\n        }\n    }\n};\n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132721.png) \n\n\n\n### 在项目中使用\n\n1. 在项目中引入`react-native-imei`\n\n```javascript\nimport  IMEI  from  'react-native-imei'\n```\n\n2. 通过`IMEI.getImei()`方法获取当前设备IMEI\n\n```javascript\ncomponentDidMount () {\n    const imei = Platform.OS === 'android' ? IMEI.getImei() || 'android' : 'ios'\n    console.log(imei)\n}\n```\n\n3. 由于ios设备不支持IMEI所以我们直接写入`ios`字符串去辨别设备类型，当然你也可以定义其他的方式去做，都可以\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132726.png) \n\n\n\n**如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)**","slug":"react-native-获取设备imei","published":1,"updated":"2019-07-30T13:36:52.533Z","_id":"cjypkjpny0005cdt5ffvmprdn","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132622.jpg\" alt></p>\n<p>项目开发中需要获取设备的<code>IMEI</code>，所以整理了一下写出这篇文档，项目使用的是<a href=\"https://github.com/SimenCodes/react-native-imei\" target=\"_blank\" rel=\"noopener\">react-native-imei</a>。但需要注意的是，<code>Ios</code>做不了的😿</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-imei: 0.1.1 =&gt; 0.1.1</li>\n</ul>\n<h3 id=\"前置说明\"><a href=\"#前置说明\" class=\"headerlink\" title=\"前置说明\"></a>前置说明</h3><ul>\n<li><code>IOS7</code>以后不能获取手机<code>IMEI</code></li>\n<li><code>Android</code>个别情况下无法获得<code>IMEI</code></li>\n</ul>\n<h3 id=\"获取android设备IMEI\"><a href=\"#获取android设备IMEI\" class=\"headerlink\" title=\"获取android设备IMEI\"></a>获取android设备IMEI</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install react-native-imei --save</span><br><span class=\"line\"><span class=\"meta\">#</span> or with yarn</span><br><span class=\"line\">yarn add react-native-imei</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自动配置\"><a href=\"#自动配置\" class=\"headerlink\" title=\"自动配置\"></a>自动配置</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">react-native link react-native-imei</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"手动配置\"><a href=\"#手动配置\" class=\"headerlink\" title=\"手动配置\"></a>手动配置</h4><ol>\n<li>在项目路径<code>{project}/android/</code>下找到<code>settings.gradle</code>文件，添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\">include <span class=\"string\">':react-native-imei'</span></span><br><span class=\"line\"></span><br><span class=\"line\">project(<span class=\"string\">':react-native-imei'</span>).projectDir =  <span class=\"keyword\">new</span>  File(rootProject.projectDir, <span class=\"string\">'../node_modules/react-native-imei/android'</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132707.png\" alt> </p>\n<ol start=\"2\">\n<li>在项目路径<code>{project}/android/app/</code>下找到<code>build.gradle</code>文件，添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">compile <span class=\"title\">project</span><span class=\"params\">(<span class=\"string\">':react-native-imei'</span>)</span>    <span class=\"comment\">//-&gt; here</span></span></span><br><span class=\"line\"><span class=\"function\">    ...</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">...</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132713.png\" alt> </p>\n<ol start=\"3\">\n<li>在项目路径<code>{project}/android/app/src/main/java/com/app/</code>下找到<code>MainApplication.java</code>文件，添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> <span class=\"keyword\">implements</span> <span class=\"title\">ReactApplication</span>  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReactNativeHost mReactNativeHost = <span class=\"keyword\">new</span> ReactNativeHost(<span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> List&lt;ReactPackage&gt; <span class=\"title\">getPackages</span><span class=\"params\">()</span>  </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> MainReactPackage(),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> IMEI() <span class=\"comment\">//-&gt; here</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132721.png\" alt> </p>\n<h3 id=\"在项目中使用\"><a href=\"#在项目中使用\" class=\"headerlink\" title=\"在项目中使用\"></a>在项目中使用</h3><ol>\n<li>在项目中引入<code>react-native-imei</code></li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span>  IMEI  <span class=\"keyword\">from</span>  <span class=\"string\">'react-native-imei'</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>通过<code>IMEI.getImei()</code>方法获取当前设备IMEI</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">componentDidMount () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imei = Platform.OS === <span class=\"string\">'android'</span> ? IMEI.getImei() || <span class=\"string\">'android'</span> : <span class=\"string\">'ios'</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(imei)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>由于ios设备不支持IMEI所以我们直接写入<code>ios</code>字符串去辨别设备类型，当然你也可以定义其他的方式去做，都可以</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132726.png\" alt> </p>\n<p><strong>如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132622.jpg\" alt></p>\n<p>项目开发中需要获取设备的<code>IMEI</code>，所以整理了一下写出这篇文档，项目使用的是<a href=\"https://github.com/SimenCodes/react-native-imei\" target=\"_blank\" rel=\"noopener\">react-native-imei</a>。但需要注意的是，<code>Ios</code>做不了的😿</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-imei: 0.1.1 =&gt; 0.1.1</li>\n</ul>\n<h3 id=\"前置说明\"><a href=\"#前置说明\" class=\"headerlink\" title=\"前置说明\"></a>前置说明</h3><ul>\n<li><code>IOS7</code>以后不能获取手机<code>IMEI</code></li>\n<li><code>Android</code>个别情况下无法获得<code>IMEI</code></li>\n</ul>\n<h3 id=\"获取android设备IMEI\"><a href=\"#获取android设备IMEI\" class=\"headerlink\" title=\"获取android设备IMEI\"></a>获取android设备IMEI</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install react-native-imei --save</span><br><span class=\"line\"><span class=\"meta\">#</span> or with yarn</span><br><span class=\"line\">yarn add react-native-imei</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自动配置\"><a href=\"#自动配置\" class=\"headerlink\" title=\"自动配置\"></a>自动配置</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">react-native link react-native-imei</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"手动配置\"><a href=\"#手动配置\" class=\"headerlink\" title=\"手动配置\"></a>手动配置</h4><ol>\n<li>在项目路径<code>{project}/android/</code>下找到<code>settings.gradle</code>文件，添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\">include <span class=\"string\">':react-native-imei'</span></span><br><span class=\"line\"></span><br><span class=\"line\">project(<span class=\"string\">':react-native-imei'</span>).projectDir =  <span class=\"keyword\">new</span>  File(rootProject.projectDir, <span class=\"string\">'../node_modules/react-native-imei/android'</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132707.png\" alt> </p>\n<ol start=\"2\">\n<li>在项目路径<code>{project}/android/app/</code>下找到<code>build.gradle</code>文件，添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\">compile <span class=\"title\">project</span><span class=\"params\">(<span class=\"string\">':react-native-imei'</span>)</span>    <span class=\"comment\">//-&gt; here</span></span></span><br><span class=\"line\"><span class=\"function\">    ...</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">...</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132713.png\" alt> </p>\n<ol start=\"3\">\n<li>在项目路径<code>{project}/android/app/src/main/java/com/app/</code>下找到<code>MainApplication.java</code>文件，添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> <span class=\"keyword\">implements</span> <span class=\"title\">ReactApplication</span>  </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReactNativeHost mReactNativeHost = <span class=\"keyword\">new</span> ReactNativeHost(<span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> List&lt;ReactPackage&gt; <span class=\"title\">getPackages</span><span class=\"params\">()</span>  </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> MainReactPackage(),</span><br><span class=\"line\">                <span class=\"keyword\">new</span> IMEI() <span class=\"comment\">//-&gt; here</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132721.png\" alt> </p>\n<h3 id=\"在项目中使用\"><a href=\"#在项目中使用\" class=\"headerlink\" title=\"在项目中使用\"></a>在项目中使用</h3><ol>\n<li>在项目中引入<code>react-native-imei</code></li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span>  IMEI  <span class=\"keyword\">from</span>  <span class=\"string\">'react-native-imei'</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>通过<code>IMEI.getImei()</code>方法获取当前设备IMEI</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">componentDidMount () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imei = Platform.OS === <span class=\"string\">'android'</span> ? IMEI.getImei() || <span class=\"string\">'android'</span> : <span class=\"string\">'ios'</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(imei)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>由于ios设备不支持IMEI所以我们直接写入<code>ios</code>字符串去辨别设备类型，当然你也可以定义其他的方式去做，都可以</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132726.png\" alt> </p>\n<p><strong>如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)</strong></p>\n"},{"title":"react-native 因图片打包太大问题","date":"2019-07-30T07:59:51.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/085345.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/085345.jpg) \n\n\n\n如果RN项目中碰到`生产包太大`的问题。我之前采用的是未处理过的png图片，所以打包后一个应用`android`下达到了**`44M`**，而`ios`已经达到了将近**`60M`**，这很明显是有问题（除非你的应用足够庞大那么这么大事正常的😆）。\n\n遇到这种问题首先想到的就是将包进行减压查看。发现问题就出现在图片`png`太多。思索后决定将应用的图片转成了`webp`的格式，折腾之后，重新打包`android`下**`减少将近26M`**，`ios`下**`减少将近38M`**。我使用的是[react-native-webp-support](https://github.com/TGPSKI/react-native-webp-support)第三方库去解决（`ios`端需要永到这个，安卓直接配置即可），因此将配置webp的方案记录下来，以供大家参考。\n\n\n\n### 当前环境\n\n*   OS: macOS High Sierra 10.13.5\n*   Node: 8.11.3\n*   Yarn: 1.7.0\n*   npm: 5.6.0\n*   Watchman: 4.9.0\n*   Xcode: Xcode 9.4.1\n*   react: 16.3.1 => 16.3.1\n*   react-native: 0.55.4 => 0.55.4\n*   react-native-splash-screen: 3.1.0 => 3.1.0\n\n\n\n### 兼容性\n\n- `android`平台下只需要修改配置`{project}/android/app/build.gradle`文件即可，不需要第三方模块支持\n- `ios`下需要引入`react-native-webp-support`进行配置\n\n\n\n### Android配置\n\n- 修改`{project}/android/app/`目录下的`build.gradle`文件\n\n\n```java\n...\n\ndependencies {\n\n  ...\n\n  compile 'com.facebook.fresco:webpsupport:0.11.0'\n\n  compile 'com.facebook.fresco:animated-webp:0.11.0'\n\n}\n\n...\n\n```\n\n- 配置如下图\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080132.png)\n\n\n\n### Ios配置\n\n`Ios`下比较麻烦，需要引入这个第三方库[react-native-webp-support](https://github.com/TGPSKI/react-native-webp-support)\n\n#### 安装第三方库\n\n```shell\n  npm install TGPSKI/react-native-webp-support -S \n\n  # or with yarn \n\n  yarn add TGPSKI/react-native-webp-support\n\n```\n\n\n\n#### Xcode中进行配置\n\n1. 用Xcode打开项目, 找到`Frameworks`目录，右键选择 `Add Files to [your project's name]`\n\n2. 添加`{project}/node_modules/react-native-webp-support/`下的`WebP.framework`和`WebPDemux.framework`目录\n\n3. 或者直接拖动到`Frameworks`下也行，这里我们假装自己很懂的方式使用添加的方法去添加\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/083449.png) \n\n4. 将`$(SRCROOT)/../node_modules/react-native-webp-support`分别添加到`Build Settings`下的`Framework Search Paths`和`Header Search Paths`选项中\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080138.png) \n\n5. 在Xcode中, 找到`Libraries`目录，右键选择 `Add Files to [your project's name]`添加`ReactNativeWebp.xcodeproj`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080142.png) \n\n6. 找到`$(SRCROOT)/node_modules/react-native-webp-support`添加到`Libraries`中\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080145.png) \n\n7. 将`$(SRCROOT)/node_modules/react-native-webp-support/ReactNativeWebp.xcodeproj/Products/`下的`libReactNatveWebp.a`文件拖到`Build Phases`中的`Link Binary with Libraries`选项中\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080150.png) \n\n\n\n### 使用\n\n使用就比较简单了，将你现在用的png转化为webp的格式，文件引入直接使用`.webp`为后缀的文件即可\n\n关于转化`webp`方法可是使用[智图工具进行转化](https://zhitu.isux.us/index.php/preview/download)\n\n\n\n**如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)**","source":"_posts/react-native-因图片打包太大问题.md","raw":"---\ntitle: react-native 因图片打包太大问题\ndate: 2019-07-30 15:59:51\ntags: ReactNative\ncategories: 前端\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/085345.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/085345.jpg) \n\n\n\n如果RN项目中碰到`生产包太大`的问题。我之前采用的是未处理过的png图片，所以打包后一个应用`android`下达到了**`44M`**，而`ios`已经达到了将近**`60M`**，这很明显是有问题（除非你的应用足够庞大那么这么大事正常的😆）。\n\n遇到这种问题首先想到的就是将包进行减压查看。发现问题就出现在图片`png`太多。思索后决定将应用的图片转成了`webp`的格式，折腾之后，重新打包`android`下**`减少将近26M`**，`ios`下**`减少将近38M`**。我使用的是[react-native-webp-support](https://github.com/TGPSKI/react-native-webp-support)第三方库去解决（`ios`端需要永到这个，安卓直接配置即可），因此将配置webp的方案记录下来，以供大家参考。\n\n\n\n### 当前环境\n\n*   OS: macOS High Sierra 10.13.5\n*   Node: 8.11.3\n*   Yarn: 1.7.0\n*   npm: 5.6.0\n*   Watchman: 4.9.0\n*   Xcode: Xcode 9.4.1\n*   react: 16.3.1 => 16.3.1\n*   react-native: 0.55.4 => 0.55.4\n*   react-native-splash-screen: 3.1.0 => 3.1.0\n\n\n\n### 兼容性\n\n- `android`平台下只需要修改配置`{project}/android/app/build.gradle`文件即可，不需要第三方模块支持\n- `ios`下需要引入`react-native-webp-support`进行配置\n\n\n\n### Android配置\n\n- 修改`{project}/android/app/`目录下的`build.gradle`文件\n\n\n```java\n...\n\ndependencies {\n\n  ...\n\n  compile 'com.facebook.fresco:webpsupport:0.11.0'\n\n  compile 'com.facebook.fresco:animated-webp:0.11.0'\n\n}\n\n...\n\n```\n\n- 配置如下图\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080132.png)\n\n\n\n### Ios配置\n\n`Ios`下比较麻烦，需要引入这个第三方库[react-native-webp-support](https://github.com/TGPSKI/react-native-webp-support)\n\n#### 安装第三方库\n\n```shell\n  npm install TGPSKI/react-native-webp-support -S \n\n  # or with yarn \n\n  yarn add TGPSKI/react-native-webp-support\n\n```\n\n\n\n#### Xcode中进行配置\n\n1. 用Xcode打开项目, 找到`Frameworks`目录，右键选择 `Add Files to [your project's name]`\n\n2. 添加`{project}/node_modules/react-native-webp-support/`下的`WebP.framework`和`WebPDemux.framework`目录\n\n3. 或者直接拖动到`Frameworks`下也行，这里我们假装自己很懂的方式使用添加的方法去添加\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/083449.png) \n\n4. 将`$(SRCROOT)/../node_modules/react-native-webp-support`分别添加到`Build Settings`下的`Framework Search Paths`和`Header Search Paths`选项中\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080138.png) \n\n5. 在Xcode中, 找到`Libraries`目录，右键选择 `Add Files to [your project's name]`添加`ReactNativeWebp.xcodeproj`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080142.png) \n\n6. 找到`$(SRCROOT)/node_modules/react-native-webp-support`添加到`Libraries`中\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080145.png) \n\n7. 将`$(SRCROOT)/node_modules/react-native-webp-support/ReactNativeWebp.xcodeproj/Products/`下的`libReactNatveWebp.a`文件拖到`Build Phases`中的`Link Binary with Libraries`选项中\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080150.png) \n\n\n\n### 使用\n\n使用就比较简单了，将你现在用的png转化为webp的格式，文件引入直接使用`.webp`为后缀的文件即可\n\n关于转化`webp`方法可是使用[智图工具进行转化](https://zhitu.isux.us/index.php/preview/download)\n\n\n\n**如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)**","slug":"react-native-因图片打包太大问题","published":1,"updated":"2019-07-30T09:27:10.555Z","_id":"cjypkjpnz0006cdt5ghjnejtc","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/085345.jpg\" alt> </p>\n<p>如果RN项目中碰到<code>生产包太大</code>的问题。我之前采用的是未处理过的png图片，所以打包后一个应用<code>android</code>下达到了<strong><code>44M</code></strong>，而<code>ios</code>已经达到了将近<strong><code>60M</code></strong>，这很明显是有问题（除非你的应用足够庞大那么这么大事正常的😆）。</p>\n<p>遇到这种问题首先想到的就是将包进行减压查看。发现问题就出现在图片<code>png</code>太多。思索后决定将应用的图片转成了<code>webp</code>的格式，折腾之后，重新打包<code>android</code>下<strong><code>减少将近26M</code></strong>，<code>ios</code>下<strong><code>减少将近38M</code></strong>。我使用的是<a href=\"https://github.com/TGPSKI/react-native-webp-support\" target=\"_blank\" rel=\"noopener\">react-native-webp-support</a>第三方库去解决（<code>ios</code>端需要永到这个，安卓直接配置即可），因此将配置webp的方案记录下来，以供大家参考。</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-splash-screen: 3.1.0 =&gt; 3.1.0</li>\n</ul>\n<h3 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h3><ul>\n<li><code>android</code>平台下只需要修改配置<code>{project}/android/app/build.gradle</code>文件即可，不需要第三方模块支持</li>\n<li><code>ios</code>下需要引入<code>react-native-webp-support</code>进行配置</li>\n</ul>\n<h3 id=\"Android配置\"><a href=\"#Android配置\" class=\"headerlink\" title=\"Android配置\"></a>Android配置</h3><ul>\n<li>修改<code>{project}/android/app/</code>目录下的<code>build.gradle</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  compile <span class=\"string\">'com.facebook.fresco:webpsupport:0.11.0'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  compile <span class=\"string\">'com.facebook.fresco:animated-webp:0.11.0'</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置如下图</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080132.png\" alt></p>\n<h3 id=\"Ios配置\"><a href=\"#Ios配置\" class=\"headerlink\" title=\"Ios配置\"></a>Ios配置</h3><p><code>Ios</code>下比较麻烦，需要引入这个第三方库<a href=\"https://github.com/TGPSKI/react-native-webp-support\" target=\"_blank\" rel=\"noopener\">react-native-webp-support</a></p>\n<h4 id=\"安装第三方库\"><a href=\"#安装第三方库\" class=\"headerlink\" title=\"安装第三方库\"></a>安装第三方库</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install TGPSKI/react-native-webp-support -S </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> or with yarn </span><br><span class=\"line\"></span><br><span class=\"line\">yarn add TGPSKI/react-native-webp-support</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Xcode中进行配置\"><a href=\"#Xcode中进行配置\" class=\"headerlink\" title=\"Xcode中进行配置\"></a>Xcode中进行配置</h4><ol>\n<li><p>用Xcode打开项目, 找到<code>Frameworks</code>目录，右键选择 <code>Add Files to [your project&#39;s name]</code></p>\n</li>\n<li><p>添加<code>{project}/node_modules/react-native-webp-support/</code>下的<code>WebP.framework</code>和<code>WebPDemux.framework</code>目录</p>\n</li>\n<li><p>或者直接拖动到<code>Frameworks</code>下也行，这里我们假装自己很懂的方式使用添加的方法去添加</p>\n</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/083449.png\" alt> </p>\n<ol start=\"4\">\n<li>将<code>$(SRCROOT)/../node_modules/react-native-webp-support</code>分别添加到<code>Build Settings</code>下的<code>Framework Search Paths</code>和<code>Header Search Paths</code>选项中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080138.png\" alt> </p>\n<ol start=\"5\">\n<li>在Xcode中, 找到<code>Libraries</code>目录，右键选择 <code>Add Files to [your project&#39;s name]</code>添加<code>ReactNativeWebp.xcodeproj</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080142.png\" alt> </p>\n<ol start=\"6\">\n<li>找到<code>$(SRCROOT)/node_modules/react-native-webp-support</code>添加到<code>Libraries</code>中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080145.png\" alt> </p>\n<ol start=\"7\">\n<li>将<code>$(SRCROOT)/node_modules/react-native-webp-support/ReactNativeWebp.xcodeproj/Products/</code>下的<code>libReactNatveWebp.a</code>文件拖到<code>Build Phases</code>中的<code>Link Binary with Libraries</code>选项中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080150.png\" alt> </p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>使用就比较简单了，将你现在用的png转化为webp的格式，文件引入直接使用<code>.webp</code>为后缀的文件即可</p>\n<p>关于转化<code>webp</code>方法可是使用<a href=\"https://zhitu.isux.us/index.php/preview/download\" target=\"_blank\" rel=\"noopener\">智图工具进行转化</a></p>\n<p><strong>如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/085345.jpg\" alt> </p>\n<p>如果RN项目中碰到<code>生产包太大</code>的问题。我之前采用的是未处理过的png图片，所以打包后一个应用<code>android</code>下达到了<strong><code>44M</code></strong>，而<code>ios</code>已经达到了将近<strong><code>60M</code></strong>，这很明显是有问题（除非你的应用足够庞大那么这么大事正常的😆）。</p>\n<p>遇到这种问题首先想到的就是将包进行减压查看。发现问题就出现在图片<code>png</code>太多。思索后决定将应用的图片转成了<code>webp</code>的格式，折腾之后，重新打包<code>android</code>下<strong><code>减少将近26M</code></strong>，<code>ios</code>下<strong><code>减少将近38M</code></strong>。我使用的是<a href=\"https://github.com/TGPSKI/react-native-webp-support\" target=\"_blank\" rel=\"noopener\">react-native-webp-support</a>第三方库去解决（<code>ios</code>端需要永到这个，安卓直接配置即可），因此将配置webp的方案记录下来，以供大家参考。</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-splash-screen: 3.1.0 =&gt; 3.1.0</li>\n</ul>\n<h3 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h3><ul>\n<li><code>android</code>平台下只需要修改配置<code>{project}/android/app/build.gradle</code>文件即可，不需要第三方模块支持</li>\n<li><code>ios</code>下需要引入<code>react-native-webp-support</code>进行配置</li>\n</ul>\n<h3 id=\"Android配置\"><a href=\"#Android配置\" class=\"headerlink\" title=\"Android配置\"></a>Android配置</h3><ul>\n<li>修改<code>{project}/android/app/</code>目录下的<code>build.gradle</code>文件</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  compile <span class=\"string\">'com.facebook.fresco:webpsupport:0.11.0'</span></span><br><span class=\"line\"></span><br><span class=\"line\">  compile <span class=\"string\">'com.facebook.fresco:animated-webp:0.11.0'</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置如下图</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080132.png\" alt></p>\n<h3 id=\"Ios配置\"><a href=\"#Ios配置\" class=\"headerlink\" title=\"Ios配置\"></a>Ios配置</h3><p><code>Ios</code>下比较麻烦，需要引入这个第三方库<a href=\"https://github.com/TGPSKI/react-native-webp-support\" target=\"_blank\" rel=\"noopener\">react-native-webp-support</a></p>\n<h4 id=\"安装第三方库\"><a href=\"#安装第三方库\" class=\"headerlink\" title=\"安装第三方库\"></a>安装第三方库</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install TGPSKI/react-native-webp-support -S </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> or with yarn </span><br><span class=\"line\"></span><br><span class=\"line\">yarn add TGPSKI/react-native-webp-support</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Xcode中进行配置\"><a href=\"#Xcode中进行配置\" class=\"headerlink\" title=\"Xcode中进行配置\"></a>Xcode中进行配置</h4><ol>\n<li><p>用Xcode打开项目, 找到<code>Frameworks</code>目录，右键选择 <code>Add Files to [your project&#39;s name]</code></p>\n</li>\n<li><p>添加<code>{project}/node_modules/react-native-webp-support/</code>下的<code>WebP.framework</code>和<code>WebPDemux.framework</code>目录</p>\n</li>\n<li><p>或者直接拖动到<code>Frameworks</code>下也行，这里我们假装自己很懂的方式使用添加的方法去添加</p>\n</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/083449.png\" alt> </p>\n<ol start=\"4\">\n<li>将<code>$(SRCROOT)/../node_modules/react-native-webp-support</code>分别添加到<code>Build Settings</code>下的<code>Framework Search Paths</code>和<code>Header Search Paths</code>选项中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080138.png\" alt> </p>\n<ol start=\"5\">\n<li>在Xcode中, 找到<code>Libraries</code>目录，右键选择 <code>Add Files to [your project&#39;s name]</code>添加<code>ReactNativeWebp.xcodeproj</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080142.png\" alt> </p>\n<ol start=\"6\">\n<li>找到<code>$(SRCROOT)/node_modules/react-native-webp-support</code>添加到<code>Libraries</code>中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080145.png\" alt> </p>\n<ol start=\"7\">\n<li>将<code>$(SRCROOT)/node_modules/react-native-webp-support/ReactNativeWebp.xcodeproj/Products/</code>下的<code>libReactNatveWebp.a</code>文件拖到<code>Build Phases</code>中的<code>Link Binary with Libraries</code>选项中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/080150.png\" alt> </p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>使用就比较简单了，将你现在用的png转化为webp的格式，文件引入直接使用<code>.webp</code>为后缀的文件即可</p>\n<p>关于转化<code>webp</code>方法可是使用<a href=\"https://zhitu.isux.us/index.php/preview/download\" target=\"_blank\" rel=\"noopener\">智图工具进行转化</a></p>\n<p><strong>如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)</strong></p>\n"},{"title":"react-native 配置启动图（闪屏图）支持ios和android","date":"2019-07-30T08:37:05.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/120857.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/120857.jpg)\n\n\n\n配置启动图我使用的是第三方模块`react-native-splash-screen`,更加详细的请到 [github地址](https://github.com/crazycodeboy/react-native-splash-screen)进一步查看，我们这里提供基本的配置以及个别问题的解决方案\n\n\n\n### 当前环境\n\n*   OS: macOS High Sierra 10.13.5\n*   Node: 8.11.3\n*   Yarn: 1.7.0\n*   npm: 5.6.0\n*   Watchman: 4.9.0\n*   Xcode: Xcode 9.4.1\n*   react: 16.3.1 => 16.3.1\n*   react-native: 0.55.4 => 0.55.4\n*   react-native-splash-screen: 3.1.0 => 3.1.0\n\n\n\n### 安装第三方模块\n\n```shell\nyarn add react-native-splash-screen\n# or\nnpm install react-native-splash-screen -S\n```\n\n\n### 自动配置\n\n```\nreact-native link react-native-splash-screen\n# or\nrnpm link react-native-splash-screen\n```\n\n\n\n### 手动配置\n\n`如果自动配置不成功，则需要手动一步步配置，配置不难，其实也是很快捷方便的`\n\n#### Ios配置\n\n1. 用Xcode打开项目, 找到`Libraries`目录，右键选择 `Add Files to [your project's name]`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125749.png) \n\n2. 在`{project}/node_modules/react-native-splash-screen/ios`找到`SplashScreen.xcodeproj`文件，并添加\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125755.png) \n\n3. 在XCode中，选择你的项目， 选择`bilid Phases`并将`SplashScreen.xcodeproj/Products/libSplashScreen.a`文件添加到`Link Binary With Libraries`中,拖过去即可\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125758.png) \n\n4. 添加搜索路径：在项目 → Build Settings → Search Paths → Header Search Paths处添加一项为`$(SRCROOT)/../node_modules/react-native-splash-screen/ios`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125804.png) \n\n\n\n#### Android配置\n\n1. 在项目目录`{prject}/android/`下找到`settings.gradle`文件添加一下内容\n\n```java\n...\n\ninclude ':react-native-splash-screen'   \nproject(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')\n\n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125809.png) \n\n2. 在项目目录`{prject}/android/app/`下找到`build.gradle`文件添加`compile project(':react-native-splash-screen')`\n\n\n```java\n...\n  \ndependencies {\n    ...\n    compile project(':react-native-splash-screen')\n}\n\n...\n```\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125817.png) \n\n3. 找到项目目录`{project}/android/app/src/main/java/com/app/`下`MainApplication.java`文件，引入`import org.devio.rn.splashscreen.SplashScreenReactPackage;`并添加`new SplashScreenReactPackage()`\n\n\n```java\n...\n    \nimport org.devio.rn.splashscreen.SplashScreenReactPackage;\n\npublic class MainApplication extends Application implements ReactApplication {\n    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n        ...\n        @Override\n        protected List<ReactPackage> getPackages() {\n            return Arrays.<ReactPackage>asList(\n                new SplashScreenReactPackage()  //here\n            );\n        }\n        ...\n    };\n}\n\n...\n```\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125823.png) \n\n\n\n### 启动图相关配置\n\n#### 配置Ios启动图\n\n1. 找到项目目录`{project}/ios/{project}/`下`AppDelegate.m`文件，引入`#import  \"SplashScreen.h\"`添加内容如下\n\n```c++\n...\n\n#import  \"SplashScreen.h\"    // here\n\n...\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    ...\n    [SplashScreen show];    // here\n    ...\n    return YES;\n}\n\n@end\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125830.png) \n\n2. 在XCode中, 点击`App/Images.xcassrts`通过`LaunchImage`添加启动图片\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125835.png) \n\n3. 在XCode中，选择你的项目， 选择`General`找到`App Icons and Launch Images`下的`Launch Images Sourc`选择你设置好的`LaunchImage`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125840.png) \n\n4. 如出现错误`# unknown receiver 'SplashScreen'; did you mean 'RNSplashScreen'`, 则改动源码以及`AppDelegate.m`文件如下\n\n5. 源码改动: 找到`{project}/node_modules/react-native-splash-screen/ios`文件夹下的`RNSplashScreen.m`文件，将其`[SplashScreen show];`修改为`[RNSplashScreen show];`,如下图\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125846.png) \n\n6. `AppDelegate.m`文件改动: 找到项目目录`{project}/ios/{project}/`下`AppDelegate.m`文件，将所有`SplashScreen`改为`RNSplashScreen`即可，如下图\n\n​\t\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/130203.png) \n\n\n\n7. 重启尝试是否有其他问题，修改源码地址可查看我的[Github](https://github.com/AaronBank/react-native-splash-screen)项目地址，更多问题请查看官方[issues](https://github.com/crazycodeboy/react-native-splash-screen/issues)\n\n\n\n#### 配置Android启动图\n\n1. 在项目目录`{prject}/android/app/src/main/res/`下创建`layout`文件夹\n\n2. 在`layout`文件夹下创建`launch_screen.xml`添加一下内容\n\n```XML\n<xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@drawable/launch_screen\"\n>\n</LinearLayout>\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125849.png) \n\n3. 将你的启动图改名为`launch_screen.png`并添加到`{prject}/android/app/src/main/res/`文件夹下相应的`drawable`文件夹中（根据需求配置相应大小的文件夹）\n\n- `drawable-ldpi`\n- `drawable-mdpi`\n- `drawable-hdpi`\n- `drawable-xhdpi`\n- `drawable-xxhdpi`\n- `drawable-xxxhdpi`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125851.png) \n\n4. 在`{prject}/android/app/src/main/res/values/`文件夹下修改名为添加一个名为`primary_dark`的属性并设置其颜，添加内容如下\n\n```xml\n...\n<color name=\"primary_dark\">#000000</color>\n...\n```\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125857.png) \n\n5. 如果您希望启动屏幕透明，打开`{prject}/android/app/src/main/res/values/styles.xml`并添加`<item name=\"android:windowIsTranslucent\">trueitem>`到文件中\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125900.png) \n\n\n\n### 在项目中关闭启动图\n\n\n> 配置完毕之后重启你的app发现启动图已经展现出来了但是迟迟没有关闭\n> 我们需要在项目中进行控制，将他在合适的时候进行关闭，方法如下：\n\n1. 首先引入进行模块`import SplashScreen from 'react-native-splash-screen'`\n\n2. 使用`SplashScreen.hide()`方法将其关闭\n\n```javascript\nimport SplashScreen from 'react-native-splash-screen'\n\nexport default class App extends Component {\n    componentDidMount() {\n        // do stuff while splash screen is shown\n        // After having done stuff (such as async tasks) hide the splash screen\n        SplashScreen.hide();\n    }\n}\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125904.png) \n\n\n\n**如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)**","source":"_posts/react-native-配置启动图（闪屏图）支持ios和android.md","raw":"---\ntitle: react-native 配置启动图（闪屏图）支持ios和android\ndate: 2019-07-30 16:37:05\ntags: ReactNative\ncategories: 前端\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/120857.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/120857.jpg)\n\n\n\n配置启动图我使用的是第三方模块`react-native-splash-screen`,更加详细的请到 [github地址](https://github.com/crazycodeboy/react-native-splash-screen)进一步查看，我们这里提供基本的配置以及个别问题的解决方案\n\n\n\n### 当前环境\n\n*   OS: macOS High Sierra 10.13.5\n*   Node: 8.11.3\n*   Yarn: 1.7.0\n*   npm: 5.6.0\n*   Watchman: 4.9.0\n*   Xcode: Xcode 9.4.1\n*   react: 16.3.1 => 16.3.1\n*   react-native: 0.55.4 => 0.55.4\n*   react-native-splash-screen: 3.1.0 => 3.1.0\n\n\n\n### 安装第三方模块\n\n```shell\nyarn add react-native-splash-screen\n# or\nnpm install react-native-splash-screen -S\n```\n\n\n### 自动配置\n\n```\nreact-native link react-native-splash-screen\n# or\nrnpm link react-native-splash-screen\n```\n\n\n\n### 手动配置\n\n`如果自动配置不成功，则需要手动一步步配置，配置不难，其实也是很快捷方便的`\n\n#### Ios配置\n\n1. 用Xcode打开项目, 找到`Libraries`目录，右键选择 `Add Files to [your project's name]`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125749.png) \n\n2. 在`{project}/node_modules/react-native-splash-screen/ios`找到`SplashScreen.xcodeproj`文件，并添加\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125755.png) \n\n3. 在XCode中，选择你的项目， 选择`bilid Phases`并将`SplashScreen.xcodeproj/Products/libSplashScreen.a`文件添加到`Link Binary With Libraries`中,拖过去即可\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125758.png) \n\n4. 添加搜索路径：在项目 → Build Settings → Search Paths → Header Search Paths处添加一项为`$(SRCROOT)/../node_modules/react-native-splash-screen/ios`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125804.png) \n\n\n\n#### Android配置\n\n1. 在项目目录`{prject}/android/`下找到`settings.gradle`文件添加一下内容\n\n```java\n...\n\ninclude ':react-native-splash-screen'   \nproject(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')\n\n...\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125809.png) \n\n2. 在项目目录`{prject}/android/app/`下找到`build.gradle`文件添加`compile project(':react-native-splash-screen')`\n\n\n```java\n...\n  \ndependencies {\n    ...\n    compile project(':react-native-splash-screen')\n}\n\n...\n```\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125817.png) \n\n3. 找到项目目录`{project}/android/app/src/main/java/com/app/`下`MainApplication.java`文件，引入`import org.devio.rn.splashscreen.SplashScreenReactPackage;`并添加`new SplashScreenReactPackage()`\n\n\n```java\n...\n    \nimport org.devio.rn.splashscreen.SplashScreenReactPackage;\n\npublic class MainApplication extends Application implements ReactApplication {\n    private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n        ...\n        @Override\n        protected List<ReactPackage> getPackages() {\n            return Arrays.<ReactPackage>asList(\n                new SplashScreenReactPackage()  //here\n            );\n        }\n        ...\n    };\n}\n\n...\n```\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125823.png) \n\n\n\n### 启动图相关配置\n\n#### 配置Ios启动图\n\n1. 找到项目目录`{project}/ios/{project}/`下`AppDelegate.m`文件，引入`#import  \"SplashScreen.h\"`添加内容如下\n\n```c++\n...\n\n#import  \"SplashScreen.h\"    // here\n\n...\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    ...\n    [SplashScreen show];    // here\n    ...\n    return YES;\n}\n\n@end\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125830.png) \n\n2. 在XCode中, 点击`App/Images.xcassrts`通过`LaunchImage`添加启动图片\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125835.png) \n\n3. 在XCode中，选择你的项目， 选择`General`找到`App Icons and Launch Images`下的`Launch Images Sourc`选择你设置好的`LaunchImage`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125840.png) \n\n4. 如出现错误`# unknown receiver 'SplashScreen'; did you mean 'RNSplashScreen'`, 则改动源码以及`AppDelegate.m`文件如下\n\n5. 源码改动: 找到`{project}/node_modules/react-native-splash-screen/ios`文件夹下的`RNSplashScreen.m`文件，将其`[SplashScreen show];`修改为`[RNSplashScreen show];`,如下图\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125846.png) \n\n6. `AppDelegate.m`文件改动: 找到项目目录`{project}/ios/{project}/`下`AppDelegate.m`文件，将所有`SplashScreen`改为`RNSplashScreen`即可，如下图\n\n​\t\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/130203.png) \n\n\n\n7. 重启尝试是否有其他问题，修改源码地址可查看我的[Github](https://github.com/AaronBank/react-native-splash-screen)项目地址，更多问题请查看官方[issues](https://github.com/crazycodeboy/react-native-splash-screen/issues)\n\n\n\n#### 配置Android启动图\n\n1. 在项目目录`{prject}/android/app/src/main/res/`下创建`layout`文件夹\n\n2. 在`layout`文件夹下创建`launch_screen.xml`添加一下内容\n\n```XML\n<xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@drawable/launch_screen\"\n>\n</LinearLayout>\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125849.png) \n\n3. 将你的启动图改名为`launch_screen.png`并添加到`{prject}/android/app/src/main/res/`文件夹下相应的`drawable`文件夹中（根据需求配置相应大小的文件夹）\n\n- `drawable-ldpi`\n- `drawable-mdpi`\n- `drawable-hdpi`\n- `drawable-xhdpi`\n- `drawable-xxhdpi`\n- `drawable-xxxhdpi`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125851.png) \n\n4. 在`{prject}/android/app/src/main/res/values/`文件夹下修改名为添加一个名为`primary_dark`的属性并设置其颜，添加内容如下\n\n```xml\n...\n<color name=\"primary_dark\">#000000</color>\n...\n```\n\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125857.png) \n\n5. 如果您希望启动屏幕透明，打开`{prject}/android/app/src/main/res/values/styles.xml`并添加`<item name=\"android:windowIsTranslucent\">trueitem>`到文件中\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125900.png) \n\n\n\n### 在项目中关闭启动图\n\n\n> 配置完毕之后重启你的app发现启动图已经展现出来了但是迟迟没有关闭\n> 我们需要在项目中进行控制，将他在合适的时候进行关闭，方法如下：\n\n1. 首先引入进行模块`import SplashScreen from 'react-native-splash-screen'`\n\n2. 使用`SplashScreen.hide()`方法将其关闭\n\n```javascript\nimport SplashScreen from 'react-native-splash-screen'\n\nexport default class App extends Component {\n    componentDidMount() {\n        // do stuff while splash screen is shown\n        // After having done stuff (such as async tasks) hide the splash screen\n        SplashScreen.hide();\n    }\n}\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125904.png) \n\n\n\n**如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)**","slug":"react-native-配置启动图（闪屏图）支持ios和android","published":1,"updated":"2019-07-30T14:23:10.349Z","_id":"cjypkjpo10008cdt5uyoh7ml2","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/120857.jpg\" alt></p>\n<p>配置启动图我使用的是第三方模块<code>react-native-splash-screen</code>,更加详细的请到 <a href=\"https://github.com/crazycodeboy/react-native-splash-screen\" target=\"_blank\" rel=\"noopener\">github地址</a>进一步查看，我们这里提供基本的配置以及个别问题的解决方案</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-splash-screen: 3.1.0 =&gt; 3.1.0</li>\n</ul>\n<h3 id=\"安装第三方模块\"><a href=\"#安装第三方模块\" class=\"headerlink\" title=\"安装第三方模块\"></a>安装第三方模块</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add react-native-splash-screen</span><br><span class=\"line\"><span class=\"meta\">#</span> or</span><br><span class=\"line\">npm install react-native-splash-screen -S</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动配置\"><a href=\"#自动配置\" class=\"headerlink\" title=\"自动配置\"></a>自动配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">react-native link react-native-splash-screen</span><br><span class=\"line\"># or</span><br><span class=\"line\">rnpm link react-native-splash-screen</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"手动配置\"><a href=\"#手动配置\" class=\"headerlink\" title=\"手动配置\"></a>手动配置</h3><p><code>如果自动配置不成功，则需要手动一步步配置，配置不难，其实也是很快捷方便的</code></p>\n<h4 id=\"Ios配置\"><a href=\"#Ios配置\" class=\"headerlink\" title=\"Ios配置\"></a>Ios配置</h4><ol>\n<li>用Xcode打开项目, 找到<code>Libraries</code>目录，右键选择 <code>Add Files to [your project&#39;s name]</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125749.png\" alt> </p>\n<ol start=\"2\">\n<li>在<code>{project}/node_modules/react-native-splash-screen/ios</code>找到<code>SplashScreen.xcodeproj</code>文件，并添加</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125755.png\" alt> </p>\n<ol start=\"3\">\n<li>在XCode中，选择你的项目， 选择<code>bilid Phases</code>并将<code>SplashScreen.xcodeproj/Products/libSplashScreen.a</code>文件添加到<code>Link Binary With Libraries</code>中,拖过去即可</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125758.png\" alt> </p>\n<ol start=\"4\">\n<li>添加搜索路径：在项目 → Build Settings → Search Paths → Header Search Paths处添加一项为<code>$(SRCROOT)/../node_modules/react-native-splash-screen/ios</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125804.png\" alt> </p>\n<h4 id=\"Android配置\"><a href=\"#Android配置\" class=\"headerlink\" title=\"Android配置\"></a>Android配置</h4><ol>\n<li>在项目目录<code>{prject}/android/</code>下找到<code>settings.gradle</code>文件添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">include <span class=\"string\">':react-native-splash-screen'</span>   </span><br><span class=\"line\">project(<span class=\"string\">':react-native-splash-screen'</span>).projectDir = <span class=\"keyword\">new</span> File(rootProject.projectDir, <span class=\"string\">'../node_modules/react-native-splash-screen/android'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125809.png\" alt> </p>\n<ol start=\"2\">\n<li>在项目目录<code>{prject}/android/app/</code>下找到<code>build.gradle</code>文件添加<code>compile project(&#39;:react-native-splash-screen&#39;)</code></li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\">compile <span class=\"title\">project</span><span class=\"params\">(<span class=\"string\">':react-native-splash-screen'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">...</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125817.png\" alt> </p>\n<ol start=\"3\">\n<li>找到项目目录<code>{project}/android/app/src/main/java/com/app/</code>下<code>MainApplication.java</code>文件，引入<code>import org.devio.rn.splashscreen.SplashScreenReactPackage;</code>并添加<code>new SplashScreenReactPackage()</code></li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.devio.rn.splashscreen.SplashScreenReactPackage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> <span class=\"keyword\">implements</span> <span class=\"title\">ReactApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReactNativeHost mReactNativeHost = <span class=\"keyword\">new</span> ReactNativeHost(<span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> List&lt;ReactPackage&gt; <span class=\"title\">getPackages</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> SplashScreenReactPackage()  <span class=\"comment\">//here</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125823.png\" alt> </p>\n<h3 id=\"启动图相关配置\"><a href=\"#启动图相关配置\" class=\"headerlink\" title=\"启动图相关配置\"></a>启动图相关配置</h3><h4 id=\"配置Ios启动图\"><a href=\"#配置Ios启动图\" class=\"headerlink\" title=\"配置Ios启动图\"></a>配置Ios启动图</h4><ol>\n<li>找到项目目录<code>{project}/ios/{project}/</code>下<code>AppDelegate.m</code>文件，引入<code>#import  &quot;SplashScreen.h&quot;</code>添加内容如下</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import  <span class=\"meta-string\">\"SplashScreen.h\"</span>    <span class=\"comment\">// here</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    [SplashScreen show];    <span class=\"comment\">// here</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> YES;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125830.png\" alt> </p>\n<ol start=\"2\">\n<li>在XCode中, 点击<code>App/Images.xcassrts</code>通过<code>LaunchImage</code>添加启动图片</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125835.png\" alt> </p>\n<ol start=\"3\">\n<li>在XCode中，选择你的项目， 选择<code>General</code>找到<code>App Icons and Launch Images</code>下的<code>Launch Images Sourc</code>选择你设置好的<code>LaunchImage</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125840.png\" alt> </p>\n<ol start=\"4\">\n<li><p>如出现错误<code># unknown receiver &#39;SplashScreen&#39;; did you mean &#39;RNSplashScreen&#39;</code>, 则改动源码以及<code>AppDelegate.m</code>文件如下</p>\n</li>\n<li><p>源码改动: 找到<code>{project}/node_modules/react-native-splash-screen/ios</code>文件夹下的<code>RNSplashScreen.m</code>文件，将其<code>[SplashScreen show];</code>修改为<code>[RNSplashScreen show];</code>,如下图</p>\n</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125846.png\" alt> </p>\n<ol start=\"6\">\n<li><code>AppDelegate.m</code>文件改动: 找到项目目录<code>{project}/ios/{project}/</code>下<code>AppDelegate.m</code>文件，将所有<code>SplashScreen</code>改为<code>RNSplashScreen</code>即可，如下图</li>\n</ol>\n<p>​    </p>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/130203.png\" alt> </p>\n<ol start=\"7\">\n<li>重启尝试是否有其他问题，修改源码地址可查看我的<a href=\"https://github.com/AaronBank/react-native-splash-screen\" target=\"_blank\" rel=\"noopener\">Github</a>项目地址，更多问题请查看官方<a href=\"https://github.com/crazycodeboy/react-native-splash-screen/issues\" target=\"_blank\" rel=\"noopener\">issues</a></li>\n</ol>\n<h4 id=\"配置Android启动图\"><a href=\"#配置Android启动图\" class=\"headerlink\" title=\"配置Android启动图\"></a>配置Android启动图</h4><ol>\n<li><p>在项目目录<code>{prject}/android/app/src/main/res/</code>下创建<code>layout</code>文件夹</p>\n</li>\n<li><p>在<code>layout</code>文件夹下创建<code>launch_screen.xml</code>添加一下内容</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xml</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span> <span class=\"attr\">encoding</span>=<span class=\"string\">\"utf-8\"</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/launch_screen\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125849.png\" alt> </p>\n<ol start=\"3\">\n<li>将你的启动图改名为<code>launch_screen.png</code>并添加到<code>{prject}/android/app/src/main/res/</code>文件夹下相应的<code>drawable</code>文件夹中（根据需求配置相应大小的文件夹）</li>\n</ol>\n<ul>\n<li><code>drawable-ldpi</code></li>\n<li><code>drawable-mdpi</code></li>\n<li><code>drawable-hdpi</code></li>\n<li><code>drawable-xhdpi</code></li>\n<li><code>drawable-xxhdpi</code></li>\n<li><code>drawable-xxxhdpi</code></li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125851.png\" alt> </p>\n<ol start=\"4\">\n<li>在<code>{prject}/android/app/src/main/res/values/</code>文件夹下修改名为添加一个名为<code>primary_dark</code>的属性并设置其颜，添加内容如下</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">\"primary_dark\"</span>&gt;</span>#000000<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125857.png\" alt> </p>\n<ol start=\"5\">\n<li>如果您希望启动屏幕透明，打开<code>{prject}/android/app/src/main/res/values/styles.xml</code>并添加<code>&lt;item name=&quot;android:windowIsTranslucent&quot;&gt;trueitem&gt;</code>到文件中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125900.png\" alt> </p>\n<h3 id=\"在项目中关闭启动图\"><a href=\"#在项目中关闭启动图\" class=\"headerlink\" title=\"在项目中关闭启动图\"></a>在项目中关闭启动图</h3><blockquote>\n<p>配置完毕之后重启你的app发现启动图已经展现出来了但是迟迟没有关闭<br>我们需要在项目中进行控制，将他在合适的时候进行关闭，方法如下：</p>\n</blockquote>\n<ol>\n<li><p>首先引入进行模块<code>import SplashScreen from &#39;react-native-splash-screen&#39;</code></p>\n</li>\n<li><p>使用<code>SplashScreen.hide()</code>方法将其关闭</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> SplashScreen <span class=\"keyword\">from</span> <span class=\"string\">'react-native-splash-screen'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    componentDidMount() &#123;</span><br><span class=\"line\">        <span class=\"comment\">// do stuff while splash screen is shown</span></span><br><span class=\"line\">        <span class=\"comment\">// After having done stuff (such as async tasks) hide the splash screen</span></span><br><span class=\"line\">        SplashScreen.hide();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125904.png\" alt> </p>\n<p><strong>如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/120857.jpg\" alt></p>\n<p>配置启动图我使用的是第三方模块<code>react-native-splash-screen</code>,更加详细的请到 <a href=\"https://github.com/crazycodeboy/react-native-splash-screen\" target=\"_blank\" rel=\"noopener\">github地址</a>进一步查看，我们这里提供基本的配置以及个别问题的解决方案</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n<li>react-native-splash-screen: 3.1.0 =&gt; 3.1.0</li>\n</ul>\n<h3 id=\"安装第三方模块\"><a href=\"#安装第三方模块\" class=\"headerlink\" title=\"安装第三方模块\"></a>安装第三方模块</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add react-native-splash-screen</span><br><span class=\"line\"><span class=\"meta\">#</span> or</span><br><span class=\"line\">npm install react-native-splash-screen -S</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自动配置\"><a href=\"#自动配置\" class=\"headerlink\" title=\"自动配置\"></a>自动配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">react-native link react-native-splash-screen</span><br><span class=\"line\"># or</span><br><span class=\"line\">rnpm link react-native-splash-screen</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"手动配置\"><a href=\"#手动配置\" class=\"headerlink\" title=\"手动配置\"></a>手动配置</h3><p><code>如果自动配置不成功，则需要手动一步步配置，配置不难，其实也是很快捷方便的</code></p>\n<h4 id=\"Ios配置\"><a href=\"#Ios配置\" class=\"headerlink\" title=\"Ios配置\"></a>Ios配置</h4><ol>\n<li>用Xcode打开项目, 找到<code>Libraries</code>目录，右键选择 <code>Add Files to [your project&#39;s name]</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125749.png\" alt> </p>\n<ol start=\"2\">\n<li>在<code>{project}/node_modules/react-native-splash-screen/ios</code>找到<code>SplashScreen.xcodeproj</code>文件，并添加</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125755.png\" alt> </p>\n<ol start=\"3\">\n<li>在XCode中，选择你的项目， 选择<code>bilid Phases</code>并将<code>SplashScreen.xcodeproj/Products/libSplashScreen.a</code>文件添加到<code>Link Binary With Libraries</code>中,拖过去即可</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125758.png\" alt> </p>\n<ol start=\"4\">\n<li>添加搜索路径：在项目 → Build Settings → Search Paths → Header Search Paths处添加一项为<code>$(SRCROOT)/../node_modules/react-native-splash-screen/ios</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125804.png\" alt> </p>\n<h4 id=\"Android配置\"><a href=\"#Android配置\" class=\"headerlink\" title=\"Android配置\"></a>Android配置</h4><ol>\n<li>在项目目录<code>{prject}/android/</code>下找到<code>settings.gradle</code>文件添加一下内容</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">include <span class=\"string\">':react-native-splash-screen'</span>   </span><br><span class=\"line\">project(<span class=\"string\">':react-native-splash-screen'</span>).projectDir = <span class=\"keyword\">new</span> File(rootProject.projectDir, <span class=\"string\">'../node_modules/react-native-splash-screen/android'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125809.png\" alt> </p>\n<ol start=\"2\">\n<li>在项目目录<code>{prject}/android/app/</code>下找到<code>build.gradle</code>文件添加<code>compile project(&#39;:react-native-splash-screen&#39;)</code></li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"function\">compile <span class=\"title\">project</span><span class=\"params\">(<span class=\"string\">':react-native-splash-screen'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">...</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125817.png\" alt> </p>\n<ol start=\"3\">\n<li>找到项目目录<code>{project}/android/app/src/main/java/com/app/</code>下<code>MainApplication.java</code>文件，引入<code>import org.devio.rn.splashscreen.SplashScreenReactPackage;</code>并添加<code>new SplashScreenReactPackage()</code></li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.devio.rn.splashscreen.SplashScreenReactPackage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> <span class=\"keyword\">implements</span> <span class=\"title\">ReactApplication</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReactNativeHost mReactNativeHost = <span class=\"keyword\">new</span> ReactNativeHost(<span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> List&lt;ReactPackage&gt; <span class=\"title\">getPackages</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> SplashScreenReactPackage()  <span class=\"comment\">//here</span></span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125823.png\" alt> </p>\n<h3 id=\"启动图相关配置\"><a href=\"#启动图相关配置\" class=\"headerlink\" title=\"启动图相关配置\"></a>启动图相关配置</h3><h4 id=\"配置Ios启动图\"><a href=\"#配置Ios启动图\" class=\"headerlink\" title=\"配置Ios启动图\"></a>配置Ios启动图</h4><ol>\n<li>找到项目目录<code>{project}/ios/{project}/</code>下<code>AppDelegate.m</code>文件，引入<code>#import  &quot;SplashScreen.h&quot;</code>添加内容如下</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import  <span class=\"meta-string\">\"SplashScreen.h\"</span>    <span class=\"comment\">// here</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    [SplashScreen show];    <span class=\"comment\">// here</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> YES;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125830.png\" alt> </p>\n<ol start=\"2\">\n<li>在XCode中, 点击<code>App/Images.xcassrts</code>通过<code>LaunchImage</code>添加启动图片</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125835.png\" alt> </p>\n<ol start=\"3\">\n<li>在XCode中，选择你的项目， 选择<code>General</code>找到<code>App Icons and Launch Images</code>下的<code>Launch Images Sourc</code>选择你设置好的<code>LaunchImage</code></li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125840.png\" alt> </p>\n<ol start=\"4\">\n<li><p>如出现错误<code># unknown receiver &#39;SplashScreen&#39;; did you mean &#39;RNSplashScreen&#39;</code>, 则改动源码以及<code>AppDelegate.m</code>文件如下</p>\n</li>\n<li><p>源码改动: 找到<code>{project}/node_modules/react-native-splash-screen/ios</code>文件夹下的<code>RNSplashScreen.m</code>文件，将其<code>[SplashScreen show];</code>修改为<code>[RNSplashScreen show];</code>,如下图</p>\n</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125846.png\" alt> </p>\n<ol start=\"6\">\n<li><code>AppDelegate.m</code>文件改动: 找到项目目录<code>{project}/ios/{project}/</code>下<code>AppDelegate.m</code>文件，将所有<code>SplashScreen</code>改为<code>RNSplashScreen</code>即可，如下图</li>\n</ol>\n<p>​    </p>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/130203.png\" alt> </p>\n<ol start=\"7\">\n<li>重启尝试是否有其他问题，修改源码地址可查看我的<a href=\"https://github.com/AaronBank/react-native-splash-screen\" target=\"_blank\" rel=\"noopener\">Github</a>项目地址，更多问题请查看官方<a href=\"https://github.com/crazycodeboy/react-native-splash-screen/issues\" target=\"_blank\" rel=\"noopener\">issues</a></li>\n</ol>\n<h4 id=\"配置Android启动图\"><a href=\"#配置Android启动图\" class=\"headerlink\" title=\"配置Android启动图\"></a>配置Android启动图</h4><ol>\n<li><p>在项目目录<code>{prject}/android/app/src/main/res/</code>下创建<code>layout</code>文件夹</p>\n</li>\n<li><p>在<code>layout</code>文件夹下创建<code>launch_screen.xml</code>添加一下内容</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">xml</span> <span class=\"attr\">version</span>=<span class=\"string\">\"1.0\"</span> <span class=\"attr\">encoding</span>=<span class=\"string\">\"utf-8\"</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/launch_screen\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125849.png\" alt> </p>\n<ol start=\"3\">\n<li>将你的启动图改名为<code>launch_screen.png</code>并添加到<code>{prject}/android/app/src/main/res/</code>文件夹下相应的<code>drawable</code>文件夹中（根据需求配置相应大小的文件夹）</li>\n</ol>\n<ul>\n<li><code>drawable-ldpi</code></li>\n<li><code>drawable-mdpi</code></li>\n<li><code>drawable-hdpi</code></li>\n<li><code>drawable-xhdpi</code></li>\n<li><code>drawable-xxhdpi</code></li>\n<li><code>drawable-xxxhdpi</code></li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125851.png\" alt> </p>\n<ol start=\"4\">\n<li>在<code>{prject}/android/app/src/main/res/values/</code>文件夹下修改名为添加一个名为<code>primary_dark</code>的属性并设置其颜，添加内容如下</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">color</span> <span class=\"attr\">name</span>=<span class=\"string\">\"primary_dark\"</span>&gt;</span>#000000<span class=\"tag\">&lt;/<span class=\"name\">color</span>&gt;</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125857.png\" alt> </p>\n<ol start=\"5\">\n<li>如果您希望启动屏幕透明，打开<code>{prject}/android/app/src/main/res/values/styles.xml</code>并添加<code>&lt;item name=&quot;android:windowIsTranslucent&quot;&gt;trueitem&gt;</code>到文件中</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125900.png\" alt> </p>\n<h3 id=\"在项目中关闭启动图\"><a href=\"#在项目中关闭启动图\" class=\"headerlink\" title=\"在项目中关闭启动图\"></a>在项目中关闭启动图</h3><blockquote>\n<p>配置完毕之后重启你的app发现启动图已经展现出来了但是迟迟没有关闭<br>我们需要在项目中进行控制，将他在合适的时候进行关闭，方法如下：</p>\n</blockquote>\n<ol>\n<li><p>首先引入进行模块<code>import SplashScreen from &#39;react-native-splash-screen&#39;</code></p>\n</li>\n<li><p>使用<code>SplashScreen.hide()</code>方法将其关闭</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> SplashScreen <span class=\"keyword\">from</span> <span class=\"string\">'react-native-splash-screen'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    componentDidMount() &#123;</span><br><span class=\"line\">        <span class=\"comment\">// do stuff while splash screen is shown</span></span><br><span class=\"line\">        <span class=\"comment\">// After having done stuff (such as async tasks) hide the splash screen</span></span><br><span class=\"line\">        SplashScreen.hide();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125904.png\" alt> </p>\n<p><strong>如果配置出现问题或者文章哪里写的不清楚，欢迎下方留言ヾ(￣▽￣)</strong></p>\n"},{"layout":"ubuntu","title":"Ubuntu 创建快捷启动","date":"2019-07-29T12:41:47.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/072847.png","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/124421.png) \n\n**以开发工具IDEA编辑器为例，顺便介绍一下如何在Ubuntu 中如何安装和配置快捷启动（因为每次都需要终端中打开很麻烦 (⁎⁍̴̛ᴗ⁍̴̛⁎)）**\n\n\n\n### IDEA安装\n\n1. 下载linux版本包\n  \n\t点击前往下载：[https://www.jetbrains.com/idea/download/#section=linux](https://www.jetbrains.com/idea/download/#section=linux)\n  \n2. cd 进入IDEA文件的目录位置(我的是下载在Downloads文件夹下)\n\n\t```\n\tcd ~/Downloads/\n\t```\n\t\n3. 减压并移动到/opt文件夹下\n\n\t```\n\tsudo tar -zxvf ideaIU-2018.1.4-no-jdk.tar.gz -C /opt\n\t```\n\t\n4. 启动\n\t\n\t```\n\tcd /opt/ideaIU-2018.1.4-no-jdk/bin/`\n\t\n\t./idea.sh\t\n\t```\n\n- **至此我想你已经看到了启动向导界面了  和往常一样使用就可以了**\n\n- **然而你会发现每次打开都需要执行`./idea.sh`这条命令才能打开，是不是很悲剧😫😫😫，下面说一下如何去配置快捷启动**\n\n\n\n### 配置快捷启动\n\n\n\n1. 首先你需要`/usr/share/`这个文件夹下\n\n    ```\n    cd /usr/share/\n    ```\n\n2. 创建一个后缀名为`desktop`的文件（名字你随意,我就叫他idea）\n\n\t```\n\tsudo gedit idea.desktop\n\t```\n\t\n3. 为文件添加内容\n\n\t\t```desktop\n\t[Desktop Entry]\n\tName = Idea\n\tExec = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.sh\n\tIcon = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.png\n\tTerminal = false\n\tType = Application\n\tCategories = Developer;\n\t```\n\n🍎🍎现在可以每次都双击图标就可以启动啦🍎🍎","source":"_posts/Ubuntu 创建快捷启动.md","raw":"---\nlayout: ubuntu\ntitle: Ubuntu 创建快捷启动\ndate: 2019-07-29 20:41:47\ntags: ubuntu\ncategories: 系统平台\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/072847.png\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/124421.png) \n\n**以开发工具IDEA编辑器为例，顺便介绍一下如何在Ubuntu 中如何安装和配置快捷启动（因为每次都需要终端中打开很麻烦 (⁎⁍̴̛ᴗ⁍̴̛⁎)）**\n\n\n\n### IDEA安装\n\n1. 下载linux版本包\n  \n\t点击前往下载：[https://www.jetbrains.com/idea/download/#section=linux](https://www.jetbrains.com/idea/download/#section=linux)\n  \n2. cd 进入IDEA文件的目录位置(我的是下载在Downloads文件夹下)\n\n\t```\n\tcd ~/Downloads/\n\t```\n\t\n3. 减压并移动到/opt文件夹下\n\n\t```\n\tsudo tar -zxvf ideaIU-2018.1.4-no-jdk.tar.gz -C /opt\n\t```\n\t\n4. 启动\n\t\n\t```\n\tcd /opt/ideaIU-2018.1.4-no-jdk/bin/`\n\t\n\t./idea.sh\t\n\t```\n\n- **至此我想你已经看到了启动向导界面了  和往常一样使用就可以了**\n\n- **然而你会发现每次打开都需要执行`./idea.sh`这条命令才能打开，是不是很悲剧😫😫😫，下面说一下如何去配置快捷启动**\n\n\n\n### 配置快捷启动\n\n\n\n1. 首先你需要`/usr/share/`这个文件夹下\n\n    ```\n    cd /usr/share/\n    ```\n\n2. 创建一个后缀名为`desktop`的文件（名字你随意,我就叫他idea）\n\n\t```\n\tsudo gedit idea.desktop\n\t```\n\t\n3. 为文件添加内容\n\n\t\t```desktop\n\t[Desktop Entry]\n\tName = Idea\n\tExec = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.sh\n\tIcon = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.png\n\tTerminal = false\n\tType = Application\n\tCategories = Developer;\n\t```\n\n🍎🍎现在可以每次都双击图标就可以启动啦🍎🍎","slug":"Ubuntu 创建快捷启动","published":1,"updated":"2019-07-30T07:29:00.688Z","_id":"cjypkjpo4000dcdt57nxkriya","comments":1,"photos":[],"link":"","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/124421.png\" alt> </p>\n<p><strong>以开发工具IDEA编辑器为例，顺便介绍一下如何在Ubuntu 中如何安装和配置快捷启动（因为每次都需要终端中打开很麻烦 (⁎⁍̴̛ᴗ⁍̴̛⁎)）</strong></p>\n<h3 id=\"IDEA安装\"><a href=\"#IDEA安装\" class=\"headerlink\" title=\"IDEA安装\"></a>IDEA安装</h3><ol>\n<li><p>下载linux版本包</p>\n<p> 点击前往下载：<a href=\"https://www.jetbrains.com/idea/download/#section=linux\" target=\"_blank\" rel=\"noopener\">https://www.jetbrains.com/idea/download/#section=linux</a></p>\n</li>\n<li><p>cd 进入IDEA文件的目录位置(我的是下载在Downloads文件夹下)</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/Downloads/</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>减压并移动到/opt文件夹下</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -zxvf ideaIU-2018.1.4-no-jdk.tar.gz -C /opt</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"4\">\n<li><p>启动</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /opt/ideaIU-2018.1.4-no-jdk/bin/`</span><br><span class=\"line\"></span><br><span class=\"line\">./idea.sh</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li><p><strong>至此我想你已经看到了启动向导界面了  和往常一样使用就可以了</strong></p>\n</li>\n<li><p><strong>然而你会发现每次打开都需要执行<code>./idea.sh</code>这条命令才能打开，是不是很悲剧😫😫😫，下面说一下如何去配置快捷启动</strong></p>\n</li>\n</ul>\n<h3 id=\"配置快捷启动\"><a href=\"#配置快捷启动\" class=\"headerlink\" title=\"配置快捷启动\"></a>配置快捷启动</h3><ol>\n<li><p>首先你需要<code>/usr/share/</code>这个文件夹下</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/share/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个后缀名为<code>desktop</code>的文件（名字你随意,我就叫他idea）</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit idea.desktop</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>为文件添加内容</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]</span><br><span class=\"line\">Name = Idea</span><br><span class=\"line\">Exec = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.sh</span><br><span class=\"line\">Icon = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.png</span><br><span class=\"line\">Terminal = false</span><br><span class=\"line\">Type = Application</span><br><span class=\"line\">Categories = Developer;</span><br></pre></td></tr></table></figure></code></pre></li>\n</ol>\n<p>🍎🍎现在可以每次都双击图标就可以启动啦🍎🍎</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/124421.png\" alt> </p>\n<p><strong>以开发工具IDEA编辑器为例，顺便介绍一下如何在Ubuntu 中如何安装和配置快捷启动（因为每次都需要终端中打开很麻烦 (⁎⁍̴̛ᴗ⁍̴̛⁎)）</strong></p>\n<h3 id=\"IDEA安装\"><a href=\"#IDEA安装\" class=\"headerlink\" title=\"IDEA安装\"></a>IDEA安装</h3><ol>\n<li><p>下载linux版本包</p>\n<p> 点击前往下载：<a href=\"https://www.jetbrains.com/idea/download/#section=linux\" target=\"_blank\" rel=\"noopener\">https://www.jetbrains.com/idea/download/#section=linux</a></p>\n</li>\n<li><p>cd 进入IDEA文件的目录位置(我的是下载在Downloads文件夹下)</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/Downloads/</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>减压并移动到/opt文件夹下</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -zxvf ideaIU-2018.1.4-no-jdk.tar.gz -C /opt</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"4\">\n<li><p>启动</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /opt/ideaIU-2018.1.4-no-jdk/bin/`</span><br><span class=\"line\"></span><br><span class=\"line\">./idea.sh</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li><p><strong>至此我想你已经看到了启动向导界面了  和往常一样使用就可以了</strong></p>\n</li>\n<li><p><strong>然而你会发现每次打开都需要执行<code>./idea.sh</code>这条命令才能打开，是不是很悲剧😫😫😫，下面说一下如何去配置快捷启动</strong></p>\n</li>\n</ul>\n<h3 id=\"配置快捷启动\"><a href=\"#配置快捷启动\" class=\"headerlink\" title=\"配置快捷启动\"></a>配置快捷启动</h3><ol>\n<li><p>首先你需要<code>/usr/share/</code>这个文件夹下</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/share/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个后缀名为<code>desktop</code>的文件（名字你随意,我就叫他idea）</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit idea.desktop</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>为文件添加内容</p>\n<pre><code><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]</span><br><span class=\"line\">Name = Idea</span><br><span class=\"line\">Exec = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.sh</span><br><span class=\"line\">Icon = /opt/ideaIU-2018.1.4-no-jdk/bin/idea.png</span><br><span class=\"line\">Terminal = false</span><br><span class=\"line\">Type = Application</span><br><span class=\"line\">Categories = Developer;</span><br></pre></td></tr></table></figure></code></pre></li>\n</ol>\n<p>🍎🍎现在可以每次都双击图标就可以启动啦🍎🍎</p>\n"},{"title":"面向对象从ES3到ES6+的继承方法总结以及对比","date":"2019-07-29T12:47:23.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/081804.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/081804.jpg)\n\n继承是面向对象中一个非常重要的概念，`Javascript`中可以实现继承，但不支持接口的继承。并且我们js中主要是`依赖原型链实现继承`的，下面说说从**es3**到**es5**中常见的几种继承方式。\n\n**首先**我们**假设**我们有两个类一个`Television`(电视)和`Computer`(电脑)\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nfunction Computer() {\n    this.name = '电脑'\n}\n```\n\n`Television`(电视)有个功能叫`play`(播放)，`Computer`(电脑)有个`compute`(计算)的功能。\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n  \nTelevision.prototype.play = function() {\n    alert('播放')\n}\n  \nfunction Computer() {\n    this.name = '电脑'\n}\n  \nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n然而我们知道`Computer`(电脑)也有`play`(播放)这个功能功能。那你会想到再给`Computer`(电脑)也添加一个`play`(播放)的功能不就好了，但是这样无形中浪费内存的资源，而且写起来也不比较繁琐，这不是我们想要的。这时候继承就出场了，而且实现继承的方式有很多种各有优缺点，接下来我们将每一种拿出来并对比一下他们的优缺点：\n\n\n\n### 原型链继承\n\n先上代码\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    this.name = '电脑'\n}\n\n//必须将这句写到上面否则下面的方法会被覆盖掉\nComputer.prototype = new Television()\n\n//因为new Television()实例没有constructor方法 所以我们要讲constructor指向Computer\nComputer.prototype.constructor = Computer\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n`[ 注意 ]` \n\n> 1. `Computer.prototype =  new Television()`必须写在子类定义原型方法(如现在的`compute`方法)之前,否则子类定义的原型方法会丢失（因为`Computer.prototype`指向堆内存地址变了嘛）。\n> 2. 因为父类`Television`生成的对象是没有constructor属性，所以给他加上（为啥没有？我就不用再详细说了吧 (〃'▽'〃)）\n\n\n`[ 优点 ]`\n\n-  实例是子类的实例，实际上也是父类的一个实例\n-  父类新增原型方法/原型属性，子类都能访问到\n\n`[ 缺点 ]`\n\n- 子类的实例的原型都共享同一个父类实例的属性和方法\n- 无法继承父类构造函数的属性及方法( new Computer().telecontroller //=> undefined )\n\n\n\n### 构造继承\n\n这个就比较简单啦，上代码\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    //在这里直接调用父类的方法修改父类的this上下文\n    Television.call(this)\n    this.name =  '电脑'\n}\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n`[ 优点 ]`\n\n-  简单明了，直接继承父类构造函数的属性及方法\n\n`[ 缺点 ]`\n\n- 无法继承父类原型链上的方法（new Computer().play //=> undefined）\n\n\n\n### 组合继承\n\n原型链继承与构造继承相结合各取所长，看下实现\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    Television.call(this)\n    this.name = '电脑'\n}\n\nComputer.prototype = new Television()\n\nComputer.prototype.constructor = Computer\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n\n`[ 优点 ]`\n\n-  子类既能继承父类构造函数中的属性和方法，又能继承父类原型链上的方法\n\n`[ 缺点 ]`\n\n- 子类会拥有父类的两份属性，只是子类属性将其覆盖了而已\n\n    \n\n### 原型式继承\n\n原型式继承其实就是定义一个方法，传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，实现以下\n\n首先我们创建一个`objectExtends`方法\n\n```javascript\nvar obj = {\n    name: '电视',\n    telecontroller: '遥控器'\n}\n\nfunction objectExtends(obj) {\n    function F(){}\n    F.prototype = obj\n    return new F()\n}\n```\n\n`[ 优点 ]`\n\n-  简单易懂，直接通过对象生成一个继承该对象的新对象\n\n`[ 缺点 ]`\n\n- 不是类式继承，缺少类的概念\n\n    \n\n### 寄生式继承\n\n\n这个名词很厉害，说白了就是原型式继承的加强版，同样传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，然后在另一方法中以其他方式增强这个obj对象，返回最终的对象， 实现以下\n\n首先我们创建一个`objectExtends`和`objectEnhance`方法\n\n`objectExtends`方法作用依旧是实现原型式继承\n`objectEnhance`方法就是在`objectExtends`方法的基础上对新的obj对象扩展他的原型方法而已\n\n```javascript\nvar obj = {\n    name: '电视',\n    telecontroller: '遥控器'\n}\n\nfunction  objectExtends(oldObj) {\n    function F(){}\n    F.prototype = obj\n\n    return new F()\n}\n\nfunction objectEnhance(obj) {\n    var newObj = objectCreate(obj)\n\n    newObj.property = function() {\n        alert('扩展一个方法出来')\n    }\n\n    return newObj\n}\n```\n\n`[ 优点 ]`\n\n-  相比原型式继承更加强悍，增强了原型式继承的能力\n\n`[ 缺点 ]`\n\n- 和原型式继一样，缺少类的概念\n\n\n\n### 寄生组合式继承\n\n看名字就知道`寄生组合式继承`就是结合了`寄生式继承`和`组合式继承`，也是继承的终极解决方案\n\n```javascript\nfunction  Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    Television.call(this)\n    this.name = '电脑'\n}\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n\nfunction inheritPrototype(Father,Son){\n    var newPrototype = Object.create(Father.prototype)\n\n    newPrototype.constructor = Son\n    Son.prototype = newPrototype\n}\n\ninheritPrototype(Television, Computer)\n```\n\n`[ 优点 ]`\n\n-  很完美\n\n`[ 缺点 ]`\n\n- 太繁琐\n\n    \n\n### ES6中的继承\n\nES6的话就比较简单了，如果有不了解的可以去看看[阮一峰的ECMAScript 6入门](http://es6.ruanyifeng.com/)\n\n\n```javascript\nclass Television {\n    constructor() {\n        this.name =  '电视'\n        this.telecontroller =  '遥控器'\n    }\n\n    play() {\n        alert('播放')\n    }\n}\n\nclass Computer extends Television{\n    constructor() {\n        super()\n        this.name = '电脑'\n    }\n\n    compute() {\n        alert('计算')\n    }\n}\n```\n\n**`[ 注意 ]`**\n\n- 如果你的子类重写了`constructor`方法，记得调用`super`,以确保父类构造逻辑运行\n\n`[ 优点 ]`\n\n-  和寄生组合式继承实现的效果一致\n\n\n\n---\n\n### 关于ES5和ES6中继承的图片\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125157.jpg)\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125209.jpg) \n\n\n\n**更多参考链接：**\n\n[JS继承实现的几种方式及其优缺点](https://segmentfault.com/a/1190000011151188)\n\n[两图看懂ES5和ES6中的继承](https://www.jianshu.com/p/d1bd2218b1f2)\n\n[关于 ES6 中的 Class 的几个特性和玩法](https://www.jianshu.com/p/6c18968c317b)\n\n\n\n**好了，有问题的可以再下方留言 (๑•ω•๑)**","source":"_posts/面向对象从ES3到ES6-的继承方法总结以及对比.md","raw":"---\ntitle: 面向对象从ES3到ES6+的继承方法总结以及对比\ndate: 2019-07-29 20:47:23\ntags: Javascript\ncategories: 前端\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/081804.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/081804.jpg)\n\n继承是面向对象中一个非常重要的概念，`Javascript`中可以实现继承，但不支持接口的继承。并且我们js中主要是`依赖原型链实现继承`的，下面说说从**es3**到**es5**中常见的几种继承方式。\n\n**首先**我们**假设**我们有两个类一个`Television`(电视)和`Computer`(电脑)\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nfunction Computer() {\n    this.name = '电脑'\n}\n```\n\n`Television`(电视)有个功能叫`play`(播放)，`Computer`(电脑)有个`compute`(计算)的功能。\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n  \nTelevision.prototype.play = function() {\n    alert('播放')\n}\n  \nfunction Computer() {\n    this.name = '电脑'\n}\n  \nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n然而我们知道`Computer`(电脑)也有`play`(播放)这个功能功能。那你会想到再给`Computer`(电脑)也添加一个`play`(播放)的功能不就好了，但是这样无形中浪费内存的资源，而且写起来也不比较繁琐，这不是我们想要的。这时候继承就出场了，而且实现继承的方式有很多种各有优缺点，接下来我们将每一种拿出来并对比一下他们的优缺点：\n\n\n\n### 原型链继承\n\n先上代码\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    this.name = '电脑'\n}\n\n//必须将这句写到上面否则下面的方法会被覆盖掉\nComputer.prototype = new Television()\n\n//因为new Television()实例没有constructor方法 所以我们要讲constructor指向Computer\nComputer.prototype.constructor = Computer\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n`[ 注意 ]` \n\n> 1. `Computer.prototype =  new Television()`必须写在子类定义原型方法(如现在的`compute`方法)之前,否则子类定义的原型方法会丢失（因为`Computer.prototype`指向堆内存地址变了嘛）。\n> 2. 因为父类`Television`生成的对象是没有constructor属性，所以给他加上（为啥没有？我就不用再详细说了吧 (〃'▽'〃)）\n\n\n`[ 优点 ]`\n\n-  实例是子类的实例，实际上也是父类的一个实例\n-  父类新增原型方法/原型属性，子类都能访问到\n\n`[ 缺点 ]`\n\n- 子类的实例的原型都共享同一个父类实例的属性和方法\n- 无法继承父类构造函数的属性及方法( new Computer().telecontroller //=> undefined )\n\n\n\n### 构造继承\n\n这个就比较简单啦，上代码\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    //在这里直接调用父类的方法修改父类的this上下文\n    Television.call(this)\n    this.name =  '电脑'\n}\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n`[ 优点 ]`\n\n-  简单明了，直接继承父类构造函数的属性及方法\n\n`[ 缺点 ]`\n\n- 无法继承父类原型链上的方法（new Computer().play //=> undefined）\n\n\n\n### 组合继承\n\n原型链继承与构造继承相结合各取所长，看下实现\n\n```javascript\nfunction Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    Television.call(this)\n    this.name = '电脑'\n}\n\nComputer.prototype = new Television()\n\nComputer.prototype.constructor = Computer\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n```\n\n\n`[ 优点 ]`\n\n-  子类既能继承父类构造函数中的属性和方法，又能继承父类原型链上的方法\n\n`[ 缺点 ]`\n\n- 子类会拥有父类的两份属性，只是子类属性将其覆盖了而已\n\n    \n\n### 原型式继承\n\n原型式继承其实就是定义一个方法，传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，实现以下\n\n首先我们创建一个`objectExtends`方法\n\n```javascript\nvar obj = {\n    name: '电视',\n    telecontroller: '遥控器'\n}\n\nfunction objectExtends(obj) {\n    function F(){}\n    F.prototype = obj\n    return new F()\n}\n```\n\n`[ 优点 ]`\n\n-  简单易懂，直接通过对象生成一个继承该对象的新对象\n\n`[ 缺点 ]`\n\n- 不是类式继承，缺少类的概念\n\n    \n\n### 寄生式继承\n\n\n这个名词很厉害，说白了就是原型式继承的加强版，同样传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，然后在另一方法中以其他方式增强这个obj对象，返回最终的对象， 实现以下\n\n首先我们创建一个`objectExtends`和`objectEnhance`方法\n\n`objectExtends`方法作用依旧是实现原型式继承\n`objectEnhance`方法就是在`objectExtends`方法的基础上对新的obj对象扩展他的原型方法而已\n\n```javascript\nvar obj = {\n    name: '电视',\n    telecontroller: '遥控器'\n}\n\nfunction  objectExtends(oldObj) {\n    function F(){}\n    F.prototype = obj\n\n    return new F()\n}\n\nfunction objectEnhance(obj) {\n    var newObj = objectCreate(obj)\n\n    newObj.property = function() {\n        alert('扩展一个方法出来')\n    }\n\n    return newObj\n}\n```\n\n`[ 优点 ]`\n\n-  相比原型式继承更加强悍，增强了原型式继承的能力\n\n`[ 缺点 ]`\n\n- 和原型式继一样，缺少类的概念\n\n\n\n### 寄生组合式继承\n\n看名字就知道`寄生组合式继承`就是结合了`寄生式继承`和`组合式继承`，也是继承的终极解决方案\n\n```javascript\nfunction  Television() {\n    this.name = '电视'\n    this.telecontroller = '遥控器'\n}\n\nTelevision.prototype.play = function() {\n    alert('播放')\n}\n\nfunction Computer() {\n    Television.call(this)\n    this.name = '电脑'\n}\n\nComputer.prototype.compute = function() {\n    alert('计算')\n}\n\nfunction inheritPrototype(Father,Son){\n    var newPrototype = Object.create(Father.prototype)\n\n    newPrototype.constructor = Son\n    Son.prototype = newPrototype\n}\n\ninheritPrototype(Television, Computer)\n```\n\n`[ 优点 ]`\n\n-  很完美\n\n`[ 缺点 ]`\n\n- 太繁琐\n\n    \n\n### ES6中的继承\n\nES6的话就比较简单了，如果有不了解的可以去看看[阮一峰的ECMAScript 6入门](http://es6.ruanyifeng.com/)\n\n\n```javascript\nclass Television {\n    constructor() {\n        this.name =  '电视'\n        this.telecontroller =  '遥控器'\n    }\n\n    play() {\n        alert('播放')\n    }\n}\n\nclass Computer extends Television{\n    constructor() {\n        super()\n        this.name = '电脑'\n    }\n\n    compute() {\n        alert('计算')\n    }\n}\n```\n\n**`[ 注意 ]`**\n\n- 如果你的子类重写了`constructor`方法，记得调用`super`,以确保父类构造逻辑运行\n\n`[ 优点 ]`\n\n-  和寄生组合式继承实现的效果一致\n\n\n\n---\n\n### 关于ES5和ES6中继承的图片\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125157.jpg)\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125209.jpg) \n\n\n\n**更多参考链接：**\n\n[JS继承实现的几种方式及其优缺点](https://segmentfault.com/a/1190000011151188)\n\n[两图看懂ES5和ES6中的继承](https://www.jianshu.com/p/d1bd2218b1f2)\n\n[关于 ES6 中的 Class 的几个特性和玩法](https://www.jianshu.com/p/6c18968c317b)\n\n\n\n**好了，有问题的可以再下方留言 (๑•ω•๑)**","slug":"面向对象从ES3到ES6-的继承方法总结以及对比","published":1,"updated":"2019-07-30T08:18:15.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjypkjpoh000kcdt50nahuca5","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/081804.jpg\" alt></p>\n<p>继承是面向对象中一个非常重要的概念，<code>Javascript</code>中可以实现继承，但不支持接口的继承。并且我们js中主要是<code>依赖原型链实现继承</code>的，下面说说从<strong>es3</strong>到<strong>es5</strong>中常见的几种继承方式。</p>\n<p><strong>首先</strong>我们<strong>假设</strong>我们有两个类一个<code>Television</code>(电视)和<code>Computer</code>(电脑)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Television</code>(电视)有个功能叫<code>play</code>(播放)，<code>Computer</code>(电脑)有个<code>compute</code>(计算)的功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然而我们知道<code>Computer</code>(电脑)也有<code>play</code>(播放)这个功能功能。那你会想到再给<code>Computer</code>(电脑)也添加一个<code>play</code>(播放)的功能不就好了，但是这样无形中浪费内存的资源，而且写起来也不比较繁琐，这不是我们想要的。这时候继承就出场了，而且实现继承的方式有很多种各有优缺点，接下来我们将每一种拿出来并对比一下他们的优缺点：</p>\n<h3 id=\"原型链继承\"><a href=\"#原型链继承\" class=\"headerlink\" title=\"原型链继承\"></a>原型链继承</h3><p>先上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//必须将这句写到上面否则下面的方法会被覆盖掉</span></span><br><span class=\"line\">Computer.prototype = <span class=\"keyword\">new</span> Television()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//因为new Television()实例没有constructor方法 所以我们要讲constructor指向Computer</span></span><br><span class=\"line\">Computer.prototype.constructor = Computer</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 注意 ]</code> </p>\n<blockquote>\n<ol>\n<li><code>Computer.prototype =  new Television()</code>必须写在子类定义原型方法(如现在的<code>compute</code>方法)之前,否则子类定义的原型方法会丢失（因为<code>Computer.prototype</code>指向堆内存地址变了嘛）。</li>\n<li>因为父类<code>Television</code>生成的对象是没有constructor属性，所以给他加上（为啥没有？我就不用再详细说了吧 (〃’▽’〃)）</li>\n</ol>\n</blockquote>\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>实例是子类的实例，实际上也是父类的一个实例</li>\n<li>父类新增原型方法/原型属性，子类都能访问到</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>子类的实例的原型都共享同一个父类实例的属性和方法</li>\n<li>无法继承父类构造函数的属性及方法( new Computer().telecontroller //=&gt; undefined )</li>\n</ul>\n<h3 id=\"构造继承\"><a href=\"#构造继承\" class=\"headerlink\" title=\"构造继承\"></a>构造继承</h3><p>这个就比较简单啦，上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在这里直接调用父类的方法修改父类的this上下文</span></span><br><span class=\"line\">    Television.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name =  <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>简单明了，直接继承父类构造函数的属性及方法</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>无法继承父类原型链上的方法（new Computer().play //=&gt; undefined）</li>\n</ul>\n<h3 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h3><p>原型链继承与构造继承相结合各取所长，看下实现</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Television.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype = <span class=\"keyword\">new</span> Television()</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.constructor = Computer</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>子类既能继承父类构造函数中的属性和方法，又能继承父类原型链上的方法</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>子类会拥有父类的两份属性，只是子类属性将其覆盖了而已</li>\n</ul>\n<h3 id=\"原型式继承\"><a href=\"#原型式继承\" class=\"headerlink\" title=\"原型式继承\"></a>原型式继承</h3><p>原型式继承其实就是定义一个方法，传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，实现以下</p>\n<p>首先我们创建一个<code>objectExtends</code>方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'电视'</span>,</span><br><span class=\"line\">    telecontroller: <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">objectExtends</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">    F.prototype = obj</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>简单易懂，直接通过对象生成一个继承该对象的新对象</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>不是类式继承，缺少类的概念</li>\n</ul>\n<h3 id=\"寄生式继承\"><a href=\"#寄生式继承\" class=\"headerlink\" title=\"寄生式继承\"></a>寄生式继承</h3><p>这个名词很厉害，说白了就是原型式继承的加强版，同样传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，然后在另一方法中以其他方式增强这个obj对象，返回最终的对象， 实现以下</p>\n<p>首先我们创建一个<code>objectExtends</code>和<code>objectEnhance</code>方法</p>\n<p><code>objectExtends</code>方法作用依旧是实现原型式继承<br><code>objectEnhance</code>方法就是在<code>objectExtends</code>方法的基础上对新的obj对象扩展他的原型方法而已</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'电视'</span>,</span><br><span class=\"line\">    telecontroller: <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"title\">objectExtends</span>(<span class=\"params\">oldObj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">    F.prototype = obj</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">objectEnhance</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newObj = objectCreate(obj)</span><br><span class=\"line\"></span><br><span class=\"line\">    newObj.property = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'扩展一个方法出来'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>相比原型式继承更加强悍，增强了原型式继承的能力</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>和原型式继一样，缺少类的概念</li>\n</ul>\n<h3 id=\"寄生组合式继承\"><a href=\"#寄生组合式继承\" class=\"headerlink\" title=\"寄生组合式继承\"></a>寄生组合式继承</h3><p>看名字就知道<code>寄生组合式继承</code>就是结合了<code>寄生式继承</code>和<code>组合式继承</code>，也是继承的终极解决方案</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Television.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritPrototype</span>(<span class=\"params\">Father,Son</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPrototype = <span class=\"built_in\">Object</span>.create(Father.prototype)</span><br><span class=\"line\"></span><br><span class=\"line\">    newPrototype.constructor = Son</span><br><span class=\"line\">    Son.prototype = newPrototype</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">inheritPrototype(Television, Computer)</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>很完美</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>太繁琐</li>\n</ul>\n<h3 id=\"ES6中的继承\"><a href=\"#ES6中的继承\" class=\"headerlink\" title=\"ES6中的继承\"></a>ES6中的继承</h3><p>ES6的话就比较简单了，如果有不了解的可以去看看<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">阮一峰的ECMAScript 6入门</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Television</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name =  <span class=\"string\">'电视'</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.telecontroller =  <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    play() &#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Computer</span> <span class=\"keyword\">extends</span> <span class=\"title\">Television</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>()</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    compute() &#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong><code>[ 注意 ]</code></strong></p>\n<ul>\n<li>如果你的子类重写了<code>constructor</code>方法，记得调用<code>super</code>,以确保父类构造逻辑运行</li>\n</ul>\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>和寄生组合式继承实现的效果一致</li>\n</ul>\n<hr>\n<h3 id=\"关于ES5和ES6中继承的图片\"><a href=\"#关于ES5和ES6中继承的图片\" class=\"headerlink\" title=\"关于ES5和ES6中继承的图片\"></a>关于ES5和ES6中继承的图片</h3><p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125157.jpg\" alt><br><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125209.jpg\" alt> </p>\n<p><strong>更多参考链接：</strong></p>\n<p><a href=\"https://segmentfault.com/a/1190000011151188\" target=\"_blank\" rel=\"noopener\">JS继承实现的几种方式及其优缺点</a></p>\n<p><a href=\"https://www.jianshu.com/p/d1bd2218b1f2\" target=\"_blank\" rel=\"noopener\">两图看懂ES5和ES6中的继承</a></p>\n<p><a href=\"https://www.jianshu.com/p/6c18968c317b\" target=\"_blank\" rel=\"noopener\">关于 ES6 中的 Class 的几个特性和玩法</a></p>\n<p><strong>好了，有问题的可以再下方留言 (๑•ω•๑)</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/081804.jpg\" alt></p>\n<p>继承是面向对象中一个非常重要的概念，<code>Javascript</code>中可以实现继承，但不支持接口的继承。并且我们js中主要是<code>依赖原型链实现继承</code>的，下面说说从<strong>es3</strong>到<strong>es5</strong>中常见的几种继承方式。</p>\n<p><strong>首先</strong>我们<strong>假设</strong>我们有两个类一个<code>Television</code>(电视)和<code>Computer</code>(电脑)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Television</code>(电视)有个功能叫<code>play</code>(播放)，<code>Computer</code>(电脑)有个<code>compute</code>(计算)的功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然而我们知道<code>Computer</code>(电脑)也有<code>play</code>(播放)这个功能功能。那你会想到再给<code>Computer</code>(电脑)也添加一个<code>play</code>(播放)的功能不就好了，但是这样无形中浪费内存的资源，而且写起来也不比较繁琐，这不是我们想要的。这时候继承就出场了，而且实现继承的方式有很多种各有优缺点，接下来我们将每一种拿出来并对比一下他们的优缺点：</p>\n<h3 id=\"原型链继承\"><a href=\"#原型链继承\" class=\"headerlink\" title=\"原型链继承\"></a>原型链继承</h3><p>先上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//必须将这句写到上面否则下面的方法会被覆盖掉</span></span><br><span class=\"line\">Computer.prototype = <span class=\"keyword\">new</span> Television()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//因为new Television()实例没有constructor方法 所以我们要讲constructor指向Computer</span></span><br><span class=\"line\">Computer.prototype.constructor = Computer</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 注意 ]</code> </p>\n<blockquote>\n<ol>\n<li><code>Computer.prototype =  new Television()</code>必须写在子类定义原型方法(如现在的<code>compute</code>方法)之前,否则子类定义的原型方法会丢失（因为<code>Computer.prototype</code>指向堆内存地址变了嘛）。</li>\n<li>因为父类<code>Television</code>生成的对象是没有constructor属性，所以给他加上（为啥没有？我就不用再详细说了吧 (〃’▽’〃)）</li>\n</ol>\n</blockquote>\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>实例是子类的实例，实际上也是父类的一个实例</li>\n<li>父类新增原型方法/原型属性，子类都能访问到</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>子类的实例的原型都共享同一个父类实例的属性和方法</li>\n<li>无法继承父类构造函数的属性及方法( new Computer().telecontroller //=&gt; undefined )</li>\n</ul>\n<h3 id=\"构造继承\"><a href=\"#构造继承\" class=\"headerlink\" title=\"构造继承\"></a>构造继承</h3><p>这个就比较简单啦，上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在这里直接调用父类的方法修改父类的this上下文</span></span><br><span class=\"line\">    Television.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name =  <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>简单明了，直接继承父类构造函数的属性及方法</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>无法继承父类原型链上的方法（new Computer().play //=&gt; undefined）</li>\n</ul>\n<h3 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h3><p>原型链继承与构造继承相结合各取所长，看下实现</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Television.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype = <span class=\"keyword\">new</span> Television()</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.constructor = Computer</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>子类既能继承父类构造函数中的属性和方法，又能继承父类原型链上的方法</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>子类会拥有父类的两份属性，只是子类属性将其覆盖了而已</li>\n</ul>\n<h3 id=\"原型式继承\"><a href=\"#原型式继承\" class=\"headerlink\" title=\"原型式继承\"></a>原型式继承</h3><p>原型式继承其实就是定义一个方法，传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，实现以下</p>\n<p>首先我们创建一个<code>objectExtends</code>方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'电视'</span>,</span><br><span class=\"line\">    telecontroller: <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">objectExtends</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">    F.prototype = obj</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>简单易懂，直接通过对象生成一个继承该对象的新对象</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>不是类式继承，缺少类的概念</li>\n</ul>\n<h3 id=\"寄生式继承\"><a href=\"#寄生式继承\" class=\"headerlink\" title=\"寄生式继承\"></a>寄生式继承</h3><p>这个名词很厉害，说白了就是原型式继承的加强版，同样传入Object，并不需要定义一个类，传入参数obj返回一个继承obj对象的新对象，然后在另一方法中以其他方式增强这个obj对象，返回最终的对象， 实现以下</p>\n<p>首先我们创建一个<code>objectExtends</code>和<code>objectEnhance</code>方法</p>\n<p><code>objectExtends</code>方法作用依旧是实现原型式继承<br><code>objectEnhance</code>方法就是在<code>objectExtends</code>方法的基础上对新的obj对象扩展他的原型方法而已</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'电视'</span>,</span><br><span class=\"line\">    telecontroller: <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"title\">objectExtends</span>(<span class=\"params\">oldObj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">    F.prototype = obj</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">objectEnhance</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newObj = objectCreate(obj)</span><br><span class=\"line\"></span><br><span class=\"line\">    newObj.property = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'扩展一个方法出来'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newObj</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>相比原型式继承更加强悍，增强了原型式继承的能力</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>和原型式继一样，缺少类的概念</li>\n</ul>\n<h3 id=\"寄生组合式继承\"><a href=\"#寄生组合式继承\" class=\"headerlink\" title=\"寄生组合式继承\"></a>寄生组合式继承</h3><p>看名字就知道<code>寄生组合式继承</code>就是结合了<code>寄生式继承</code>和<code>组合式继承</code>，也是继承的终极解决方案</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"title\">Television</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电视'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.telecontroller = <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Television.prototype.play = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Computer</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    Television.call(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Computer.prototype.compute = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritPrototype</span>(<span class=\"params\">Father,Son</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPrototype = <span class=\"built_in\">Object</span>.create(Father.prototype)</span><br><span class=\"line\"></span><br><span class=\"line\">    newPrototype.constructor = Son</span><br><span class=\"line\">    Son.prototype = newPrototype</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">inheritPrototype(Television, Computer)</span><br></pre></td></tr></table></figure>\n\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>很完美</li>\n</ul>\n<p><code>[ 缺点 ]</code></p>\n<ul>\n<li>太繁琐</li>\n</ul>\n<h3 id=\"ES6中的继承\"><a href=\"#ES6中的继承\" class=\"headerlink\" title=\"ES6中的继承\"></a>ES6中的继承</h3><p>ES6的话就比较简单了，如果有不了解的可以去看看<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">阮一峰的ECMAScript 6入门</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Television</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name =  <span class=\"string\">'电视'</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.telecontroller =  <span class=\"string\">'遥控器'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    play() &#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'播放'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Computer</span> <span class=\"keyword\">extends</span> <span class=\"title\">Television</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>()</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = <span class=\"string\">'电脑'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    compute() &#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'计算'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong><code>[ 注意 ]</code></strong></p>\n<ul>\n<li>如果你的子类重写了<code>constructor</code>方法，记得调用<code>super</code>,以确保父类构造逻辑运行</li>\n</ul>\n<p><code>[ 优点 ]</code></p>\n<ul>\n<li>和寄生组合式继承实现的效果一致</li>\n</ul>\n<hr>\n<h3 id=\"关于ES5和ES6中继承的图片\"><a href=\"#关于ES5和ES6中继承的图片\" class=\"headerlink\" title=\"关于ES5和ES6中继承的图片\"></a>关于ES5和ES6中继承的图片</h3><p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125157.jpg\" alt><br><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/125209.jpg\" alt> </p>\n<p><strong>更多参考链接：</strong></p>\n<p><a href=\"https://segmentfault.com/a/1190000011151188\" target=\"_blank\" rel=\"noopener\">JS继承实现的几种方式及其优缺点</a></p>\n<p><a href=\"https://www.jianshu.com/p/d1bd2218b1f2\" target=\"_blank\" rel=\"noopener\">两图看懂ES5和ES6中的继承</a></p>\n<p><a href=\"https://www.jianshu.com/p/6c18968c317b\" target=\"_blank\" rel=\"noopener\">关于 ES6 中的 Class 的几个特性和玩法</a></p>\n<p><strong>好了，有问题的可以再下方留言 (๑•ω•๑)</strong></p>\n"},{"title":"vue调试神器vue-devtools安装","date":"2019-07-29T07:27:48.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095601.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095601.jpg) \n\n\n\n欲先攻其事必先利其器，就先来弄弄这个工具`vue-devtools`。\n\n\n\n### vue-devtools是什么\n\n`vue-devtools`是一款用来调试`Vue`应用的`Chrome`插件,可极大提高开发者调试项目效率,接着我们说一下如何下载安装这个插件。\n\n### 直接下载插件\n\n国内无法访问(你懂得)，有条件的可以访问这个下载 : [国外Chrome插件下载](https://chrome.google.com/webstore/category/extensions)\n\n访问不了外网的也没事，可以访问国内的地址：[国内Chrome插件下载](http://www.cnplugins.com/)\n\n\n\n### 自己编译安装\n\n上面两种你都下载不了，那只能本地编译安装了🤣🤣🤣\n\n1. 第一步 : 克隆项目到本地\n\n- 找到github上vue-devtools项目\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608-1.png)\n\n- 使用git讲代码克隆到本地 : `git clone https://github.com/vuejs/vue-devtools.git`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095602.png)\n\n2. 第二步 :下载相关依赖 : \n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095603.png)\n\n3. 第三步 : 项目打包  （yarn build 或 npm run build）\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095604.png)\n\n4. 第四步：\n\n- 打开chrome 更多工具 -> 扩展程序 -> 加载已解压的扩展程序\n\n  ![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095607.png)\n\n- 选择打包好的文件\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608.png)\n\n- 添加插件\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095605.png)\n\n5. 第五步：F12打开控制台点击最右侧vue选项卡\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095606.png)\n\n自此搞定O(∩_∩)O哈哈~","source":"_posts/vue调试神器vue-devtools安装.md","raw":"---\ntitle: vue调试神器vue-devtools安装\ndate: 2019-07-29 15:27:48\ntags: Vue\ncategories: 实用工具\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095601.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095601.jpg) \n\n\n\n欲先攻其事必先利其器，就先来弄弄这个工具`vue-devtools`。\n\n\n\n### vue-devtools是什么\n\n`vue-devtools`是一款用来调试`Vue`应用的`Chrome`插件,可极大提高开发者调试项目效率,接着我们说一下如何下载安装这个插件。\n\n### 直接下载插件\n\n国内无法访问(你懂得)，有条件的可以访问这个下载 : [国外Chrome插件下载](https://chrome.google.com/webstore/category/extensions)\n\n访问不了外网的也没事，可以访问国内的地址：[国内Chrome插件下载](http://www.cnplugins.com/)\n\n\n\n### 自己编译安装\n\n上面两种你都下载不了，那只能本地编译安装了🤣🤣🤣\n\n1. 第一步 : 克隆项目到本地\n\n- 找到github上vue-devtools项目\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608-1.png)\n\n- 使用git讲代码克隆到本地 : `git clone https://github.com/vuejs/vue-devtools.git`\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095602.png)\n\n2. 第二步 :下载相关依赖 : \n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095603.png)\n\n3. 第三步 : 项目打包  （yarn build 或 npm run build）\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095604.png)\n\n4. 第四步：\n\n- 打开chrome 更多工具 -> 扩展程序 -> 加载已解压的扩展程序\n\n  ![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095607.png)\n\n- 选择打包好的文件\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608.png)\n\n- 添加插件\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095605.png)\n\n5. 第五步：F12打开控制台点击最右侧vue选项卡\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095606.png)\n\n自此搞定O(∩_∩)O哈哈~","slug":"vue调试神器vue-devtools安装","published":1,"updated":"2019-07-29T12:40:05.755Z","_id":"cjypkjpom000mcdt5h4rx3exh","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095601.jpg\" alt> </p>\n<p>欲先攻其事必先利其器，就先来弄弄这个工具<code>vue-devtools</code>。</p>\n<h3 id=\"vue-devtools是什么\"><a href=\"#vue-devtools是什么\" class=\"headerlink\" title=\"vue-devtools是什么\"></a>vue-devtools是什么</h3><p><code>vue-devtools</code>是一款用来调试<code>Vue</code>应用的<code>Chrome</code>插件,可极大提高开发者调试项目效率,接着我们说一下如何下载安装这个插件。</p>\n<h3 id=\"直接下载插件\"><a href=\"#直接下载插件\" class=\"headerlink\" title=\"直接下载插件\"></a>直接下载插件</h3><p>国内无法访问(你懂得)，有条件的可以访问这个下载 : <a href=\"https://chrome.google.com/webstore/category/extensions\" target=\"_blank\" rel=\"noopener\">国外Chrome插件下载</a></p>\n<p>访问不了外网的也没事，可以访问国内的地址：<a href=\"http://www.cnplugins.com/\" target=\"_blank\" rel=\"noopener\">国内Chrome插件下载</a></p>\n<h3 id=\"自己编译安装\"><a href=\"#自己编译安装\" class=\"headerlink\" title=\"自己编译安装\"></a>自己编译安装</h3><p>上面两种你都下载不了，那只能本地编译安装了🤣🤣🤣</p>\n<ol>\n<li>第一步 : 克隆项目到本地</li>\n</ol>\n<ul>\n<li>找到github上vue-devtools项目</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608-1.png\" alt></p>\n<ul>\n<li>使用git讲代码克隆到本地 : <code>git clone https://github.com/vuejs/vue-devtools.git</code></li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095602.png\" alt></p>\n<ol start=\"2\">\n<li>第二步 :下载相关依赖 : </li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095603.png\" alt></p>\n<ol start=\"3\">\n<li>第三步 : 项目打包  （yarn build 或 npm run build）</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095604.png\" alt></p>\n<ol start=\"4\">\n<li>第四步：</li>\n</ol>\n<ul>\n<li><p>打开chrome 更多工具 -&gt; 扩展程序 -&gt; 加载已解压的扩展程序</p>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095607.png\" alt></p>\n</li>\n<li><p>选择打包好的文件</p>\n</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608.png\" alt></p>\n<ul>\n<li>添加插件</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095605.png\" alt></p>\n<ol start=\"5\">\n<li>第五步：F12打开控制台点击最右侧vue选项卡</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095606.png\" alt></p>\n<p>自此搞定O(∩_∩)O哈哈~</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095601.jpg\" alt> </p>\n<p>欲先攻其事必先利其器，就先来弄弄这个工具<code>vue-devtools</code>。</p>\n<h3 id=\"vue-devtools是什么\"><a href=\"#vue-devtools是什么\" class=\"headerlink\" title=\"vue-devtools是什么\"></a>vue-devtools是什么</h3><p><code>vue-devtools</code>是一款用来调试<code>Vue</code>应用的<code>Chrome</code>插件,可极大提高开发者调试项目效率,接着我们说一下如何下载安装这个插件。</p>\n<h3 id=\"直接下载插件\"><a href=\"#直接下载插件\" class=\"headerlink\" title=\"直接下载插件\"></a>直接下载插件</h3><p>国内无法访问(你懂得)，有条件的可以访问这个下载 : <a href=\"https://chrome.google.com/webstore/category/extensions\" target=\"_blank\" rel=\"noopener\">国外Chrome插件下载</a></p>\n<p>访问不了外网的也没事，可以访问国内的地址：<a href=\"http://www.cnplugins.com/\" target=\"_blank\" rel=\"noopener\">国内Chrome插件下载</a></p>\n<h3 id=\"自己编译安装\"><a href=\"#自己编译安装\" class=\"headerlink\" title=\"自己编译安装\"></a>自己编译安装</h3><p>上面两种你都下载不了，那只能本地编译安装了🤣🤣🤣</p>\n<ol>\n<li>第一步 : 克隆项目到本地</li>\n</ol>\n<ul>\n<li>找到github上vue-devtools项目</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608-1.png\" alt></p>\n<ul>\n<li>使用git讲代码克隆到本地 : <code>git clone https://github.com/vuejs/vue-devtools.git</code></li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095602.png\" alt></p>\n<ol start=\"2\">\n<li>第二步 :下载相关依赖 : </li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095603.png\" alt></p>\n<ol start=\"3\">\n<li>第三步 : 项目打包  （yarn build 或 npm run build）</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095604.png\" alt></p>\n<ol start=\"4\">\n<li>第四步：</li>\n</ol>\n<ul>\n<li><p>打开chrome 更多工具 -&gt; 扩展程序 -&gt; 加载已解压的扩展程序</p>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095607.png\" alt></p>\n</li>\n<li><p>选择打包好的文件</p>\n</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095608.png\" alt></p>\n<ul>\n<li>添加插件</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095605.png\" alt></p>\n<ol start=\"5\">\n<li>第五步：F12打开控制台点击最右侧vue选项卡</li>\n</ol>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/095606.png\" alt></p>\n<p>自此搞定O(∩_∩)O哈哈~</p>\n"},{"title":"react-native中使用fetch发送https或http相关问题总结","date":"2019-07-30T08:37:19.000Z","cover":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/150542.jpg","_content":"\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/150542.jpg) \n\n\n\n`react-native`再请求方面有点坑，`Ios`端默认支持`https`，而安卓默认支持的事`http`，如果你需要的是其中的某一种方式，那这篇文章可能能帮到你😍😍\n\n\n\n### 当前环境\n\n- OS: macOS High Sierra 10.13.5\n- Node: 8.11.3\n- Yarn: 1.7.0\n- npm: 5.6.0\n- Watchman: 4.9.0\n- Xcode: Xcode 9.4.1\n- react: 16.3.1 => 16.3.1\n- react-native: 0.55.4 => 0.55.4\n\n\n\n### 前置说明\n\n1. 在ios平台ios9.0以上默认支持https而不支持http\n2. 对于https，如果你的服务器端是CA签发的证书，那你ios平台不需要改动任何代码\n3. 对于自签证书，那你需要对源代码进行改动，下面会详细说明方式\n4. 对于http，有两个方式可以做到，下面会详细说明方式\n    1. 直接使用ip地址\n    2. 使用域名，对源代码进行配置\n\n  \n\n### 关于ios支持https自签证书\n\n\n- 服务器端使用自签证书，免证书方法\n- 打开XCode在当前项目路径为`Libraries/RCTNetwork.xcodeproj`找到`RCTHTTPRequestHandler.mm`\n- 或者在`{project}/node_modules/react-native/Libraries/Network`目录下同样可以找到该文件\n- 在文件中搜索`#pragma mark - NSURLSession delegate`并在其后面添加如下代码即可\n\n\n```c++\n- (void)URLSession:(NSURLSession *)session  didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge  completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * __nullable credential))completionHandler{\n    if (RCT_DEBUG) {\n        completionHandler(NSURLSessionAuthChallengeUseCredential,[NSURLCredential  credentialForTrust:challenge.protectionSpace.serverTrust]);\n    }\n}\n```\n\n- 配置如图所示\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902-1.png) \n\n\n\n### 关于ios支持http请求\n\n- 关于http方式我们只介绍第二种因为直接使用ip地址真的是太。。简单，直接把域名换成ip就好了\n- 对于第二种你需要改动`{project}/ios/App`下面的`Info.plist`文件\n\n\n```xml\n<key>NSAppTransportSecuritykey>\n<dict>\n    <key>NSAllowsArbitraryLoadskey></key>\n    <true/>\n<dict>\n```\n\n- 配置如图所示\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902.png) \n\n到此为止`Ios`相关问题就解决了，`Ios`部分还是比较好弄得O(∩_∩)O不是很麻烦，`Android`得话就麻烦些，下面我们说下`Android`相关的解决方案\n\n\n\n### 关于Android端http和https你需要知道\n\n1. 安卓默认是支持http请求儿不支持https\n2. 想做到支持https那就需要改动react-native的源代码，进而重新编译才能成功\n\n\n### 关于Android支持https\n- 下载ndk（下载r10e版本的，其他的版本会有问题）\n\t1.  Mac OS (64-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip](http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip)\n\t2.  Linux (64-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip](http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip)\n\t3.  Windows (64-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip](http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip)\n\t4.  Windows (32-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip](http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip)\n\n- 在项目`{project}/android`文件夹先创建`local.properties`文件（如果已经存在哪直接修改就好了）\n\n\n```properties\nsdk.dir=你自己的sdk路径\nndk.dir=你自己的ndk路径\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140900-1.jpg)\n\n- 在`{project}/android/build.gradle`中添加`gradle-download-task`依赖\n\n```java\n...\ndependencies {\n    classpath 'com.android.tools.build:gradle:2.2.3'\n    classpath 'de.undercouch:gradle-download-task:3.1.2'\n\t\n    // NOTE: Do not place your application dependencies here; they belong\n    // in the individual module build.gradle files\n}\n...\n```\n\n\n- 在`{project}/android/settings.gradle`中添加`:ReactAndroid`项目\n\n\n```java\n...\n    include ':ReactAndroid'\n  \n    project(':ReactAndroid').projectDir = new File(rootProject.projectDir, '../node_modules/react-native/ReactAndroid')\n...\n```\n\n- 修改`{project}/android/app/build.gradle`文件，使用:ReactAndroid替换预编译库\n\n\n```java\n...\n  \ncompile fileTree(dir: \"libs\", include: [\"*.jar\"])\ncompile \"com.android.support:appcompat-v7:23.0.1\"\ncompile project(':ReactAndroid')\n  \n...\n```\n\n- 重写第三方模块的依赖，否则会报错`-Error: more than one library with package name 'com.facebook.react'`\n- 修改`{project}/android/app/build.gradle`文件，添加以下代码\n\n\n```java\n...\n  \nconfigurations.all {\n    exclude group: 'com.facebook.react', module: 'react-native'\n}\n  \n...\n```\n\n\n\n- 重写`okHttp`类\n\n```java\npackage com.facebook.react.modules.network;\n\nimport android.net.Uri;\nimport android.util.Base64;\nimport com.facebook.react.bridge.Arguments;\nimport com.facebook.react.bridge.GuardedAsyncTask;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.bridge.ReactContextBaseJavaModule;\nimport com.facebook.react.bridge.ReactMethod;\nimport com.facebook.react.bridge.ReadableArray;\nimport com.facebook.react.bridge.ReadableMap;\nimport com.facebook.react.bridge.WritableMap;\nimport com.facebook.react.common.StandardCharsets;\nimport com.facebook.react.common.network.OkHttpCallUtil;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.charset.Charset;\nimport java.security.KeyManagementException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.SecureRandom;\nimport java.security.cert.CertificateException;\nimport java.security.cert.X509Certificate;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\nimport javax.annotation.Nullable;\nimport javax.net.ssl.HostnameVerifier;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.SSLSession;\nimport javax.net.ssl.TrustManager;\nimport javax.net.ssl.X509TrustManager;\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.CookieJar;\nimport okhttp3.Headers;\nimport okhttp3.Interceptor;\nimport okhttp3.JavaNetCookieJar;\nimport okhttp3.MediaType;\nimport okhttp3.MultipartBody;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.RequestBody;\nimport okhttp3.Response;\nimport okhttp3.ResponseBody;\nimport okio.ByteString;\n\n/**\n* Implements the XMLHttpRequest JavaScript interface.\n*/\n@ReactModule(name = NetworkingModule.NAME)\n\npublic final class NetworkingModule extends ReactContextBaseJavaModule {\n\tprivate SSLContext getSLLContext () {\n\t\tX509TrustManager xtm = new X509TrustManager() {\n\n\t\t\t@Override\n\t\t\tpublic void checkClientTrusted(X509Certificate[] chain, String authType) {}\n\n\t\t\t@Override\n\t\t\tpublic void checkServerTrusted(X509Certificate[] chain, String authType) {}\n\n\t\t\t@Override\n\t\t\tpublic X509Certificate[] getAcceptedIssuers() {\n\t\t\t\tX509Certificate[] x509Certificates = new X509Certificate[0];\n\t\t\t\t\n\t\t\t\treturn x509Certificates;\n\t\t\t}\n\t\t};\n\n\t\tSSLContext sslContext = null;\n\n\t\ttry {\n\n\t\t\tsslContext = SSLContext.getInstance(\"SSL\");\n\t\t\tsslContext.init(null, new TrustManager[]{xtm}, new SecureRandom());\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\n\t\t\te.printStackTrace();\n\t\t} catch (KeyManagementException e) {\n\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\treturn sslContext;\n\t}\n\n\t/**\n\t* Allows to implement a custom fetching process for specific URIs. It is the handler's job\n\t* to fetch the URI and return the JS body payload.\n\t*/\n\tpublic interface UriHandler {\n\n\t\t/**\n\t\t* Returns if the handler should be used for an URI.\n\t\t*/\n\t\tboolean supports(Uri uri, String responseType);\n\t\t\n\t\t/**\n\t\t* Fetch the URI and return the JS body payload.\n\t\t*/\n\t\tWritableMap fetch(Uri uri) throws IOException;\n\t}\n\n\t/**\n\t* Allows adding custom handling to build the {@link RequestBody} from the JS body payload.\n\t*/\n\tpublic interface RequestBodyHandler {\n\n\t\t/**\n\t\t* Returns if the handler should be used for a JS body payload.\n\t\t*/\n\t\tboolean supports(ReadableMap map);\n\n\t\t/**\n\t\t* Returns the {@link RequestBody} for the JS body payload.\n\t\t*/\n\t\tRequestBody toRequestBody(ReadableMap map, String contentType);\n\t}\n\n\t/**\n\t* Allows adding custom handling to build the JS body payload from the {@link ResponseBody}.\n\t*/\n\n\tpublic interface ResponseHandler {\n\t\t/**\n\t\t* Returns if the handler should be used for a response type.\n\t\t*/\n\t\tboolean supports(String responseType);\n\n\t\t/**\n\t\t* Returns the JS body payload for the {@link ResponseBody}.\n\t\t*/\n\t\tWritableMap toResponseData(ResponseBody body) throws IOException;\n\t}\n\n\tprotected static final String NAME = \"Networking\";\n\n\tprivate static final String CONTENT_ENCODING_HEADER_NAME = \"content-encoding\";\n\n\tprivate static final String CONTENT_TYPE_HEADER_NAME = \"content-type\";\n\n\tprivate static final String REQUEST_BODY_KEY_STRING = \"string\";\n\n\tprivate static final String REQUEST_BODY_KEY_URI = \"uri\";\n\n\tprivate static final String REQUEST_BODY_KEY_FORMDATA = \"formData\";\n\n\tprivate static final String REQUEST_BODY_KEY_BASE64 = \"base64\";\n\n\tprivate static final String USER_AGENT_HEADER_NAME = \"user-agent\";\n\n\tprivate static final int CHUNK_TIMEOUT_NS = 100 * 1000000; // 100ms\n\n\tprivate static final int MAX_CHUNK_SIZE_BETWEEN_FLUSHES = 8 * 1024; // 8K\n\n\tprivate final OkHttpClient mClient;\n\n\tprivate final ForwardingCookieHandler mCookieHandler;\n\n\tprivate final @Nullable String mDefaultUserAgent;\n\n\tprivate final CookieJarContainer mCookieJarContainer;\n\n\tprivate final Set<Integer> mRequestIds;\n\n\tprivate final List<RequestBodyHandler> mRequestBodyHandlers = new ArrayList<>();\n\n\tprivate final List<UriHandler> mUriHandlers = new ArrayList<>();\n\n\tprivate final List<ResponseHandler> mResponseHandlers = new ArrayList<>();\n\n\tprivate boolean mShuttingDown;\n\n\t/* package */\n\n\tNetworkingModule(\n\t\tReactApplicationContext reactContext,\n\t\t@Nullable String defaultUserAgent,\n\t\tOkHttpClient client,\n\t\t@Nullable List networkInterceptorCreators\n\t) {\n\t\tsuper(reactContext);\n\t\tif (networkInterceptorCreators != null) {\n\t\t\tOkHttpClient.Builder clientBuilder = client.newBuilder();\n\n\t\t\tfor (NetworkInterceptorCreator networkInterceptorCreator : networkInterceptorCreators) {\n\t\t\t\tclientBuilder.addNetworkInterceptor(networkInterceptorCreator.create());\n\t\t\t}\n\n\t\t\tclient = clientBuilder.build();\n\t\t}\n\n\t\tclient = client.newBuilder().hostnameVerifier(new HostnameVerifier() {\n\t\t\t@Override\n\t\t\tpublic boolean verify(String s, SSLSession sslSession) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}).sslSocketFactory(getSLLContext().getSocketFactory()).build();\n\n\t\tmClient = client;\n\t\tmCookieHandler = new ForwardingCookieHandler(reactContext);\n\t\tmCookieJarContainer = (CookieJarContainer) mClient.cookieJar();\n\t\tmShuttingDown = false;\n\t\tmDefaultUserAgent = defaultUserAgent;\n\t\tmRequestIds = new HashSet<>();\n\t}\n\n\t/**\n\t* @param context the ReactContext of the application\n\t* @param defaultUserAgent the User-Agent header that will be set for all requests where the\n\t* caller does not provide one explicitly\n\t* @param client the {@link OkHttpClient} to be used for networking\n\t*/\n\n\t/* package */\n\tNetworkingModule(\n\t\tReactApplicationContext context,\n\t\t@Nullable String defaultUserAgent,\n\t\tOkHttpClient client\n\t) {\n\t\tthis(context, defaultUserAgent, client, null);\n\t}\n\n\t/**\n\t* @param context the ReactContext of the application\n\t*/\n\tpublic NetworkingModule(final ReactApplicationContext context) {\n\t\tthis(context, null, OkHttpClientProvider.createClient(), null);\n\t}\n\n\t/**\n\t* @param context the ReactContext of the application\n\t* @param networkInterceptorCreators list of {@link NetworkInterceptorCreator}'s whose create()\n\t* methods would be called to attach the interceptors to the client.\n\t*/\n\tpublic NetworkingModule(\n\t\tReactApplicationContext context,\n\t\tList networkInterceptorCreators) {\n\t\t\tthis(context, null, OkHttpClientProvider.createClient(), networkInterceptorCreators);\n\t\t}\n\t/**\n\t* @param context the ReactContext of the application\n\t* @param defaultUserAgent the User-Agent header that will be set for all requests where the\n\t* caller does not provide one explicitly\n\t*/\n\n\tpublic NetworkingModule(ReactApplicationContext context, String defaultUserAgent) {\n\t\tthis(context, defaultUserAgent, OkHttpClientProvider.createClient(), null);\n\t}\n\n\t@Override\n\tpublic void initialize() {\n\t\tmCookieJarContainer.setCookieJar(new JavaNetCookieJar(mCookieHandler));\n\t}\n\n\t@Override\n\tpublic String getName() {\n\t\treturn NAME;\n\t}\n\n\t@Override\n\tpublic void onCatalystInstanceDestroy() {\n\t\tmShuttingDown = true;\n\t\tcancelAllRequests();\n\t\tmCookieHandler.destroy();\n\t\tmCookieJarContainer.removeCookieJar();\n\t\tmRequestBodyHandlers.clear();\n\t\tmResponseHandlers.clear();\n\t\tmUriHandlers.clear();\n\t}\n\n\tpublic void addUriHandler(UriHandler handler) {\n\t\tmUriHandlers.add(handler);\n\t}\n\n\tpublic void addRequestBodyHandler(RequestBodyHandler handler) {\n\t\tmRequestBodyHandlers.add(handler);\n\t}\n\n\tpublic void addResponseHandler(ResponseHandler handler) {\n\t\tmResponseHandlers.add(handler);\n\t}\n\n\tpublic void removeUriHandler(UriHandler handler) {\n\t\tmUriHandlers.remove(handler);\n\t}\n\n\tpublic void removeRequestBodyHandler(RequestBodyHandler handler) {\n\t\tmRequestBodyHandlers.remove(handler);\n\t}\n\n\tpublic void removeResponseHandler(ResponseHandler handler) {\n\t\tmResponseHandlers.remove(handler);\n\t}\n\n\t@ReactMethod\n\t/**\n\t* @param timeout value of 0 results in no timeout\n\t*/\n\tpublic void sendRequest(\n\t\tString method,\n\t\tString url,\n\t\tfinal int requestId,\n\t\tReadableArray headers,\n\t\tReadableMap data,\n\t\tfinal String responseType,\n\t\tfinal boolean useIncrementalUpdates,\n\t\tint timeout,\n\t\tboolean withCredentials\n\t) {\n\t\tfinal RCTDeviceEventEmitter eventEmitter = getEventEmitter();\n\n\t\ttry {\n\t\t\tUri uri = Uri.parse(url);\n\t\t\t// Check if a handler is registered\n\t\t\tfor (UriHandler handler : mUriHandlers) {\n\t\t\t\tif (handler.supports(uri, responseType)) {\n\t\t\t\t\tWritableMap res = handler.fetch(uri);\n\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);\n\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);\n\t\t\treturn;\n\t\t}\n\n\t\tRequest.Builder requestBuilder;\n\n\t\ttry {\n\t\t\trequestBuilder = new Request.Builder().url(url);\n\t\t} catch (Exception e) {\n\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), null);\n\t\t\treturn;\n\t\t}\n\n\t\tif (requestId != 0) {\n\t\t\trequestBuilder.tag(requestId);\n\t\t}\n\n\t\tOkHttpClient.Builder clientBuilder = mClient.newBuilder();\n\n\t\tif (!withCredentials) {\n\t\t\tclientBuilder.cookieJar(CookieJar.NO_COOKIES);\n\t\t}\n\n\t\t// If JS is listening for progress updates, install a ProgressResponseBody that intercepts the\n\t\t// response and counts bytes received.\n\t\tif (useIncrementalUpdates) {\n\n\t\t\tclientBuilder.addNetworkInterceptor(new Interceptor() {\n\t\t\t\t@Override\n\t\t\t\tpublic Response intercept(Interceptor.Chain chain) throws IOException {\n\t\t\t\t\tResponse originalResponse = chain.proceed(chain.request());\n\t\t\t\t\tProgressResponseBody responseBody = new ProgressResponseBody(\n\t\t\t\t\toriginalResponse.body(),\n\t\t\t\t\tnew ProgressListener() {\n\t\t\t\t\t\tlong last = System.nanoTime();\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onProgress(long bytesWritten, long contentLength, boolean done) {\n\t\t\t\t\t\t\tlong now = System.nanoTime();\n\t\t\t\t\t\t\tif (!done && !shouldDispatch(now, last)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (responseType.equals(\"text\")) {\n\t\t\t\t\t\t\t\t// For 'text' responses we continuously send response data with progress info to\n\t\t\t\t\t\t\t\t// JS below, so no need to do anything here.\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tResponseUtil.onDataReceivedProgress(\n\t\t\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\t\t\trequestId,\n\t\t\t\t\t\t\t\tbytesWritten,\n\t\t\t\t\t\t\t\tcontentLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tlast = now;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn originalResponse.newBuilder().body(responseBody).build();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// If the current timeout does not equal the passed in timeout, we need to clone the existing\n\t\t// client and set the timeout explicitly on the clone. This is cheap as everything else is\n\t\t// shared under the hood.\n\t\t// See https://github.com/square/okhttp/wiki/Recipes#per-call-configuration for more information\n\n\t\tif (timeout != mClient.connectTimeoutMillis()) {\n\t\t\tclientBuilder.readTimeout(timeout, TimeUnit.MILLISECONDS);\n\t\t}\n\n\t\tOkHttpClient client = clientBuilder.build();\n\t\tHeaders requestHeaders = extractHeaders(headers, data);\n\t\tif (requestHeaders == null) {\n\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, \"Unrecognized headers format\", null);\n\t\t\treturn;\n\t\t}\n\n\t\tString contentType = requestHeaders.get(CONTENT_TYPE_HEADER_NAME);\n\t\tString contentEncoding = requestHeaders.get(CONTENT_ENCODING_HEADER_NAME);\n\t\trequestBuilder.headers(requestHeaders);\n\n\t\t// Check if a handler is registered\n\t\tRequestBodyHandler handler = null;\n\n\t\tif (data != null) {\n\n\t\t\tfor (RequestBodyHandler curHandler : mRequestBodyHandlers) {\n\t\t\t\tif (curHandler.supports(data)) {\n\t\t\t\t\thandler = curHandler;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tRequestBody requestBody;\n\t\tif (data == null || method.toLowerCase().equals(\"get\") || method.toLowerCase().equals(\"head\")) {\n\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);\n\t\t} else if (handler != null) {\n\t\t\trequestBody = handler.toRequestBody(data, contentType);\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_STRING)) {\n\t\t\tif (contentType == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Payload is set but no content-type header specified\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tString body = data.getString(REQUEST_BODY_KEY_STRING);\n\t\t\tMediaType contentMediaType = MediaType.parse(contentType);\n\n\t\t\tif (RequestBodyUtil.isGzipEncoding(contentEncoding)) {\n\t\t\t\trequestBody = RequestBodyUtil.createGzip(contentMediaType, body);\n\t\t\t\tif (requestBody == null) {\n\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, \"Failed to gzip request body\", null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trequestBody = RequestBody.create(contentMediaType, body);\n\t\t\t}\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_BASE64)) {\n\n\t\t\tif (contentType == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Payload is set but no content-type header specified\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tString base64String = data.getString(REQUEST_BODY_KEY_BASE64);\n\t\t\tMediaType contentMediaType = MediaType.parse(contentType);\n\t\t\trequestBody = RequestBody.create(contentMediaType, ByteString.decodeBase64(base64String));\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_URI)) {\n\t\t\tif (contentType == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Payload is set but no content-type header specified\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tString uri = data.getString(REQUEST_BODY_KEY_URI);\n\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), uri);\n\n\t\t\tif (fileInputStream == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Could not retrieve file for uri \" + uri,\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trequestBody = RequestBodyUtil.create(MediaType.parse(contentType), fileInputStream);\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_FORMDATA)) {\n\t\t\tif (contentType == null) {\n\t\t\t\tcontentType = \"multipart/form-data\";\n\t\t\t}\n\n\t\t\tReadableArray parts = data.getArray(REQUEST_BODY_KEY_FORMDATA);\n\t\t\tMultipartBody.Builder multipartBuilder =\n\t\t\tconstructMultipartBody(parts, contentType, requestId);\n\n\t\t\tif (multipartBuilder == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trequestBody = multipartBuilder.build();\n\n\t\t} else {\n\t\t\t// Nothing in data payload, at least nothing we could understand anyway.\n\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);\n\t\t}\n\n\t\trequestBuilder.method(\n\t\t\tmethod,\n\t\t\twrapRequestBodyWithProgressEmitter(requestBody, eventEmitter, requestId)\n\t\t);\n\t\taddRequest(requestId);\n\t\tclient.newCall(requestBuilder.build()).enqueue(\n\t\t\tnew Callback() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onFailure(Call call, IOException e) {\n\t\t\t\t\tif (mShuttingDown) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tremoveRequest(requestId);\n\n\t\t\t\t\tString errorMessage = e.getMessage() != null\n\t\t\t\t\t? e.getMessage()\n\t\t\t\t\t: \"Error while executing request: \" + e.getClass().getSimpleName();\n\n\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, errorMessage, e);\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onResponse(Call call, Response response) throws IOException {\n\t\t\t\t\tif (mShuttingDown) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tremoveRequest(requestId);\n\n\t\t\t\t\t// Before we touch the body send headers to JS\n\t\t\t\t\tResponseUtil.onResponseReceived(\n\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\tresponse.code(),\n\t\t\t\t\t\ttranslateHeaders(response.headers()),\n\t\t\t\t\t\tresponse.request().url().toString()\n\t\t\t\t\t);\n\n\t\t\t\t\tResponseBody responseBody = response.body();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Check if a handler is registered\n\t\t\t\t\t\tfor (ResponseHandler handler : mResponseHandlers) {\n\n\t\t\t\t\t\t\tif (handler.supports(responseType)) {\n\t\t\t\t\t\t\t\tWritableMap res = handler.toResponseData(responseBody);\n\t\t\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);\n\t\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If JS wants progress updates during the download, and it requested a text response,\n\t\t\t\t\t\t// periodically send response data updates to JS.\n\t\t\t\t\t\tif (useIncrementalUpdates && responseType.equals(\"text\")) {\n\t\t\t\t\t\t\treadWithProgress(eventEmitter, requestId, responseBody);\n\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise send the data in one big chunk, in the format that JS requested.\n\t\t\t\t\t\tString responseString = \"\";\n\n\t\t\t\t\t\tif (responseType.equals(\"text\")) {\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresponseString = responseBody.string();\n\t\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\tif (response.request().method().equalsIgnoreCase(\"HEAD\")) {\n\t\t\t\t\t\t\t\t\t// The request is an `HEAD` and the body is empty,\n\t\t\t\t\t\t\t\t\t// the OkHttp will produce an exception.\n\t\t\t\t\t\t\t\t\t// Ignore the exception to not invalidate the request in the\n\t\t\t\t\t\t\t\t\t// Javascript layer.\n\t\t\t\t\t\t\t\t\t// Introduced to fix issue #7463.\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (responseType.equals(\"base64\")) {\n\t\t\t\t\t\t\tresponseString = Base64.encodeToString(responseBody.bytes(), Base64.NO_WRAP);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, responseString);\n\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate RequestBody wrapRequestBodyWithProgressEmitter(\n\t\tfinal RequestBody requestBody,\n\t\tfinal RCTDeviceEventEmitter eventEmitter,\n\t\tfinal int requestId\n\t) {\n\t\tif(requestBody == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn RequestBodyUtil.createProgressRequest(\n\t\t\trequestBody,\n\t\t\tnew ProgressListener() {\n\t\t\t\tlong last = System.nanoTime();\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onProgress(long bytesWritten, long contentLength, boolean done) {\n\n\t\t\t\t\tlong now = System.nanoTime();\n\n\t\t\t\t\tif (done || shouldDispatch(now, last)) {\n\t\t\t\t\t\tResponseUtil.onDataSend(eventEmitter, requestId, bytesWritten, contentLength);\n\t\t\t\t\t\tlast = now;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate void readWithProgress(\n\t\tRCTDeviceEventEmitter eventEmitter,\n\t\tint requestId,\n\t\tResponseBody responseBody\n\t) throws IOException {\n\t\tlong totalBytesRead = -1;\n\t\tlong contentLength = -1;\n\n\t\ttry {\n\t\t\tProgressResponseBody progressResponseBody = (ProgressResponseBody) responseBody;\n\t\t\ttotalBytesRead = progressResponseBody.totalBytesRead();\n\t\t\tcontentLength = progressResponseBody.contentLength();\n\t\t} catch (ClassCastException e) {\n\t\t\t// Ignore\n\t\t}\n\n\t\tCharset charset = responseBody.contentType() == null ? StandardCharsets.UTF_8 :\n\t\tresponseBody.contentType().charset(StandardCharsets.UTF_8);\n\t\tProgressiveStringDecoder streamDecoder = new ProgressiveStringDecoder(charset);\n\t\tInputStream inputStream = responseBody.byteStream();\n\n\t\ttry {\n\t\t\tbyte[] buffer = new byte[MAX_CHUNK_SIZE_BETWEEN_FLUSHES];\n\t\t\tint read;\n\n\t\t\twhile ((read = inputStream.read(buffer)) != -1) {\n\t\t\t\tResponseUtil.onIncrementalDataReceived(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\tstreamDecoder.decodeNext(buffer, read),\n\t\t\t\t\ttotalBytesRead,\n\t\t\t\t\tcontentLength\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tinputStream.close();\n\t\t}\n\n\t}\n\n\tprivate static boolean shouldDispatch(long now, long last) {\n\t\treturn last + CHUNK_TIMEOUT_NS < now;\n\t}\n\n\tprivate synchronized void addRequest(int requestId) {\n\t\tmRequestIds.add(requestId);\n\t}\n\n\tprivate synchronized void removeRequest(int requestId) {\n\t\tmRequestIds.remove(requestId);\n\t}\n\n\tprivate synchronized void cancelAllRequests() {\n\t\tfor (Integer requestId : mRequestIds) {\n\t\t\tcancelRequest(requestId);\n\t\t}\n\n\t\tmRequestIds.clear();\n\t}\n\n\tprivate static WritableMap translateHeaders(Headers headers) {\n\t\tWritableMap responseHeaders = Arguments.createMap();\n\n\t\tfor (int i = 0; i < headers.size(); i++) {\n\t\t\tString headerName = headers.name(i);\n\t\t\t\n\t\t\t// multiple values for the same header\n\t\t\tif (responseHeaders.hasKey(headerName)) {\n\t\t\t\tresponseHeaders.putString(\n\t\t\t\theaderName,\n\t\t\t\tresponseHeaders.getString(headerName) + \", \" + headers.value(i));\n\t\t\t} else {\n\t\t\t\tresponseHeaders.putString(headerName, headers.value(i));\n\t\t\t}\n\t\t}\n\n\t\treturn responseHeaders;\n\t}\n\n\t@ReactMethod\n\tpublic void abortRequest(final int requestId) {\n\t\tcancelRequest(requestId);\n\t\tremoveRequest(requestId);\n\t}\n\n\tprivate void cancelRequest(final int requestId) {\n\t\t// We have to use AsyncTask since this might trigger a NetworkOnMainThreadException, this is an\n\t\t// open issue on OkHttp: https://github.com/square/okhttp/issues/869\n\t\tnew GuardedAsyncTask(getReactApplicationContext()) {\n\t\t\t@Override\n\t\t\tprotected void doInBackgroundGuarded(Void... params) {\n\t\t\t\tOkHttpCallUtil.cancelTag(mClient, Integer.valueOf(requestId));\n\t\t\t}\n\t\t}.execute();\n\t}\n\n\t@ReactMethod\n\tpublic void clearCookies(com.facebook.react.bridge.Callback callback) {\n\t\tmCookieHandler.clearCookies(callback);\n\t}\n\n\tprivate @Nullable MultipartBody.Builder constructMultipartBody(\n\t\tReadableArray body,\n\t\tString contentType,\n\t\tint requestId\n\t) {\n\t\tRCTDeviceEventEmitter eventEmitter = getEventEmitter();\n\t\tMultipartBody.Builder multipartBuilder = new MultipartBody.Builder();\n\t\tmultipartBuilder.setType(MediaType.parse(contentType));\n\t\tfor (int i = 0, size = body.size(); i < size; i++) {\n\t\t\tReadableMap bodyPart = body.getMap(i);\n\n\t\t\t// Determine part's content type.\n\t\t\tReadableArray headersArray = bodyPart.getArray(\"headers\");\n\t\t\tHeaders headers = extractHeaders(headersArray, null);\n\t\t\tif (headers == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Missing or invalid header format for FormData part.\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tMediaType partContentType = null;\n\t\t\tString partContentTypeStr = headers.get(CONTENT_TYPE_HEADER_NAME);\n\n\t\t\tif (partContentTypeStr != null) {\n\t\t\t\tpartContentType = MediaType.parse(partContentTypeStr);\n\t\t\t\t// Remove the content-type header because MultipartBuilder gets it explicitly as an\n\t\t\t\t// argument and doesn't expect it in the headers array.\n\t\t\t\theaders = headers.newBuilder().removeAll(CONTENT_TYPE_HEADER_NAME).build();\n\t\t\t}\n\n\t\t\tif (bodyPart.hasKey(REQUEST_BODY_KEY_STRING)) {\n\t\t\t\tString bodyValue = bodyPart.getString(REQUEST_BODY_KEY_STRING);\n\t\t\t\tmultipartBuilder.addPart(headers, RequestBody.create(partContentType, bodyValue));\n\t\t\t} else if (bodyPart.hasKey(REQUEST_BODY_KEY_URI)) {\n\t\t\t\tif (partContentType == null) {\n\t\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\t\"Binary FormData part needs a content-type header.\",\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tString fileContentUriStr = bodyPart.getString(REQUEST_BODY_KEY_URI);\n\t\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), fileContentUriStr);\n\n\t\t\t\tif (fileInputStream == null) {\n\t\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\t\"Could not retrieve file for uri \" + fileContentUriStr,\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tmultipartBuilder.addPart(headers, RequestBodyUtil.create(partContentType, fileInputStream));\n\t\t\t} else {\n\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, \"Unrecognized FormData part.\", null);\n\t\t\t}\n\t\t}\n\t\treturn multipartBuilder;\n\t}\n\n\t/**\n\t* Extracts the headers from the Array. If the format is invalid, this method will return null.\n\t*/\n\tprivate @Nullable Headers extractHeaders(\n\t\t@Nullable ReadableArray headersArray,\n\t\t@Nullable ReadableMap requestData\n\t) {\n\t\tif (headersArray == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tHeaders.Builder headersBuilder = new Headers.Builder();\n\n\t\tfor (int headersIdx = 0, size = headersArray.size(); headersIdx < size; headersIdx++) {\n\t\t\tReadableArray header = headersArray.getArray(headersIdx);\n\n\t\t\tif (header == null || header.size() != 2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tString headerName = header.getString(0);\n\t\t\tString headerValue = header.getString(1);\n\n\t\t\tif (headerName == null || headerValue == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\theadersBuilder.add(headerName, headerValue);\n\t\t}\n\n\t\tif (headersBuilder.get(USER_AGENT_HEADER_NAME) == null && mDefaultUserAgent != null) {\n\t\t\theadersBuilder.add(USER_AGENT_HEADER_NAME, mDefaultUserAgent);\n\t\t}\n\n\t\t// Sanitize content encoding header, supported only when request specify payload as string\n\t\tboolean isGzipSupported = requestData != null && requestData.hasKey(REQUEST_BODY_KEY_STRING);\n\n\t\tif (!isGzipSupported) {\n\t\t\theadersBuilder.removeAll(CONTENT_ENCODING_HEADER_NAME);\n\t\t}\n\t\treturn headersBuilder.build();\n\t}\n\n\tprivate RCTDeviceEventEmitter getEventEmitter() {\n\t\treturn getReactApplicationContext().getJSModule(RCTDeviceEventEmitter.class);\n\t}\n}\n```\n\n\n- 在终端代开项目`cd {project}`执行\n- `react-native run-android`开始编译，编译的过程很漫长，大概需要10到20分钟\n- 如果中途失败记得删除`/node_modules/react-native/ReactAndroid/bulid`里面的所有内容，然后重新编译\n\n- 关于源代码编译可以参考官方文档[中文](https://reactnative.cn/docs/building-from-source.html)或者[英文](https://facebook.github.io/react-native/docs/building-from-source)官网详细查看\n\n\n\n- 关于详细代码可进入我的[Github](https://github.com/AaronBank/react-native.git)查看\n\n*感谢支持*","source":"_posts/react-native中fetch发送https或http相关问题总结.md","raw":"---\ntitle: react-native中使用fetch发送https或http相关问题总结\ndate: 2019-07-30 16:37:19\ntags: ReactNative\ncategories: 前端\ncover: http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/150542.jpg\n---\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/150542.jpg) \n\n\n\n`react-native`再请求方面有点坑，`Ios`端默认支持`https`，而安卓默认支持的事`http`，如果你需要的是其中的某一种方式，那这篇文章可能能帮到你😍😍\n\n\n\n### 当前环境\n\n- OS: macOS High Sierra 10.13.5\n- Node: 8.11.3\n- Yarn: 1.7.0\n- npm: 5.6.0\n- Watchman: 4.9.0\n- Xcode: Xcode 9.4.1\n- react: 16.3.1 => 16.3.1\n- react-native: 0.55.4 => 0.55.4\n\n\n\n### 前置说明\n\n1. 在ios平台ios9.0以上默认支持https而不支持http\n2. 对于https，如果你的服务器端是CA签发的证书，那你ios平台不需要改动任何代码\n3. 对于自签证书，那你需要对源代码进行改动，下面会详细说明方式\n4. 对于http，有两个方式可以做到，下面会详细说明方式\n    1. 直接使用ip地址\n    2. 使用域名，对源代码进行配置\n\n  \n\n### 关于ios支持https自签证书\n\n\n- 服务器端使用自签证书，免证书方法\n- 打开XCode在当前项目路径为`Libraries/RCTNetwork.xcodeproj`找到`RCTHTTPRequestHandler.mm`\n- 或者在`{project}/node_modules/react-native/Libraries/Network`目录下同样可以找到该文件\n- 在文件中搜索`#pragma mark - NSURLSession delegate`并在其后面添加如下代码即可\n\n\n```c++\n- (void)URLSession:(NSURLSession *)session  didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge  completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * __nullable credential))completionHandler{\n    if (RCT_DEBUG) {\n        completionHandler(NSURLSessionAuthChallengeUseCredential,[NSURLCredential  credentialForTrust:challenge.protectionSpace.serverTrust]);\n    }\n}\n```\n\n- 配置如图所示\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902-1.png) \n\n\n\n### 关于ios支持http请求\n\n- 关于http方式我们只介绍第二种因为直接使用ip地址真的是太。。简单，直接把域名换成ip就好了\n- 对于第二种你需要改动`{project}/ios/App`下面的`Info.plist`文件\n\n\n```xml\n<key>NSAppTransportSecuritykey>\n<dict>\n    <key>NSAllowsArbitraryLoadskey></key>\n    <true/>\n<dict>\n```\n\n- 配置如图所示\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902.png) \n\n到此为止`Ios`相关问题就解决了，`Ios`部分还是比较好弄得O(∩_∩)O不是很麻烦，`Android`得话就麻烦些，下面我们说下`Android`相关的解决方案\n\n\n\n### 关于Android端http和https你需要知道\n\n1. 安卓默认是支持http请求儿不支持https\n2. 想做到支持https那就需要改动react-native的源代码，进而重新编译才能成功\n\n\n### 关于Android支持https\n- 下载ndk（下载r10e版本的，其他的版本会有问题）\n\t1.  Mac OS (64-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip](http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip)\n\t2.  Linux (64-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip](http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip)\n\t3.  Windows (64-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip](http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip)\n\t4.  Windows (32-bit) - [http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip](http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip)\n\n- 在项目`{project}/android`文件夹先创建`local.properties`文件（如果已经存在哪直接修改就好了）\n\n\n```properties\nsdk.dir=你自己的sdk路径\nndk.dir=你自己的ndk路径\n```\n\n![](http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140900-1.jpg)\n\n- 在`{project}/android/build.gradle`中添加`gradle-download-task`依赖\n\n```java\n...\ndependencies {\n    classpath 'com.android.tools.build:gradle:2.2.3'\n    classpath 'de.undercouch:gradle-download-task:3.1.2'\n\t\n    // NOTE: Do not place your application dependencies here; they belong\n    // in the individual module build.gradle files\n}\n...\n```\n\n\n- 在`{project}/android/settings.gradle`中添加`:ReactAndroid`项目\n\n\n```java\n...\n    include ':ReactAndroid'\n  \n    project(':ReactAndroid').projectDir = new File(rootProject.projectDir, '../node_modules/react-native/ReactAndroid')\n...\n```\n\n- 修改`{project}/android/app/build.gradle`文件，使用:ReactAndroid替换预编译库\n\n\n```java\n...\n  \ncompile fileTree(dir: \"libs\", include: [\"*.jar\"])\ncompile \"com.android.support:appcompat-v7:23.0.1\"\ncompile project(':ReactAndroid')\n  \n...\n```\n\n- 重写第三方模块的依赖，否则会报错`-Error: more than one library with package name 'com.facebook.react'`\n- 修改`{project}/android/app/build.gradle`文件，添加以下代码\n\n\n```java\n...\n  \nconfigurations.all {\n    exclude group: 'com.facebook.react', module: 'react-native'\n}\n  \n...\n```\n\n\n\n- 重写`okHttp`类\n\n```java\npackage com.facebook.react.modules.network;\n\nimport android.net.Uri;\nimport android.util.Base64;\nimport com.facebook.react.bridge.Arguments;\nimport com.facebook.react.bridge.GuardedAsyncTask;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.bridge.ReactContextBaseJavaModule;\nimport com.facebook.react.bridge.ReactMethod;\nimport com.facebook.react.bridge.ReadableArray;\nimport com.facebook.react.bridge.ReadableMap;\nimport com.facebook.react.bridge.WritableMap;\nimport com.facebook.react.common.StandardCharsets;\nimport com.facebook.react.common.network.OkHttpCallUtil;\nimport com.facebook.react.module.annotations.ReactModule;\nimport com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.charset.Charset;\nimport java.security.KeyManagementException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.SecureRandom;\nimport java.security.cert.CertificateException;\nimport java.security.cert.X509Certificate;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\nimport javax.annotation.Nullable;\nimport javax.net.ssl.HostnameVerifier;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.SSLSession;\nimport javax.net.ssl.TrustManager;\nimport javax.net.ssl.X509TrustManager;\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.CookieJar;\nimport okhttp3.Headers;\nimport okhttp3.Interceptor;\nimport okhttp3.JavaNetCookieJar;\nimport okhttp3.MediaType;\nimport okhttp3.MultipartBody;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.RequestBody;\nimport okhttp3.Response;\nimport okhttp3.ResponseBody;\nimport okio.ByteString;\n\n/**\n* Implements the XMLHttpRequest JavaScript interface.\n*/\n@ReactModule(name = NetworkingModule.NAME)\n\npublic final class NetworkingModule extends ReactContextBaseJavaModule {\n\tprivate SSLContext getSLLContext () {\n\t\tX509TrustManager xtm = new X509TrustManager() {\n\n\t\t\t@Override\n\t\t\tpublic void checkClientTrusted(X509Certificate[] chain, String authType) {}\n\n\t\t\t@Override\n\t\t\tpublic void checkServerTrusted(X509Certificate[] chain, String authType) {}\n\n\t\t\t@Override\n\t\t\tpublic X509Certificate[] getAcceptedIssuers() {\n\t\t\t\tX509Certificate[] x509Certificates = new X509Certificate[0];\n\t\t\t\t\n\t\t\t\treturn x509Certificates;\n\t\t\t}\n\t\t};\n\n\t\tSSLContext sslContext = null;\n\n\t\ttry {\n\n\t\t\tsslContext = SSLContext.getInstance(\"SSL\");\n\t\t\tsslContext.init(null, new TrustManager[]{xtm}, new SecureRandom());\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\n\t\t\te.printStackTrace();\n\t\t} catch (KeyManagementException e) {\n\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\treturn sslContext;\n\t}\n\n\t/**\n\t* Allows to implement a custom fetching process for specific URIs. It is the handler's job\n\t* to fetch the URI and return the JS body payload.\n\t*/\n\tpublic interface UriHandler {\n\n\t\t/**\n\t\t* Returns if the handler should be used for an URI.\n\t\t*/\n\t\tboolean supports(Uri uri, String responseType);\n\t\t\n\t\t/**\n\t\t* Fetch the URI and return the JS body payload.\n\t\t*/\n\t\tWritableMap fetch(Uri uri) throws IOException;\n\t}\n\n\t/**\n\t* Allows adding custom handling to build the {@link RequestBody} from the JS body payload.\n\t*/\n\tpublic interface RequestBodyHandler {\n\n\t\t/**\n\t\t* Returns if the handler should be used for a JS body payload.\n\t\t*/\n\t\tboolean supports(ReadableMap map);\n\n\t\t/**\n\t\t* Returns the {@link RequestBody} for the JS body payload.\n\t\t*/\n\t\tRequestBody toRequestBody(ReadableMap map, String contentType);\n\t}\n\n\t/**\n\t* Allows adding custom handling to build the JS body payload from the {@link ResponseBody}.\n\t*/\n\n\tpublic interface ResponseHandler {\n\t\t/**\n\t\t* Returns if the handler should be used for a response type.\n\t\t*/\n\t\tboolean supports(String responseType);\n\n\t\t/**\n\t\t* Returns the JS body payload for the {@link ResponseBody}.\n\t\t*/\n\t\tWritableMap toResponseData(ResponseBody body) throws IOException;\n\t}\n\n\tprotected static final String NAME = \"Networking\";\n\n\tprivate static final String CONTENT_ENCODING_HEADER_NAME = \"content-encoding\";\n\n\tprivate static final String CONTENT_TYPE_HEADER_NAME = \"content-type\";\n\n\tprivate static final String REQUEST_BODY_KEY_STRING = \"string\";\n\n\tprivate static final String REQUEST_BODY_KEY_URI = \"uri\";\n\n\tprivate static final String REQUEST_BODY_KEY_FORMDATA = \"formData\";\n\n\tprivate static final String REQUEST_BODY_KEY_BASE64 = \"base64\";\n\n\tprivate static final String USER_AGENT_HEADER_NAME = \"user-agent\";\n\n\tprivate static final int CHUNK_TIMEOUT_NS = 100 * 1000000; // 100ms\n\n\tprivate static final int MAX_CHUNK_SIZE_BETWEEN_FLUSHES = 8 * 1024; // 8K\n\n\tprivate final OkHttpClient mClient;\n\n\tprivate final ForwardingCookieHandler mCookieHandler;\n\n\tprivate final @Nullable String mDefaultUserAgent;\n\n\tprivate final CookieJarContainer mCookieJarContainer;\n\n\tprivate final Set<Integer> mRequestIds;\n\n\tprivate final List<RequestBodyHandler> mRequestBodyHandlers = new ArrayList<>();\n\n\tprivate final List<UriHandler> mUriHandlers = new ArrayList<>();\n\n\tprivate final List<ResponseHandler> mResponseHandlers = new ArrayList<>();\n\n\tprivate boolean mShuttingDown;\n\n\t/* package */\n\n\tNetworkingModule(\n\t\tReactApplicationContext reactContext,\n\t\t@Nullable String defaultUserAgent,\n\t\tOkHttpClient client,\n\t\t@Nullable List networkInterceptorCreators\n\t) {\n\t\tsuper(reactContext);\n\t\tif (networkInterceptorCreators != null) {\n\t\t\tOkHttpClient.Builder clientBuilder = client.newBuilder();\n\n\t\t\tfor (NetworkInterceptorCreator networkInterceptorCreator : networkInterceptorCreators) {\n\t\t\t\tclientBuilder.addNetworkInterceptor(networkInterceptorCreator.create());\n\t\t\t}\n\n\t\t\tclient = clientBuilder.build();\n\t\t}\n\n\t\tclient = client.newBuilder().hostnameVerifier(new HostnameVerifier() {\n\t\t\t@Override\n\t\t\tpublic boolean verify(String s, SSLSession sslSession) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}).sslSocketFactory(getSLLContext().getSocketFactory()).build();\n\n\t\tmClient = client;\n\t\tmCookieHandler = new ForwardingCookieHandler(reactContext);\n\t\tmCookieJarContainer = (CookieJarContainer) mClient.cookieJar();\n\t\tmShuttingDown = false;\n\t\tmDefaultUserAgent = defaultUserAgent;\n\t\tmRequestIds = new HashSet<>();\n\t}\n\n\t/**\n\t* @param context the ReactContext of the application\n\t* @param defaultUserAgent the User-Agent header that will be set for all requests where the\n\t* caller does not provide one explicitly\n\t* @param client the {@link OkHttpClient} to be used for networking\n\t*/\n\n\t/* package */\n\tNetworkingModule(\n\t\tReactApplicationContext context,\n\t\t@Nullable String defaultUserAgent,\n\t\tOkHttpClient client\n\t) {\n\t\tthis(context, defaultUserAgent, client, null);\n\t}\n\n\t/**\n\t* @param context the ReactContext of the application\n\t*/\n\tpublic NetworkingModule(final ReactApplicationContext context) {\n\t\tthis(context, null, OkHttpClientProvider.createClient(), null);\n\t}\n\n\t/**\n\t* @param context the ReactContext of the application\n\t* @param networkInterceptorCreators list of {@link NetworkInterceptorCreator}'s whose create()\n\t* methods would be called to attach the interceptors to the client.\n\t*/\n\tpublic NetworkingModule(\n\t\tReactApplicationContext context,\n\t\tList networkInterceptorCreators) {\n\t\t\tthis(context, null, OkHttpClientProvider.createClient(), networkInterceptorCreators);\n\t\t}\n\t/**\n\t* @param context the ReactContext of the application\n\t* @param defaultUserAgent the User-Agent header that will be set for all requests where the\n\t* caller does not provide one explicitly\n\t*/\n\n\tpublic NetworkingModule(ReactApplicationContext context, String defaultUserAgent) {\n\t\tthis(context, defaultUserAgent, OkHttpClientProvider.createClient(), null);\n\t}\n\n\t@Override\n\tpublic void initialize() {\n\t\tmCookieJarContainer.setCookieJar(new JavaNetCookieJar(mCookieHandler));\n\t}\n\n\t@Override\n\tpublic String getName() {\n\t\treturn NAME;\n\t}\n\n\t@Override\n\tpublic void onCatalystInstanceDestroy() {\n\t\tmShuttingDown = true;\n\t\tcancelAllRequests();\n\t\tmCookieHandler.destroy();\n\t\tmCookieJarContainer.removeCookieJar();\n\t\tmRequestBodyHandlers.clear();\n\t\tmResponseHandlers.clear();\n\t\tmUriHandlers.clear();\n\t}\n\n\tpublic void addUriHandler(UriHandler handler) {\n\t\tmUriHandlers.add(handler);\n\t}\n\n\tpublic void addRequestBodyHandler(RequestBodyHandler handler) {\n\t\tmRequestBodyHandlers.add(handler);\n\t}\n\n\tpublic void addResponseHandler(ResponseHandler handler) {\n\t\tmResponseHandlers.add(handler);\n\t}\n\n\tpublic void removeUriHandler(UriHandler handler) {\n\t\tmUriHandlers.remove(handler);\n\t}\n\n\tpublic void removeRequestBodyHandler(RequestBodyHandler handler) {\n\t\tmRequestBodyHandlers.remove(handler);\n\t}\n\n\tpublic void removeResponseHandler(ResponseHandler handler) {\n\t\tmResponseHandlers.remove(handler);\n\t}\n\n\t@ReactMethod\n\t/**\n\t* @param timeout value of 0 results in no timeout\n\t*/\n\tpublic void sendRequest(\n\t\tString method,\n\t\tString url,\n\t\tfinal int requestId,\n\t\tReadableArray headers,\n\t\tReadableMap data,\n\t\tfinal String responseType,\n\t\tfinal boolean useIncrementalUpdates,\n\t\tint timeout,\n\t\tboolean withCredentials\n\t) {\n\t\tfinal RCTDeviceEventEmitter eventEmitter = getEventEmitter();\n\n\t\ttry {\n\t\t\tUri uri = Uri.parse(url);\n\t\t\t// Check if a handler is registered\n\t\t\tfor (UriHandler handler : mUriHandlers) {\n\t\t\t\tif (handler.supports(uri, responseType)) {\n\t\t\t\t\tWritableMap res = handler.fetch(uri);\n\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);\n\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);\n\t\t\treturn;\n\t\t}\n\n\t\tRequest.Builder requestBuilder;\n\n\t\ttry {\n\t\t\trequestBuilder = new Request.Builder().url(url);\n\t\t} catch (Exception e) {\n\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), null);\n\t\t\treturn;\n\t\t}\n\n\t\tif (requestId != 0) {\n\t\t\trequestBuilder.tag(requestId);\n\t\t}\n\n\t\tOkHttpClient.Builder clientBuilder = mClient.newBuilder();\n\n\t\tif (!withCredentials) {\n\t\t\tclientBuilder.cookieJar(CookieJar.NO_COOKIES);\n\t\t}\n\n\t\t// If JS is listening for progress updates, install a ProgressResponseBody that intercepts the\n\t\t// response and counts bytes received.\n\t\tif (useIncrementalUpdates) {\n\n\t\t\tclientBuilder.addNetworkInterceptor(new Interceptor() {\n\t\t\t\t@Override\n\t\t\t\tpublic Response intercept(Interceptor.Chain chain) throws IOException {\n\t\t\t\t\tResponse originalResponse = chain.proceed(chain.request());\n\t\t\t\t\tProgressResponseBody responseBody = new ProgressResponseBody(\n\t\t\t\t\toriginalResponse.body(),\n\t\t\t\t\tnew ProgressListener() {\n\t\t\t\t\t\tlong last = System.nanoTime();\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onProgress(long bytesWritten, long contentLength, boolean done) {\n\t\t\t\t\t\t\tlong now = System.nanoTime();\n\t\t\t\t\t\t\tif (!done && !shouldDispatch(now, last)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (responseType.equals(\"text\")) {\n\t\t\t\t\t\t\t\t// For 'text' responses we continuously send response data with progress info to\n\t\t\t\t\t\t\t\t// JS below, so no need to do anything here.\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tResponseUtil.onDataReceivedProgress(\n\t\t\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\t\t\trequestId,\n\t\t\t\t\t\t\t\tbytesWritten,\n\t\t\t\t\t\t\t\tcontentLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tlast = now;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn originalResponse.newBuilder().body(responseBody).build();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// If the current timeout does not equal the passed in timeout, we need to clone the existing\n\t\t// client and set the timeout explicitly on the clone. This is cheap as everything else is\n\t\t// shared under the hood.\n\t\t// See https://github.com/square/okhttp/wiki/Recipes#per-call-configuration for more information\n\n\t\tif (timeout != mClient.connectTimeoutMillis()) {\n\t\t\tclientBuilder.readTimeout(timeout, TimeUnit.MILLISECONDS);\n\t\t}\n\n\t\tOkHttpClient client = clientBuilder.build();\n\t\tHeaders requestHeaders = extractHeaders(headers, data);\n\t\tif (requestHeaders == null) {\n\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, \"Unrecognized headers format\", null);\n\t\t\treturn;\n\t\t}\n\n\t\tString contentType = requestHeaders.get(CONTENT_TYPE_HEADER_NAME);\n\t\tString contentEncoding = requestHeaders.get(CONTENT_ENCODING_HEADER_NAME);\n\t\trequestBuilder.headers(requestHeaders);\n\n\t\t// Check if a handler is registered\n\t\tRequestBodyHandler handler = null;\n\n\t\tif (data != null) {\n\n\t\t\tfor (RequestBodyHandler curHandler : mRequestBodyHandlers) {\n\t\t\t\tif (curHandler.supports(data)) {\n\t\t\t\t\thandler = curHandler;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tRequestBody requestBody;\n\t\tif (data == null || method.toLowerCase().equals(\"get\") || method.toLowerCase().equals(\"head\")) {\n\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);\n\t\t} else if (handler != null) {\n\t\t\trequestBody = handler.toRequestBody(data, contentType);\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_STRING)) {\n\t\t\tif (contentType == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Payload is set but no content-type header specified\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tString body = data.getString(REQUEST_BODY_KEY_STRING);\n\t\t\tMediaType contentMediaType = MediaType.parse(contentType);\n\n\t\t\tif (RequestBodyUtil.isGzipEncoding(contentEncoding)) {\n\t\t\t\trequestBody = RequestBodyUtil.createGzip(contentMediaType, body);\n\t\t\t\tif (requestBody == null) {\n\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, \"Failed to gzip request body\", null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trequestBody = RequestBody.create(contentMediaType, body);\n\t\t\t}\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_BASE64)) {\n\n\t\t\tif (contentType == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Payload is set but no content-type header specified\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tString base64String = data.getString(REQUEST_BODY_KEY_BASE64);\n\t\t\tMediaType contentMediaType = MediaType.parse(contentType);\n\t\t\trequestBody = RequestBody.create(contentMediaType, ByteString.decodeBase64(base64String));\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_URI)) {\n\t\t\tif (contentType == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Payload is set but no content-type header specified\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tString uri = data.getString(REQUEST_BODY_KEY_URI);\n\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), uri);\n\n\t\t\tif (fileInputStream == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Could not retrieve file for uri \" + uri,\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trequestBody = RequestBodyUtil.create(MediaType.parse(contentType), fileInputStream);\n\t\t} else if (data.hasKey(REQUEST_BODY_KEY_FORMDATA)) {\n\t\t\tif (contentType == null) {\n\t\t\t\tcontentType = \"multipart/form-data\";\n\t\t\t}\n\n\t\t\tReadableArray parts = data.getArray(REQUEST_BODY_KEY_FORMDATA);\n\t\t\tMultipartBody.Builder multipartBuilder =\n\t\t\tconstructMultipartBody(parts, contentType, requestId);\n\n\t\t\tif (multipartBuilder == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trequestBody = multipartBuilder.build();\n\n\t\t} else {\n\t\t\t// Nothing in data payload, at least nothing we could understand anyway.\n\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);\n\t\t}\n\n\t\trequestBuilder.method(\n\t\t\tmethod,\n\t\t\twrapRequestBodyWithProgressEmitter(requestBody, eventEmitter, requestId)\n\t\t);\n\t\taddRequest(requestId);\n\t\tclient.newCall(requestBuilder.build()).enqueue(\n\t\t\tnew Callback() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onFailure(Call call, IOException e) {\n\t\t\t\t\tif (mShuttingDown) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tremoveRequest(requestId);\n\n\t\t\t\t\tString errorMessage = e.getMessage() != null\n\t\t\t\t\t? e.getMessage()\n\t\t\t\t\t: \"Error while executing request: \" + e.getClass().getSimpleName();\n\n\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, errorMessage, e);\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onResponse(Call call, Response response) throws IOException {\n\t\t\t\t\tif (mShuttingDown) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tremoveRequest(requestId);\n\n\t\t\t\t\t// Before we touch the body send headers to JS\n\t\t\t\t\tResponseUtil.onResponseReceived(\n\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\tresponse.code(),\n\t\t\t\t\t\ttranslateHeaders(response.headers()),\n\t\t\t\t\t\tresponse.request().url().toString()\n\t\t\t\t\t);\n\n\t\t\t\t\tResponseBody responseBody = response.body();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Check if a handler is registered\n\t\t\t\t\t\tfor (ResponseHandler handler : mResponseHandlers) {\n\n\t\t\t\t\t\t\tif (handler.supports(responseType)) {\n\t\t\t\t\t\t\t\tWritableMap res = handler.toResponseData(responseBody);\n\t\t\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);\n\t\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If JS wants progress updates during the download, and it requested a text response,\n\t\t\t\t\t\t// periodically send response data updates to JS.\n\t\t\t\t\t\tif (useIncrementalUpdates && responseType.equals(\"text\")) {\n\t\t\t\t\t\t\treadWithProgress(eventEmitter, requestId, responseBody);\n\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise send the data in one big chunk, in the format that JS requested.\n\t\t\t\t\t\tString responseString = \"\";\n\n\t\t\t\t\t\tif (responseType.equals(\"text\")) {\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresponseString = responseBody.string();\n\t\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\tif (response.request().method().equalsIgnoreCase(\"HEAD\")) {\n\t\t\t\t\t\t\t\t\t// The request is an `HEAD` and the body is empty,\n\t\t\t\t\t\t\t\t\t// the OkHttp will produce an exception.\n\t\t\t\t\t\t\t\t\t// Ignore the exception to not invalidate the request in the\n\t\t\t\t\t\t\t\t\t// Javascript layer.\n\t\t\t\t\t\t\t\t\t// Introduced to fix issue #7463.\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (responseType.equals(\"base64\")) {\n\t\t\t\t\t\t\tresponseString = Base64.encodeToString(responseBody.bytes(), Base64.NO_WRAP);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, responseString);\n\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate RequestBody wrapRequestBodyWithProgressEmitter(\n\t\tfinal RequestBody requestBody,\n\t\tfinal RCTDeviceEventEmitter eventEmitter,\n\t\tfinal int requestId\n\t) {\n\t\tif(requestBody == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn RequestBodyUtil.createProgressRequest(\n\t\t\trequestBody,\n\t\t\tnew ProgressListener() {\n\t\t\t\tlong last = System.nanoTime();\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onProgress(long bytesWritten, long contentLength, boolean done) {\n\n\t\t\t\t\tlong now = System.nanoTime();\n\n\t\t\t\t\tif (done || shouldDispatch(now, last)) {\n\t\t\t\t\t\tResponseUtil.onDataSend(eventEmitter, requestId, bytesWritten, contentLength);\n\t\t\t\t\t\tlast = now;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate void readWithProgress(\n\t\tRCTDeviceEventEmitter eventEmitter,\n\t\tint requestId,\n\t\tResponseBody responseBody\n\t) throws IOException {\n\t\tlong totalBytesRead = -1;\n\t\tlong contentLength = -1;\n\n\t\ttry {\n\t\t\tProgressResponseBody progressResponseBody = (ProgressResponseBody) responseBody;\n\t\t\ttotalBytesRead = progressResponseBody.totalBytesRead();\n\t\t\tcontentLength = progressResponseBody.contentLength();\n\t\t} catch (ClassCastException e) {\n\t\t\t// Ignore\n\t\t}\n\n\t\tCharset charset = responseBody.contentType() == null ? StandardCharsets.UTF_8 :\n\t\tresponseBody.contentType().charset(StandardCharsets.UTF_8);\n\t\tProgressiveStringDecoder streamDecoder = new ProgressiveStringDecoder(charset);\n\t\tInputStream inputStream = responseBody.byteStream();\n\n\t\ttry {\n\t\t\tbyte[] buffer = new byte[MAX_CHUNK_SIZE_BETWEEN_FLUSHES];\n\t\t\tint read;\n\n\t\t\twhile ((read = inputStream.read(buffer)) != -1) {\n\t\t\t\tResponseUtil.onIncrementalDataReceived(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\tstreamDecoder.decodeNext(buffer, read),\n\t\t\t\t\ttotalBytesRead,\n\t\t\t\t\tcontentLength\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tinputStream.close();\n\t\t}\n\n\t}\n\n\tprivate static boolean shouldDispatch(long now, long last) {\n\t\treturn last + CHUNK_TIMEOUT_NS < now;\n\t}\n\n\tprivate synchronized void addRequest(int requestId) {\n\t\tmRequestIds.add(requestId);\n\t}\n\n\tprivate synchronized void removeRequest(int requestId) {\n\t\tmRequestIds.remove(requestId);\n\t}\n\n\tprivate synchronized void cancelAllRequests() {\n\t\tfor (Integer requestId : mRequestIds) {\n\t\t\tcancelRequest(requestId);\n\t\t}\n\n\t\tmRequestIds.clear();\n\t}\n\n\tprivate static WritableMap translateHeaders(Headers headers) {\n\t\tWritableMap responseHeaders = Arguments.createMap();\n\n\t\tfor (int i = 0; i < headers.size(); i++) {\n\t\t\tString headerName = headers.name(i);\n\t\t\t\n\t\t\t// multiple values for the same header\n\t\t\tif (responseHeaders.hasKey(headerName)) {\n\t\t\t\tresponseHeaders.putString(\n\t\t\t\theaderName,\n\t\t\t\tresponseHeaders.getString(headerName) + \", \" + headers.value(i));\n\t\t\t} else {\n\t\t\t\tresponseHeaders.putString(headerName, headers.value(i));\n\t\t\t}\n\t\t}\n\n\t\treturn responseHeaders;\n\t}\n\n\t@ReactMethod\n\tpublic void abortRequest(final int requestId) {\n\t\tcancelRequest(requestId);\n\t\tremoveRequest(requestId);\n\t}\n\n\tprivate void cancelRequest(final int requestId) {\n\t\t// We have to use AsyncTask since this might trigger a NetworkOnMainThreadException, this is an\n\t\t// open issue on OkHttp: https://github.com/square/okhttp/issues/869\n\t\tnew GuardedAsyncTask(getReactApplicationContext()) {\n\t\t\t@Override\n\t\t\tprotected void doInBackgroundGuarded(Void... params) {\n\t\t\t\tOkHttpCallUtil.cancelTag(mClient, Integer.valueOf(requestId));\n\t\t\t}\n\t\t}.execute();\n\t}\n\n\t@ReactMethod\n\tpublic void clearCookies(com.facebook.react.bridge.Callback callback) {\n\t\tmCookieHandler.clearCookies(callback);\n\t}\n\n\tprivate @Nullable MultipartBody.Builder constructMultipartBody(\n\t\tReadableArray body,\n\t\tString contentType,\n\t\tint requestId\n\t) {\n\t\tRCTDeviceEventEmitter eventEmitter = getEventEmitter();\n\t\tMultipartBody.Builder multipartBuilder = new MultipartBody.Builder();\n\t\tmultipartBuilder.setType(MediaType.parse(contentType));\n\t\tfor (int i = 0, size = body.size(); i < size; i++) {\n\t\t\tReadableMap bodyPart = body.getMap(i);\n\n\t\t\t// Determine part's content type.\n\t\t\tReadableArray headersArray = bodyPart.getArray(\"headers\");\n\t\t\tHeaders headers = extractHeaders(headersArray, null);\n\t\t\tif (headers == null) {\n\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\teventEmitter,\n\t\t\t\t\trequestId,\n\t\t\t\t\t\"Missing or invalid header format for FormData part.\",\n\t\t\t\t\tnull\n\t\t\t\t);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tMediaType partContentType = null;\n\t\t\tString partContentTypeStr = headers.get(CONTENT_TYPE_HEADER_NAME);\n\n\t\t\tif (partContentTypeStr != null) {\n\t\t\t\tpartContentType = MediaType.parse(partContentTypeStr);\n\t\t\t\t// Remove the content-type header because MultipartBuilder gets it explicitly as an\n\t\t\t\t// argument and doesn't expect it in the headers array.\n\t\t\t\theaders = headers.newBuilder().removeAll(CONTENT_TYPE_HEADER_NAME).build();\n\t\t\t}\n\n\t\t\tif (bodyPart.hasKey(REQUEST_BODY_KEY_STRING)) {\n\t\t\t\tString bodyValue = bodyPart.getString(REQUEST_BODY_KEY_STRING);\n\t\t\t\tmultipartBuilder.addPart(headers, RequestBody.create(partContentType, bodyValue));\n\t\t\t} else if (bodyPart.hasKey(REQUEST_BODY_KEY_URI)) {\n\t\t\t\tif (partContentType == null) {\n\t\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\t\"Binary FormData part needs a content-type header.\",\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tString fileContentUriStr = bodyPart.getString(REQUEST_BODY_KEY_URI);\n\t\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), fileContentUriStr);\n\n\t\t\t\tif (fileInputStream == null) {\n\t\t\t\t\tResponseUtil.onRequestError(\n\t\t\t\t\t\teventEmitter,\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\t\"Could not retrieve file for uri \" + fileContentUriStr,\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tmultipartBuilder.addPart(headers, RequestBodyUtil.create(partContentType, fileInputStream));\n\t\t\t} else {\n\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, \"Unrecognized FormData part.\", null);\n\t\t\t}\n\t\t}\n\t\treturn multipartBuilder;\n\t}\n\n\t/**\n\t* Extracts the headers from the Array. If the format is invalid, this method will return null.\n\t*/\n\tprivate @Nullable Headers extractHeaders(\n\t\t@Nullable ReadableArray headersArray,\n\t\t@Nullable ReadableMap requestData\n\t) {\n\t\tif (headersArray == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tHeaders.Builder headersBuilder = new Headers.Builder();\n\n\t\tfor (int headersIdx = 0, size = headersArray.size(); headersIdx < size; headersIdx++) {\n\t\t\tReadableArray header = headersArray.getArray(headersIdx);\n\n\t\t\tif (header == null || header.size() != 2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tString headerName = header.getString(0);\n\t\t\tString headerValue = header.getString(1);\n\n\t\t\tif (headerName == null || headerValue == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\theadersBuilder.add(headerName, headerValue);\n\t\t}\n\n\t\tif (headersBuilder.get(USER_AGENT_HEADER_NAME) == null && mDefaultUserAgent != null) {\n\t\t\theadersBuilder.add(USER_AGENT_HEADER_NAME, mDefaultUserAgent);\n\t\t}\n\n\t\t// Sanitize content encoding header, supported only when request specify payload as string\n\t\tboolean isGzipSupported = requestData != null && requestData.hasKey(REQUEST_BODY_KEY_STRING);\n\n\t\tif (!isGzipSupported) {\n\t\t\theadersBuilder.removeAll(CONTENT_ENCODING_HEADER_NAME);\n\t\t}\n\t\treturn headersBuilder.build();\n\t}\n\n\tprivate RCTDeviceEventEmitter getEventEmitter() {\n\t\treturn getReactApplicationContext().getJSModule(RCTDeviceEventEmitter.class);\n\t}\n}\n```\n\n\n- 在终端代开项目`cd {project}`执行\n- `react-native run-android`开始编译，编译的过程很漫长，大概需要10到20分钟\n- 如果中途失败记得删除`/node_modules/react-native/ReactAndroid/bulid`里面的所有内容，然后重新编译\n\n- 关于源代码编译可以参考官方文档[中文](https://reactnative.cn/docs/building-from-source.html)或者[英文](https://facebook.github.io/react-native/docs/building-from-source)官网详细查看\n\n\n\n- 关于详细代码可进入我的[Github](https://github.com/AaronBank/react-native.git)查看\n\n*感谢支持*","slug":"react-native中fetch发送https或http相关问题总结","published":1,"updated":"2019-07-30T16:10:22.985Z","_id":"cjyq0pcht0006xofybnvo5axt","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/150542.jpg\" alt> </p>\n<p><code>react-native</code>再请求方面有点坑，<code>Ios</code>端默认支持<code>https</code>，而安卓默认支持的事<code>http</code>，如果你需要的是其中的某一种方式，那这篇文章可能能帮到你😍😍</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n</ul>\n<h3 id=\"前置说明\"><a href=\"#前置说明\" class=\"headerlink\" title=\"前置说明\"></a>前置说明</h3><ol>\n<li>在ios平台ios9.0以上默认支持https而不支持http</li>\n<li>对于https，如果你的服务器端是CA签发的证书，那你ios平台不需要改动任何代码</li>\n<li>对于自签证书，那你需要对源代码进行改动，下面会详细说明方式</li>\n<li>对于http，有两个方式可以做到，下面会详细说明方式<ol>\n<li>直接使用ip地址</li>\n<li>使用域名，对源代码进行配置</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"关于ios支持https自签证书\"><a href=\"#关于ios支持https自签证书\" class=\"headerlink\" title=\"关于ios支持https自签证书\"></a>关于ios支持https自签证书</h3><ul>\n<li>服务器端使用自签证书，免证书方法</li>\n<li>打开XCode在当前项目路径为<code>Libraries/RCTNetwork.xcodeproj</code>找到<code>RCTHTTPRequestHandler.mm</code></li>\n<li>或者在<code>{project}/node_modules/react-native/Libraries/Network</code>目录下同样可以找到该文件</li>\n<li>在文件中搜索<code>#pragma mark - NSURLSession delegate</code>并在其后面添加如下代码即可</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>)URLSession:(NSURLSession *)session  didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge  completionHandler:(<span class=\"keyword\">void</span> (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * __nullable credential))completionHandler&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (RCT_DEBUG) &#123;</span><br><span class=\"line\">        completionHandler(NSURLSessionAuthChallengeUseCredential,[NSURLCredential  credentialForTrust:challenge.protectionSpace.serverTrust]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置如图所示</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902-1.png\" alt> </p>\n<h3 id=\"关于ios支持http请求\"><a href=\"#关于ios支持http请求\" class=\"headerlink\" title=\"关于ios支持http请求\"></a>关于ios支持http请求</h3><ul>\n<li>关于http方式我们只介绍第二种因为直接使用ip地址真的是太。。简单，直接把域名换成ip就好了</li>\n<li>对于第二种你需要改动<code>{project}/ios/App</code>下面的<code>Info.plist</code>文件</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>NSAppTransportSecuritykey&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>NSAllowsArbitraryLoadskey&gt;<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置如图所示</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902.png\" alt> </p>\n<p>到此为止<code>Ios</code>相关问题就解决了，<code>Ios</code>部分还是比较好弄得O(∩_∩)O不是很麻烦，<code>Android</code>得话就麻烦些，下面我们说下<code>Android</code>相关的解决方案</p>\n<h3 id=\"关于Android端http和https你需要知道\"><a href=\"#关于Android端http和https你需要知道\" class=\"headerlink\" title=\"关于Android端http和https你需要知道\"></a>关于Android端http和https你需要知道</h3><ol>\n<li>安卓默认是支持http请求儿不支持https</li>\n<li>想做到支持https那就需要改动react-native的源代码，进而重新编译才能成功</li>\n</ol>\n<h3 id=\"关于Android支持https\"><a href=\"#关于Android支持https\" class=\"headerlink\" title=\"关于Android支持https\"></a>关于Android支持https</h3><ul>\n<li><p>下载ndk（下载r10e版本的，其他的版本会有问题）</p>\n<ol>\n<li>Mac OS (64-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip</a></li>\n<li>Linux (64-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip</a></li>\n<li>Windows (64-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip</a></li>\n<li>Windows (32-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip</a></li>\n</ol>\n</li>\n<li><p>在项目<code>{project}/android</code>文件夹先创建<code>local.properties</code>文件（如果已经存在哪直接修改就好了）</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sdk.dir=你自己的sdk路径</span><br><span class=\"line\">ndk.dir=你自己的ndk路径</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140900-1.jpg\" alt></p>\n<ul>\n<li>在<code>{project}/android/build.gradle</code>中添加<code>gradle-download-task</code>依赖</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    classpath <span class=\"string\">'com.android.tools.build:gradle:2.2.3'</span></span><br><span class=\"line\">    classpath <span class=\"string\">'de.undercouch:gradle-download-task:3.1.2'</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class=\"line\">    <span class=\"comment\">// in the individual module build.gradle files</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在<code>{project}/android/settings.gradle</code>中添加<code>:ReactAndroid</code>项目</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">    include <span class=\"string\">':ReactAndroid'</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    project(<span class=\"string\">':ReactAndroid'</span>).projectDir = <span class=\"keyword\">new</span> File(rootProject.projectDir, <span class=\"string\">'../node_modules/react-native/ReactAndroid'</span>)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>修改<code>{project}/android/app/build.gradle</code>文件，使用:ReactAndroid替换预编译库</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">compile <span class=\"title\">fileTree</span><span class=\"params\">(dir: <span class=\"string\">\"libs\"</span>, include: [<span class=\"string\">\"*.jar\"</span>])</span></span></span><br><span class=\"line\"><span class=\"function\">compile \"com.android.support:appcompat-v7:23.0.1\"</span></span><br><span class=\"line\"><span class=\"function\">compile <span class=\"title\">project</span><span class=\"params\">(<span class=\"string\">':ReactAndroid'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">  </span></span><br><span class=\"line\"><span class=\"function\">...</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重写第三方模块的依赖，否则会报错<code>-Error: more than one library with package name &#39;com.facebook.react&#39;</code></li>\n<li>修改<code>{project}/android/app/build.gradle</code>文件，添加以下代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\">configurations.all &#123;</span><br><span class=\"line\">    exclude group: <span class=\"string\">'com.facebook.react'</span>, <span class=\"keyword\">module</span>: <span class=\"string\">'react-native'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重写<code>okHttp</code>类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.facebook.react.modules.network;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.net.Uri;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Base64;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.Arguments;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.GuardedAsyncTask;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReactContextBaseJavaModule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReactMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReadableArray;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReadableMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.WritableMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.common.StandardCharsets;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.common.network.OkHttpCallUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.<span class=\"keyword\">module</span>.annotations.ReactModule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.KeyManagementException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.NoSuchAlgorithmException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.SecureRandom;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.cert.CertificateException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.cert.X509Certificate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Nullable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.SSLContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.SSLSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.TrustManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.X509TrustManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Call;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Callback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.CookieJar;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Headers;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Interceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.JavaNetCookieJar;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.MediaType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.MultipartBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.OkHttpClient;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Request;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.RequestBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Response;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.ResponseBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okio.ByteString;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Implements the XMLHttpRequest JavaScript interface.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">@ReactModule</span>(name = NetworkingModule.NAME)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NetworkingModule</span> <span class=\"keyword\">extends</span> <span class=\"title\">ReactContextBaseJavaModule</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> SSLContext <span class=\"title\">getSLLContext</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tX509TrustManager xtm = <span class=\"keyword\">new</span> X509TrustManager() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkClientTrusted</span><span class=\"params\">(X509Certificate[] chain, String authType)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkServerTrusted</span><span class=\"params\">(X509Certificate[] chain, String authType)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class=\"line\">\t\t\t\tX509Certificate[] x509Certificates = <span class=\"keyword\">new</span> X509Certificate[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> x509Certificates;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSSLContext sslContext = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tsslContext = SSLContext.getInstance(<span class=\"string\">\"SSL\"</span>);</span><br><span class=\"line\">\t\t\tsslContext.init(<span class=\"keyword\">null</span>, <span class=\"keyword\">new</span> TrustManager[]&#123;xtm&#125;, <span class=\"keyword\">new</span> SecureRandom());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (KeyManagementException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> sslContext;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Allows to implement a custom fetching process for specific URIs. It is the handler's job</span></span><br><span class=\"line\"><span class=\"comment\">\t* to fetch the URI and return the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UriHandler</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns if the handler should be used for an URI.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">supports</span><span class=\"params\">(Uri uri, String responseType)</span></span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Fetch the URI and return the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\">WritableMap <span class=\"title\">fetch</span><span class=\"params\">(Uri uri)</span> <span class=\"keyword\">throws</span> IOException</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Allows adding custom handling to build the &#123;<span class=\"doctag\">@link</span> RequestBody&#125; from the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">RequestBodyHandler</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns if the handler should be used for a JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">supports</span><span class=\"params\">(ReadableMap map)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns the &#123;<span class=\"doctag\">@link</span> RequestBody&#125; for the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\">RequestBody <span class=\"title\">toRequestBody</span><span class=\"params\">(ReadableMap map, String contentType)</span></span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Allows adding custom handling to build the JS body payload from the &#123;<span class=\"doctag\">@link</span> ResponseBody&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ResponseHandler</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns if the handler should be used for a response type.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">supports</span><span class=\"params\">(String responseType)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns the JS body payload for the &#123;<span class=\"doctag\">@link</span> ResponseBody&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\">WritableMap <span class=\"title\">toResponseData</span><span class=\"params\">(ResponseBody body)</span> <span class=\"keyword\">throws</span> IOException</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String NAME = <span class=\"string\">\"Networking\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CONTENT_ENCODING_HEADER_NAME = <span class=\"string\">\"content-encoding\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CONTENT_TYPE_HEADER_NAME = <span class=\"string\">\"content-type\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_STRING = <span class=\"string\">\"string\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_URI = <span class=\"string\">\"uri\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_FORMDATA = <span class=\"string\">\"formData\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_BASE64 = <span class=\"string\">\"base64\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String USER_AGENT_HEADER_NAME = <span class=\"string\">\"user-agent\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> CHUNK_TIMEOUT_NS = <span class=\"number\">100</span> * <span class=\"number\">1000000</span>; <span class=\"comment\">// 100ms</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MAX_CHUNK_SIZE_BETWEEN_FLUSHES = <span class=\"number\">8</span> * <span class=\"number\">1024</span>; <span class=\"comment\">// 8K</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient mClient;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ForwardingCookieHandler mCookieHandler;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"meta\">@Nullable</span> String mDefaultUserAgent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> CookieJarContainer mCookieJarContainer;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Set&lt;Integer&gt; mRequestIds;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;RequestBodyHandler&gt; mRequestBodyHandlers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;UriHandler&gt; mUriHandlers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;ResponseHandler&gt; mResponseHandlers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mShuttingDown;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* package */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tNetworkingModule(</span><br><span class=\"line\">\t\tReactApplicationContext reactContext,</span><br><span class=\"line\">\t\t<span class=\"meta\">@Nullable</span> String defaultUserAgent,</span><br><span class=\"line\">\t\tOkHttpClient client,</span><br><span class=\"line\">\t\t<span class=\"meta\">@Nullable</span> List networkInterceptorCreators</span><br><span class=\"line\">\t) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(reactContext);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (networkInterceptorCreators != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tOkHttpClient.Builder clientBuilder = client.newBuilder();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (NetworkInterceptorCreator networkInterceptorCreator : networkInterceptorCreators) &#123;</span><br><span class=\"line\">\t\t\t\tclientBuilder.addNetworkInterceptor(networkInterceptorCreator.create());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tclient = clientBuilder.build();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tclient = client.newBuilder().hostnameVerifier(<span class=\"keyword\">new</span> HostnameVerifier() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">verify</span><span class=\"params\">(String s, SSLSession sslSession)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;).sslSocketFactory(getSLLContext().getSocketFactory()).build();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmClient = client;</span><br><span class=\"line\">\t\tmCookieHandler = <span class=\"keyword\">new</span> ForwardingCookieHandler(reactContext);</span><br><span class=\"line\">\t\tmCookieJarContainer = (CookieJarContainer) mClient.cookieJar();</span><br><span class=\"line\">\t\tmShuttingDown = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\tmDefaultUserAgent = defaultUserAgent;</span><br><span class=\"line\">\t\tmRequestIds = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> defaultUserAgent the User-Agent header that will be set for all requests where the</span></span><br><span class=\"line\"><span class=\"comment\">\t* caller does not provide one explicitly</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> client the &#123;<span class=\"doctag\">@link</span> OkHttpClient&#125; to be used for networking</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* package */</span></span><br><span class=\"line\">\tNetworkingModule(</span><br><span class=\"line\">\t\tReactApplicationContext context,</span><br><span class=\"line\">\t\t<span class=\"meta\">@Nullable</span> String defaultUserAgent,</span><br><span class=\"line\">\t\tOkHttpClient client</span><br><span class=\"line\">\t) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(context, defaultUserAgent, client, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NetworkingModule</span><span class=\"params\">(<span class=\"keyword\">final</span> ReactApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>, OkHttpClientProvider.createClient(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> networkInterceptorCreators list of &#123;<span class=\"doctag\">@link</span> NetworkInterceptorCreator&#125;'s whose create()</span></span><br><span class=\"line\"><span class=\"comment\">\t* methods would be called to attach the interceptors to the client.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NetworkingModule</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReactApplicationContext context,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tList networkInterceptorCreators)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>, OkHttpClientProvider.createClient(), networkInterceptorCreators);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> defaultUserAgent the User-Agent header that will be set for all requests where the</span></span><br><span class=\"line\"><span class=\"comment\">\t* caller does not provide one explicitly</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NetworkingModule</span><span class=\"params\">(ReactApplicationContext context, String defaultUserAgent)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(context, defaultUserAgent, OkHttpClientProvider.createClient(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initialize</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tmCookieJarContainer.setCookieJar(<span class=\"keyword\">new</span> JavaNetCookieJar(mCookieHandler));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> NAME;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCatalystInstanceDestroy</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tmShuttingDown = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\tcancelAllRequests();</span><br><span class=\"line\">\t\tmCookieHandler.destroy();</span><br><span class=\"line\">\t\tmCookieJarContainer.removeCookieJar();</span><br><span class=\"line\">\t\tmRequestBodyHandlers.clear();</span><br><span class=\"line\">\t\tmResponseHandlers.clear();</span><br><span class=\"line\">\t\tmUriHandlers.clear();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addUriHandler</span><span class=\"params\">(UriHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmUriHandlers.add(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addRequestBodyHandler</span><span class=\"params\">(RequestBodyHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestBodyHandlers.add(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResponseHandler</span><span class=\"params\">(ResponseHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmResponseHandlers.add(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeUriHandler</span><span class=\"params\">(UriHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmUriHandlers.remove(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeRequestBodyHandler</span><span class=\"params\">(RequestBodyHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestBodyHandlers.remove(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeResponseHandler</span><span class=\"params\">(ResponseHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmResponseHandlers.remove(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ReactMethod</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> timeout value of 0 results in no timeout</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendRequest</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tString method,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tString url,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReadableArray headers,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReadableMap data,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> String responseType,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> useIncrementalUpdates,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">int</span> timeout,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">boolean</span> withCredentials</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> RCTDeviceEventEmitter eventEmitter = getEventEmitter();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tUri uri = Uri.parse(url);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Check if a handler is registered</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (UriHandler handler : mUriHandlers) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (handler.supports(uri, responseType)) &#123;</span><br><span class=\"line\">\t\t\t\t\tWritableMap res = handler.fetch(uri);</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tRequest.Builder requestBuilder;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\trequestBuilder = <span class=\"keyword\">new</span> Request.Builder().url(url);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (requestId != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\trequestBuilder.tag(requestId);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tOkHttpClient.Builder clientBuilder = mClient.newBuilder();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!withCredentials) &#123;</span><br><span class=\"line\">\t\t\tclientBuilder.cookieJar(CookieJar.NO_COOKIES);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// If JS is listening for progress updates, install a ProgressResponseBody that intercepts the</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// response and counts bytes received.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (useIncrementalUpdates) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tclientBuilder.addNetworkInterceptor(<span class=\"keyword\">new</span> Interceptor() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> Response <span class=\"title\">intercept</span><span class=\"params\">(Interceptor.Chain chain)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\t\t\t\t\tResponse originalResponse = chain.proceed(chain.request());</span><br><span class=\"line\">\t\t\t\t\tProgressResponseBody responseBody = <span class=\"keyword\">new</span> ProgressResponseBody(</span><br><span class=\"line\">\t\t\t\t\toriginalResponse.body(),</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> ProgressListener() &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">long</span> last = System.nanoTime();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">long</span> bytesWritten, <span class=\"keyword\">long</span> contentLength, <span class=\"keyword\">boolean</span> done)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">long</span> now = System.nanoTime();</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (!done &amp;&amp; !shouldDispatch(now, last)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (responseType.equals(<span class=\"string\">\"text\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"comment\">// For 'text' responses we continuously send response data with progress info to</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"comment\">// JS below, so no need to do anything here.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\tResponseUtil.onDataReceivedProgress(</span><br><span class=\"line\">\t\t\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tbytesWritten,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tcontentLength</span><br><span class=\"line\">\t\t\t\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\tlast = now;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> originalResponse.newBuilder().body(responseBody).build();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// If the current timeout does not equal the passed in timeout, we need to clone the existing</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// client and set the timeout explicitly on the clone. This is cheap as everything else is</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// shared under the hood.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// See https://github.com/square/okhttp/wiki/Recipes#per-call-configuration for more information</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (timeout != mClient.connectTimeoutMillis()) &#123;</span><br><span class=\"line\">\t\t\tclientBuilder.readTimeout(timeout, TimeUnit.MILLISECONDS);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tOkHttpClient client = clientBuilder.build();</span><br><span class=\"line\">\t\tHeaders requestHeaders = extractHeaders(headers, data);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (requestHeaders == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, <span class=\"string\">\"Unrecognized headers format\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString contentType = requestHeaders.get(CONTENT_TYPE_HEADER_NAME);</span><br><span class=\"line\">\t\tString contentEncoding = requestHeaders.get(CONTENT_ENCODING_HEADER_NAME);</span><br><span class=\"line\">\t\trequestBuilder.headers(requestHeaders);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Check if a handler is registered</span></span><br><span class=\"line\">\t\tRequestBodyHandler handler = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (data != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (RequestBodyHandler curHandler : mRequestBodyHandlers) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (curHandler.supports(data)) &#123;</span><br><span class=\"line\">\t\t\t\t\thandler = curHandler;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tRequestBody requestBody;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (data == <span class=\"keyword\">null</span> || method.toLowerCase().equals(<span class=\"string\">\"get\"</span>) || method.toLowerCase().equals(<span class=\"string\">\"head\"</span>)) &#123;</span><br><span class=\"line\">\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (handler != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\trequestBody = handler.toRequestBody(data, contentType);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_STRING)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Payload is set but no content-type header specified\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString body = data.getString(REQUEST_BODY_KEY_STRING);</span><br><span class=\"line\">\t\t\tMediaType contentMediaType = MediaType.parse(contentType);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (RequestBodyUtil.isGzipEncoding(contentEncoding)) &#123;</span><br><span class=\"line\">\t\t\t\trequestBody = RequestBodyUtil.createGzip(contentMediaType, body);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (requestBody == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, <span class=\"string\">\"Failed to gzip request body\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\trequestBody = RequestBody.create(contentMediaType, body);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_BASE64)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Payload is set but no content-type header specified\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString base64String = data.getString(REQUEST_BODY_KEY_BASE64);</span><br><span class=\"line\">\t\t\tMediaType contentMediaType = MediaType.parse(contentType);</span><br><span class=\"line\">\t\t\trequestBody = RequestBody.create(contentMediaType, ByteString.decodeBase64(base64String));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_URI)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Payload is set but no content-type header specified\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString uri = data.getString(REQUEST_BODY_KEY_URI);</span><br><span class=\"line\">\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), uri);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (fileInputStream == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Could not retrieve file for uri \"</span> + uri,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\trequestBody = RequestBodyUtil.create(MediaType.parse(contentType), fileInputStream);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_FORMDATA)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcontentType = <span class=\"string\">\"multipart/form-data\"</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tReadableArray parts = data.getArray(REQUEST_BODY_KEY_FORMDATA);</span><br><span class=\"line\">\t\t\tMultipartBody.Builder multipartBuilder =</span><br><span class=\"line\">\t\t\tconstructMultipartBody(parts, contentType, requestId);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (multipartBuilder == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\trequestBody = multipartBuilder.build();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Nothing in data payload, at least nothing we could understand anyway.</span></span><br><span class=\"line\">\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\trequestBuilder.method(</span><br><span class=\"line\">\t\t\tmethod,</span><br><span class=\"line\">\t\t\twrapRequestBodyWithProgressEmitter(requestBody, eventEmitter, requestId)</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t\taddRequest(requestId);</span><br><span class=\"line\">\t\tclient.newCall(requestBuilder.build()).enqueue(</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> Callback() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFailure</span><span class=\"params\">(Call call, IOException e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (mShuttingDown) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tremoveRequest(requestId);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tString errorMessage = e.getMessage() != <span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t\t? e.getMessage()</span><br><span class=\"line\">\t\t\t\t\t: <span class=\"string\">\"Error while executing request: \"</span> + e.getClass().getSimpleName();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, errorMessage, e);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(Call call, Response response)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (mShuttingDown) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tremoveRequest(requestId);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// Before we touch the body send headers to JS</span></span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onResponseReceived(</span><br><span class=\"line\">\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\tresponse.code(),</span><br><span class=\"line\">\t\t\t\t\t\ttranslateHeaders(response.headers()),</span><br><span class=\"line\">\t\t\t\t\t\tresponse.request().url().toString()</span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tResponseBody responseBody = response.body();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// Check if a handler is registered</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (ResponseHandler handler : mResponseHandlers) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (handler.supports(responseType)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tWritableMap res = handler.toResponseData(responseBody);</span><br><span class=\"line\">\t\t\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);</span><br><span class=\"line\">\t\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// If JS wants progress updates during the download, and it requested a text response,</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// periodically send response data updates to JS.</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (useIncrementalUpdates &amp;&amp; responseType.equals(<span class=\"string\">\"text\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\treadWithProgress(eventEmitter, requestId, responseBody);</span><br><span class=\"line\">\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// Otherwise send the data in one big chunk, in the format that JS requested.</span></span><br><span class=\"line\">\t\t\t\t\t\tString responseString = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (responseType.equals(<span class=\"string\">\"text\"</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tresponseString = responseBody.string();</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (response.request().method().equalsIgnoreCase(<span class=\"string\">\"HEAD\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// The request is an `HEAD` and the body is empty,</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// the OkHttp will produce an exception.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// Ignore the exception to not invalidate the request in the</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// Javascript layer.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// Introduced to fix issue #7463.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (responseType.equals(<span class=\"string\">\"base64\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tresponseString = Base64.encodeToString(responseBody.bytes(), Base64.NO_WRAP);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, responseString);</span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> RequestBody <span class=\"title\">wrapRequestBodyWithProgressEmitter</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> RequestBody requestBody,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> RCTDeviceEventEmitter eventEmitter,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(requestBody == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> RequestBodyUtil.createProgressRequest(</span><br><span class=\"line\">\t\t\trequestBody,</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> ProgressListener() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">long</span> last = System.nanoTime();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">long</span> bytesWritten, <span class=\"keyword\">long</span> contentLength, <span class=\"keyword\">boolean</span> done)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">long</span> now = System.nanoTime();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (done || shouldDispatch(now, last)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onDataSend(eventEmitter, requestId, bytesWritten, contentLength);</span><br><span class=\"line\">\t\t\t\t\t\tlast = now;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">readWithProgress</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tRCTDeviceEventEmitter eventEmitter,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">int</span> requestId,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tResponseBody responseBody</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> totalBytesRead = -<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> contentLength = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tProgressResponseBody progressResponseBody = (ProgressResponseBody) responseBody;</span><br><span class=\"line\">\t\t\ttotalBytesRead = progressResponseBody.totalBytesRead();</span><br><span class=\"line\">\t\t\tcontentLength = progressResponseBody.contentLength();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClassCastException e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Ignore</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tCharset charset = responseBody.contentType() == <span class=\"keyword\">null</span> ? StandardCharsets.UTF_8 :</span><br><span class=\"line\">\t\tresponseBody.contentType().charset(StandardCharsets.UTF_8);</span><br><span class=\"line\">\t\tProgressiveStringDecoder streamDecoder = <span class=\"keyword\">new</span> ProgressiveStringDecoder(charset);</span><br><span class=\"line\">\t\tInputStream inputStream = responseBody.byteStream();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[MAX_CHUNK_SIZE_BETWEEN_FLUSHES];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> read;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> ((read = inputStream.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onIncrementalDataReceived(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\tstreamDecoder.decodeNext(buffer, read),</span><br><span class=\"line\">\t\t\t\t\ttotalBytesRead,</span><br><span class=\"line\">\t\t\t\t\tcontentLength</span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\tinputStream.close();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">shouldDispatch</span><span class=\"params\">(<span class=\"keyword\">long</span> now, <span class=\"keyword\">long</span> last)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> last + CHUNK_TIMEOUT_NS &lt; now;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">addRequest</span><span class=\"params\">(<span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestIds.add(requestId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">removeRequest</span><span class=\"params\">(<span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestIds.remove(requestId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">cancelAllRequests</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (Integer requestId : mRequestIds) &#123;</span><br><span class=\"line\">\t\t\tcancelRequest(requestId);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmRequestIds.clear();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> WritableMap <span class=\"title\">translateHeaders</span><span class=\"params\">(Headers headers)</span> </span>&#123;</span><br><span class=\"line\">\t\tWritableMap responseHeaders = Arguments.createMap();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; headers.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tString headerName = headers.name(i);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// multiple values for the same header</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (responseHeaders.hasKey(headerName)) &#123;</span><br><span class=\"line\">\t\t\t\tresponseHeaders.putString(</span><br><span class=\"line\">\t\t\t\theaderName,</span><br><span class=\"line\">\t\t\t\tresponseHeaders.getString(headerName) + <span class=\"string\">\", \"</span> + headers.value(i));</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tresponseHeaders.putString(headerName, headers.value(i));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> responseHeaders;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ReactMethod</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">abortRequest</span><span class=\"params\">(<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\tcancelRequest(requestId);</span><br><span class=\"line\">\t\tremoveRequest(requestId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">cancelRequest</span><span class=\"params\">(<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// We have to use AsyncTask since this might trigger a NetworkOnMainThreadException, this is an</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// open issue on OkHttp: https://github.com/square/okhttp/issues/869</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> GuardedAsyncTask(getReactApplicationContext()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doInBackgroundGuarded</span><span class=\"params\">(Void... params)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\tOkHttpCallUtil.cancelTag(mClient, Integer.valueOf(requestId));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;.execute();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ReactMethod</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCookies</span><span class=\"params\">(com.facebook.react.bridge.Callback callback)</span> </span>&#123;</span><br><span class=\"line\">\t\tmCookieHandler.clearCookies(callback);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"meta\">@Nullable</span> MultipartBody.<span class=\"function\">Builder <span class=\"title\">constructMultipartBody</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReadableArray body,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tString contentType,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">int</span> requestId</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\tRCTDeviceEventEmitter eventEmitter = getEventEmitter();</span><br><span class=\"line\">\t\tMultipartBody.Builder multipartBuilder = <span class=\"keyword\">new</span> MultipartBody.Builder();</span><br><span class=\"line\">\t\tmultipartBuilder.setType(MediaType.parse(contentType));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, size = body.size(); i &lt; size; i++) &#123;</span><br><span class=\"line\">\t\t\tReadableMap bodyPart = body.getMap(i);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Determine part's content type.</span></span><br><span class=\"line\">\t\t\tReadableArray headersArray = bodyPart.getArray(<span class=\"string\">\"headers\"</span>);</span><br><span class=\"line\">\t\t\tHeaders headers = extractHeaders(headersArray, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (headers == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Missing or invalid header format for FormData part.\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tMediaType partContentType = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\tString partContentTypeStr = headers.get(CONTENT_TYPE_HEADER_NAME);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (partContentTypeStr != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tpartContentType = MediaType.parse(partContentTypeStr);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// Remove the content-type header because MultipartBuilder gets it explicitly as an</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// argument and doesn't expect it in the headers array.</span></span><br><span class=\"line\">\t\t\t\theaders = headers.newBuilder().removeAll(CONTENT_TYPE_HEADER_NAME).build();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bodyPart.hasKey(REQUEST_BODY_KEY_STRING)) &#123;</span><br><span class=\"line\">\t\t\t\tString bodyValue = bodyPart.getString(REQUEST_BODY_KEY_STRING);</span><br><span class=\"line\">\t\t\t\tmultipartBuilder.addPart(headers, RequestBody.create(partContentType, bodyValue));</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bodyPart.hasKey(REQUEST_BODY_KEY_URI)) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (partContentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">\"Binary FormData part needs a content-type header.\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tString fileContentUriStr = bodyPart.getString(REQUEST_BODY_KEY_URI);</span><br><span class=\"line\">\t\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), fileContentUriStr);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (fileInputStream == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">\"Could not retrieve file for uri \"</span> + fileContentUriStr,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tmultipartBuilder.addPart(headers, RequestBodyUtil.create(partContentType, fileInputStream));</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, <span class=\"string\">\"Unrecognized FormData part.\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> multipartBuilder;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Extracts the headers from the Array. If the format is invalid, this method will return null.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"meta\">@Nullable</span> <span class=\"function\">Headers <span class=\"title\">extractHeaders</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t@Nullable ReadableArray headersArray,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t@Nullable ReadableMap requestData</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (headersArray == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tHeaders.Builder headersBuilder = <span class=\"keyword\">new</span> Headers.Builder();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> headersIdx = <span class=\"number\">0</span>, size = headersArray.size(); headersIdx &lt; size; headersIdx++) &#123;</span><br><span class=\"line\">\t\t\tReadableArray header = headersArray.getArray(headersIdx);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (header == <span class=\"keyword\">null</span> || header.size() != <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString headerName = header.getString(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t\tString headerValue = header.getString(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (headerName == <span class=\"keyword\">null</span> || headerValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\theadersBuilder.add(headerName, headerValue);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (headersBuilder.get(USER_AGENT_HEADER_NAME) == <span class=\"keyword\">null</span> &amp;&amp; mDefaultUserAgent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\theadersBuilder.add(USER_AGENT_HEADER_NAME, mDefaultUserAgent);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Sanitize content encoding header, supported only when request specify payload as string</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> isGzipSupported = requestData != <span class=\"keyword\">null</span> &amp;&amp; requestData.hasKey(REQUEST_BODY_KEY_STRING);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!isGzipSupported) &#123;</span><br><span class=\"line\">\t\t\theadersBuilder.removeAll(CONTENT_ENCODING_HEADER_NAME);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> headersBuilder.build();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> RCTDeviceEventEmitter <span class=\"title\">getEventEmitter</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> getReactApplicationContext().getJSModule(RCTDeviceEventEmitter.class);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>在终端代开项目<code>cd {project}</code>执行</p>\n</li>\n<li><p><code>react-native run-android</code>开始编译，编译的过程很漫长，大概需要10到20分钟</p>\n</li>\n<li><p>如果中途失败记得删除<code>/node_modules/react-native/ReactAndroid/bulid</code>里面的所有内容，然后重新编译</p>\n</li>\n<li><p>关于源代码编译可以参考官方文档<a href=\"https://reactnative.cn/docs/building-from-source.html\" target=\"_blank\" rel=\"noopener\">中文</a>或者<a href=\"https://facebook.github.io/react-native/docs/building-from-source\" target=\"_blank\" rel=\"noopener\">英文</a>官网详细查看</p>\n</li>\n</ul>\n<ul>\n<li>关于详细代码可进入我的<a href=\"https://github.com/AaronBank/react-native.git\" target=\"_blank\" rel=\"noopener\">Github</a>查看</li>\n</ul>\n<p><em>感谢支持</em></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/150542.jpg\" alt> </p>\n<p><code>react-native</code>再请求方面有点坑，<code>Ios</code>端默认支持<code>https</code>，而安卓默认支持的事<code>http</code>，如果你需要的是其中的某一种方式，那这篇文章可能能帮到你😍😍</p>\n<h3 id=\"当前环境\"><a href=\"#当前环境\" class=\"headerlink\" title=\"当前环境\"></a>当前环境</h3><ul>\n<li>OS: macOS High Sierra 10.13.5</li>\n<li>Node: 8.11.3</li>\n<li>Yarn: 1.7.0</li>\n<li>npm: 5.6.0</li>\n<li>Watchman: 4.9.0</li>\n<li>Xcode: Xcode 9.4.1</li>\n<li>react: 16.3.1 =&gt; 16.3.1</li>\n<li>react-native: 0.55.4 =&gt; 0.55.4</li>\n</ul>\n<h3 id=\"前置说明\"><a href=\"#前置说明\" class=\"headerlink\" title=\"前置说明\"></a>前置说明</h3><ol>\n<li>在ios平台ios9.0以上默认支持https而不支持http</li>\n<li>对于https，如果你的服务器端是CA签发的证书，那你ios平台不需要改动任何代码</li>\n<li>对于自签证书，那你需要对源代码进行改动，下面会详细说明方式</li>\n<li>对于http，有两个方式可以做到，下面会详细说明方式<ol>\n<li>直接使用ip地址</li>\n<li>使用域名，对源代码进行配置</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"关于ios支持https自签证书\"><a href=\"#关于ios支持https自签证书\" class=\"headerlink\" title=\"关于ios支持https自签证书\"></a>关于ios支持https自签证书</h3><ul>\n<li>服务器端使用自签证书，免证书方法</li>\n<li>打开XCode在当前项目路径为<code>Libraries/RCTNetwork.xcodeproj</code>找到<code>RCTHTTPRequestHandler.mm</code></li>\n<li>或者在<code>{project}/node_modules/react-native/Libraries/Network</code>目录下同样可以找到该文件</li>\n<li>在文件中搜索<code>#pragma mark - NSURLSession delegate</code>并在其后面添加如下代码即可</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"keyword\">void</span>)URLSession:(NSURLSession *)session  didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge  completionHandler:(<span class=\"keyword\">void</span> (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * __nullable credential))completionHandler&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (RCT_DEBUG) &#123;</span><br><span class=\"line\">        completionHandler(NSURLSessionAuthChallengeUseCredential,[NSURLCredential  credentialForTrust:challenge.protectionSpace.serverTrust]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置如图所示</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902-1.png\" alt> </p>\n<h3 id=\"关于ios支持http请求\"><a href=\"#关于ios支持http请求\" class=\"headerlink\" title=\"关于ios支持http请求\"></a>关于ios支持http请求</h3><ul>\n<li>关于http方式我们只介绍第二种因为直接使用ip地址真的是太。。简单，直接把域名换成ip就好了</li>\n<li>对于第二种你需要改动<code>{project}/ios/App</code>下面的<code>Info.plist</code>文件</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>NSAppTransportSecuritykey&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">key</span>&gt;</span>NSAllowsArbitraryLoadskey&gt;<span class=\"tag\">&lt;/<span class=\"name\">key</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">true</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dict</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置如图所示</li>\n</ul>\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140902.png\" alt> </p>\n<p>到此为止<code>Ios</code>相关问题就解决了，<code>Ios</code>部分还是比较好弄得O(∩_∩)O不是很麻烦，<code>Android</code>得话就麻烦些，下面我们说下<code>Android</code>相关的解决方案</p>\n<h3 id=\"关于Android端http和https你需要知道\"><a href=\"#关于Android端http和https你需要知道\" class=\"headerlink\" title=\"关于Android端http和https你需要知道\"></a>关于Android端http和https你需要知道</h3><ol>\n<li>安卓默认是支持http请求儿不支持https</li>\n<li>想做到支持https那就需要改动react-native的源代码，进而重新编译才能成功</li>\n</ol>\n<h3 id=\"关于Android支持https\"><a href=\"#关于Android支持https\" class=\"headerlink\" title=\"关于Android支持https\"></a>关于Android支持https</h3><ul>\n<li><p>下载ndk（下载r10e版本的，其他的版本会有问题）</p>\n<ol>\n<li>Mac OS (64-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-darwin-x86_64.zip</a></li>\n<li>Linux (64-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip</a></li>\n<li>Windows (64-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip</a></li>\n<li>Windows (32-bit) - <a href=\"http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip\" target=\"_blank\" rel=\"noopener\">http://dl.google.com/android/repository/android-ndk-r10e-windows-x86.zip</a></li>\n</ol>\n</li>\n<li><p>在项目<code>{project}/android</code>文件夹先创建<code>local.properties</code>文件（如果已经存在哪直接修改就好了）</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sdk.dir=你自己的sdk路径</span><br><span class=\"line\">ndk.dir=你自己的ndk路径</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/140900-1.jpg\" alt></p>\n<ul>\n<li>在<code>{project}/android/build.gradle</code>中添加<code>gradle-download-task</code>依赖</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    classpath <span class=\"string\">'com.android.tools.build:gradle:2.2.3'</span></span><br><span class=\"line\">    classpath <span class=\"string\">'de.undercouch:gradle-download-task:3.1.2'</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class=\"line\">    <span class=\"comment\">// in the individual module build.gradle files</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在<code>{project}/android/settings.gradle</code>中添加<code>:ReactAndroid</code>项目</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">    include <span class=\"string\">':ReactAndroid'</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    project(<span class=\"string\">':ReactAndroid'</span>).projectDir = <span class=\"keyword\">new</span> File(rootProject.projectDir, <span class=\"string\">'../node_modules/react-native/ReactAndroid'</span>)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>修改<code>{project}/android/app/build.gradle</code>文件，使用:ReactAndroid替换预编译库</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\">compile <span class=\"title\">fileTree</span><span class=\"params\">(dir: <span class=\"string\">\"libs\"</span>, include: [<span class=\"string\">\"*.jar\"</span>])</span></span></span><br><span class=\"line\"><span class=\"function\">compile \"com.android.support:appcompat-v7:23.0.1\"</span></span><br><span class=\"line\"><span class=\"function\">compile <span class=\"title\">project</span><span class=\"params\">(<span class=\"string\">':ReactAndroid'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">  </span></span><br><span class=\"line\"><span class=\"function\">...</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重写第三方模块的依赖，否则会报错<code>-Error: more than one library with package name &#39;com.facebook.react&#39;</code></li>\n<li>修改<code>{project}/android/app/build.gradle</code>文件，添加以下代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  </span><br><span class=\"line\">configurations.all &#123;</span><br><span class=\"line\">    exclude group: <span class=\"string\">'com.facebook.react'</span>, <span class=\"keyword\">module</span>: <span class=\"string\">'react-native'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重写<code>okHttp</code>类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.facebook.react.modules.network;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.net.Uri;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Base64;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.Arguments;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.GuardedAsyncTask;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReactContextBaseJavaModule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReactMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReadableArray;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.ReadableMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.bridge.WritableMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.common.StandardCharsets;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.common.network.OkHttpCallUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.<span class=\"keyword\">module</span>.annotations.ReactModule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.nio.charset.Charset;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.KeyManagementException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.NoSuchAlgorithmException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.SecureRandom;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.cert.CertificateException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.cert.X509Certificate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Nullable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.SSLContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.SSLSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.TrustManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.net.ssl.X509TrustManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Call;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Callback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.CookieJar;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Headers;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Interceptor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.JavaNetCookieJar;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.MediaType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.MultipartBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.OkHttpClient;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Request;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.RequestBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.Response;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okhttp3.ResponseBody;</span><br><span class=\"line\"><span class=\"keyword\">import</span> okio.ByteString;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Implements the XMLHttpRequest JavaScript interface.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">@ReactModule</span>(name = NetworkingModule.NAME)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NetworkingModule</span> <span class=\"keyword\">extends</span> <span class=\"title\">ReactContextBaseJavaModule</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> SSLContext <span class=\"title\">getSLLContext</span> <span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tX509TrustManager xtm = <span class=\"keyword\">new</span> X509TrustManager() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkClientTrusted</span><span class=\"params\">(X509Certificate[] chain, String authType)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">checkServerTrusted</span><span class=\"params\">(X509Certificate[] chain, String authType)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class=\"line\">\t\t\t\tX509Certificate[] x509Certificates = <span class=\"keyword\">new</span> X509Certificate[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> x509Certificates;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSSLContext sslContext = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tsslContext = SSLContext.getInstance(<span class=\"string\">\"SSL\"</span>);</span><br><span class=\"line\">\t\t\tsslContext.init(<span class=\"keyword\">null</span>, <span class=\"keyword\">new</span> TrustManager[]&#123;xtm&#125;, <span class=\"keyword\">new</span> SecureRandom());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (KeyManagementException e) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> sslContext;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Allows to implement a custom fetching process for specific URIs. It is the handler's job</span></span><br><span class=\"line\"><span class=\"comment\">\t* to fetch the URI and return the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UriHandler</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns if the handler should be used for an URI.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">supports</span><span class=\"params\">(Uri uri, String responseType)</span></span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Fetch the URI and return the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\">WritableMap <span class=\"title\">fetch</span><span class=\"params\">(Uri uri)</span> <span class=\"keyword\">throws</span> IOException</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Allows adding custom handling to build the &#123;<span class=\"doctag\">@link</span> RequestBody&#125; from the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">RequestBodyHandler</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns if the handler should be used for a JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">supports</span><span class=\"params\">(ReadableMap map)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns the &#123;<span class=\"doctag\">@link</span> RequestBody&#125; for the JS body payload.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\">RequestBody <span class=\"title\">toRequestBody</span><span class=\"params\">(ReadableMap map, String contentType)</span></span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Allows adding custom handling to build the JS body payload from the &#123;<span class=\"doctag\">@link</span> ResponseBody&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ResponseHandler</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns if the handler should be used for a response type.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">supports</span><span class=\"params\">(String responseType)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t* Returns the JS body payload for the &#123;<span class=\"doctag\">@link</span> ResponseBody&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"function\">WritableMap <span class=\"title\">toResponseData</span><span class=\"params\">(ResponseBody body)</span> <span class=\"keyword\">throws</span> IOException</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String NAME = <span class=\"string\">\"Networking\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CONTENT_ENCODING_HEADER_NAME = <span class=\"string\">\"content-encoding\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CONTENT_TYPE_HEADER_NAME = <span class=\"string\">\"content-type\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_STRING = <span class=\"string\">\"string\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_URI = <span class=\"string\">\"uri\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_FORMDATA = <span class=\"string\">\"formData\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String REQUEST_BODY_KEY_BASE64 = <span class=\"string\">\"base64\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String USER_AGENT_HEADER_NAME = <span class=\"string\">\"user-agent\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> CHUNK_TIMEOUT_NS = <span class=\"number\">100</span> * <span class=\"number\">1000000</span>; <span class=\"comment\">// 100ms</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MAX_CHUNK_SIZE_BETWEEN_FLUSHES = <span class=\"number\">8</span> * <span class=\"number\">1024</span>; <span class=\"comment\">// 8K</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> OkHttpClient mClient;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ForwardingCookieHandler mCookieHandler;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"meta\">@Nullable</span> String mDefaultUserAgent;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> CookieJarContainer mCookieJarContainer;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Set&lt;Integer&gt; mRequestIds;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;RequestBodyHandler&gt; mRequestBodyHandlers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;UriHandler&gt; mUriHandlers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> List&lt;ResponseHandler&gt; mResponseHandlers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mShuttingDown;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* package */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tNetworkingModule(</span><br><span class=\"line\">\t\tReactApplicationContext reactContext,</span><br><span class=\"line\">\t\t<span class=\"meta\">@Nullable</span> String defaultUserAgent,</span><br><span class=\"line\">\t\tOkHttpClient client,</span><br><span class=\"line\">\t\t<span class=\"meta\">@Nullable</span> List networkInterceptorCreators</span><br><span class=\"line\">\t) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(reactContext);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (networkInterceptorCreators != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tOkHttpClient.Builder clientBuilder = client.newBuilder();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (NetworkInterceptorCreator networkInterceptorCreator : networkInterceptorCreators) &#123;</span><br><span class=\"line\">\t\t\t\tclientBuilder.addNetworkInterceptor(networkInterceptorCreator.create());</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tclient = clientBuilder.build();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tclient = client.newBuilder().hostnameVerifier(<span class=\"keyword\">new</span> HostnameVerifier() &#123;</span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">verify</span><span class=\"params\">(String s, SSLSession sslSession)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;).sslSocketFactory(getSLLContext().getSocketFactory()).build();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmClient = client;</span><br><span class=\"line\">\t\tmCookieHandler = <span class=\"keyword\">new</span> ForwardingCookieHandler(reactContext);</span><br><span class=\"line\">\t\tmCookieJarContainer = (CookieJarContainer) mClient.cookieJar();</span><br><span class=\"line\">\t\tmShuttingDown = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\tmDefaultUserAgent = defaultUserAgent;</span><br><span class=\"line\">\t\tmRequestIds = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> defaultUserAgent the User-Agent header that will be set for all requests where the</span></span><br><span class=\"line\"><span class=\"comment\">\t* caller does not provide one explicitly</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> client the &#123;<span class=\"doctag\">@link</span> OkHttpClient&#125; to be used for networking</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* package */</span></span><br><span class=\"line\">\tNetworkingModule(</span><br><span class=\"line\">\t\tReactApplicationContext context,</span><br><span class=\"line\">\t\t<span class=\"meta\">@Nullable</span> String defaultUserAgent,</span><br><span class=\"line\">\t\tOkHttpClient client</span><br><span class=\"line\">\t) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(context, defaultUserAgent, client, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NetworkingModule</span><span class=\"params\">(<span class=\"keyword\">final</span> ReactApplicationContext context)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>, OkHttpClientProvider.createClient(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> networkInterceptorCreators list of &#123;<span class=\"doctag\">@link</span> NetworkInterceptorCreator&#125;'s whose create()</span></span><br><span class=\"line\"><span class=\"comment\">\t* methods would be called to attach the interceptors to the client.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NetworkingModule</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReactApplicationContext context,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tList networkInterceptorCreators)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>, OkHttpClientProvider.createClient(), networkInterceptorCreators);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> context the ReactContext of the application</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> defaultUserAgent the User-Agent header that will be set for all requests where the</span></span><br><span class=\"line\"><span class=\"comment\">\t* caller does not provide one explicitly</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NetworkingModule</span><span class=\"params\">(ReactApplicationContext context, String defaultUserAgent)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>(context, defaultUserAgent, OkHttpClientProvider.createClient(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initialize</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tmCookieJarContainer.setCookieJar(<span class=\"keyword\">new</span> JavaNetCookieJar(mCookieHandler));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> NAME;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCatalystInstanceDestroy</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tmShuttingDown = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\tcancelAllRequests();</span><br><span class=\"line\">\t\tmCookieHandler.destroy();</span><br><span class=\"line\">\t\tmCookieJarContainer.removeCookieJar();</span><br><span class=\"line\">\t\tmRequestBodyHandlers.clear();</span><br><span class=\"line\">\t\tmResponseHandlers.clear();</span><br><span class=\"line\">\t\tmUriHandlers.clear();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addUriHandler</span><span class=\"params\">(UriHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmUriHandlers.add(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addRequestBodyHandler</span><span class=\"params\">(RequestBodyHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestBodyHandlers.add(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResponseHandler</span><span class=\"params\">(ResponseHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmResponseHandlers.add(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeUriHandler</span><span class=\"params\">(UriHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmUriHandlers.remove(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeRequestBodyHandler</span><span class=\"params\">(RequestBodyHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestBodyHandlers.remove(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeResponseHandler</span><span class=\"params\">(ResponseHandler handler)</span> </span>&#123;</span><br><span class=\"line\">\t\tmResponseHandlers.remove(handler);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ReactMethod</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> timeout value of 0 results in no timeout</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendRequest</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tString method,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tString url,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReadableArray headers,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReadableMap data,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> String responseType,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> useIncrementalUpdates,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">int</span> timeout,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">boolean</span> withCredentials</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">final</span> RCTDeviceEventEmitter eventEmitter = getEventEmitter();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tUri uri = Uri.parse(url);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Check if a handler is registered</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (UriHandler handler : mUriHandlers) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (handler.supports(uri, responseType)) &#123;</span><br><span class=\"line\">\t\t\t\t\tWritableMap res = handler.fetch(uri);</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tRequest.Builder requestBuilder;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\trequestBuilder = <span class=\"keyword\">new</span> Request.Builder().url(url);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (requestId != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\trequestBuilder.tag(requestId);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tOkHttpClient.Builder clientBuilder = mClient.newBuilder();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!withCredentials) &#123;</span><br><span class=\"line\">\t\t\tclientBuilder.cookieJar(CookieJar.NO_COOKIES);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// If JS is listening for progress updates, install a ProgressResponseBody that intercepts the</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// response and counts bytes received.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (useIncrementalUpdates) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tclientBuilder.addNetworkInterceptor(<span class=\"keyword\">new</span> Interceptor() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> Response <span class=\"title\">intercept</span><span class=\"params\">(Interceptor.Chain chain)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\t\t\t\t\tResponse originalResponse = chain.proceed(chain.request());</span><br><span class=\"line\">\t\t\t\t\tProgressResponseBody responseBody = <span class=\"keyword\">new</span> ProgressResponseBody(</span><br><span class=\"line\">\t\t\t\t\toriginalResponse.body(),</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> ProgressListener() &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">long</span> last = System.nanoTime();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">long</span> bytesWritten, <span class=\"keyword\">long</span> contentLength, <span class=\"keyword\">boolean</span> done)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">long</span> now = System.nanoTime();</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (!done &amp;&amp; !shouldDispatch(now, last)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (responseType.equals(<span class=\"string\">\"text\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"comment\">// For 'text' responses we continuously send response data with progress info to</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"comment\">// JS below, so no need to do anything here.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\tResponseUtil.onDataReceivedProgress(</span><br><span class=\"line\">\t\t\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tbytesWritten,</span><br><span class=\"line\">\t\t\t\t\t\t\t\tcontentLength</span><br><span class=\"line\">\t\t\t\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\tlast = now;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> originalResponse.newBuilder().body(responseBody).build();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// If the current timeout does not equal the passed in timeout, we need to clone the existing</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// client and set the timeout explicitly on the clone. This is cheap as everything else is</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// shared under the hood.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// See https://github.com/square/okhttp/wiki/Recipes#per-call-configuration for more information</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (timeout != mClient.connectTimeoutMillis()) &#123;</span><br><span class=\"line\">\t\t\tclientBuilder.readTimeout(timeout, TimeUnit.MILLISECONDS);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tOkHttpClient client = clientBuilder.build();</span><br><span class=\"line\">\t\tHeaders requestHeaders = extractHeaders(headers, data);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (requestHeaders == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, <span class=\"string\">\"Unrecognized headers format\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tString contentType = requestHeaders.get(CONTENT_TYPE_HEADER_NAME);</span><br><span class=\"line\">\t\tString contentEncoding = requestHeaders.get(CONTENT_ENCODING_HEADER_NAME);</span><br><span class=\"line\">\t\trequestBuilder.headers(requestHeaders);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Check if a handler is registered</span></span><br><span class=\"line\">\t\tRequestBodyHandler handler = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (data != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (RequestBodyHandler curHandler : mRequestBodyHandlers) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (curHandler.supports(data)) &#123;</span><br><span class=\"line\">\t\t\t\t\thandler = curHandler;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tRequestBody requestBody;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (data == <span class=\"keyword\">null</span> || method.toLowerCase().equals(<span class=\"string\">\"get\"</span>) || method.toLowerCase().equals(<span class=\"string\">\"head\"</span>)) &#123;</span><br><span class=\"line\">\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (handler != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\trequestBody = handler.toRequestBody(data, contentType);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_STRING)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Payload is set but no content-type header specified\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString body = data.getString(REQUEST_BODY_KEY_STRING);</span><br><span class=\"line\">\t\t\tMediaType contentMediaType = MediaType.parse(contentType);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (RequestBodyUtil.isGzipEncoding(contentEncoding)) &#123;</span><br><span class=\"line\">\t\t\t\trequestBody = RequestBodyUtil.createGzip(contentMediaType, body);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (requestBody == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, <span class=\"string\">\"Failed to gzip request body\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\trequestBody = RequestBody.create(contentMediaType, body);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_BASE64)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Payload is set but no content-type header specified\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString base64String = data.getString(REQUEST_BODY_KEY_BASE64);</span><br><span class=\"line\">\t\t\tMediaType contentMediaType = MediaType.parse(contentType);</span><br><span class=\"line\">\t\t\trequestBody = RequestBody.create(contentMediaType, ByteString.decodeBase64(base64String));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_URI)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Payload is set but no content-type header specified\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString uri = data.getString(REQUEST_BODY_KEY_URI);</span><br><span class=\"line\">\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), uri);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (fileInputStream == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Could not retrieve file for uri \"</span> + uri,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\trequestBody = RequestBodyUtil.create(MediaType.parse(contentType), fileInputStream);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data.hasKey(REQUEST_BODY_KEY_FORMDATA)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (contentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcontentType = <span class=\"string\">\"multipart/form-data\"</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tReadableArray parts = data.getArray(REQUEST_BODY_KEY_FORMDATA);</span><br><span class=\"line\">\t\t\tMultipartBody.Builder multipartBuilder =</span><br><span class=\"line\">\t\t\tconstructMultipartBody(parts, contentType, requestId);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (multipartBuilder == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\trequestBody = multipartBuilder.build();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Nothing in data payload, at least nothing we could understand anyway.</span></span><br><span class=\"line\">\t\t\trequestBody = RequestBodyUtil.getEmptyBody(method);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\trequestBuilder.method(</span><br><span class=\"line\">\t\t\tmethod,</span><br><span class=\"line\">\t\t\twrapRequestBodyWithProgressEmitter(requestBody, eventEmitter, requestId)</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t\taddRequest(requestId);</span><br><span class=\"line\">\t\tclient.newCall(requestBuilder.build()).enqueue(</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> Callback() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFailure</span><span class=\"params\">(Call call, IOException e)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (mShuttingDown) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tremoveRequest(requestId);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tString errorMessage = e.getMessage() != <span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t\t? e.getMessage()</span><br><span class=\"line\">\t\t\t\t\t: <span class=\"string\">\"Error while executing request: \"</span> + e.getClass().getSimpleName();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, errorMessage, e);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(Call call, Response response)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (mShuttingDown) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tremoveRequest(requestId);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// Before we touch the body send headers to JS</span></span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onResponseReceived(</span><br><span class=\"line\">\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\tresponse.code(),</span><br><span class=\"line\">\t\t\t\t\t\ttranslateHeaders(response.headers()),</span><br><span class=\"line\">\t\t\t\t\t\tresponse.request().url().toString()</span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tResponseBody responseBody = response.body();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// Check if a handler is registered</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">for</span> (ResponseHandler handler : mResponseHandlers) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (handler.supports(responseType)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tWritableMap res = handler.toResponseData(responseBody);</span><br><span class=\"line\">\t\t\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, res);</span><br><span class=\"line\">\t\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// If JS wants progress updates during the download, and it requested a text response,</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// periodically send response data updates to JS.</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (useIncrementalUpdates &amp;&amp; responseType.equals(<span class=\"string\">\"text\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\treadWithProgress(eventEmitter, requestId, responseBody);</span><br><span class=\"line\">\t\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"comment\">// Otherwise send the data in one big chunk, in the format that JS requested.</span></span><br><span class=\"line\">\t\t\t\t\t\tString responseString = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span> (responseType.equals(<span class=\"string\">\"text\"</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\tresponseString = responseBody.string();</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"keyword\">if</span> (response.request().method().equalsIgnoreCase(<span class=\"string\">\"HEAD\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// The request is an `HEAD` and the body is empty,</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// the OkHttp will produce an exception.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// Ignore the exception to not invalidate the request in the</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// Javascript layer.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">// Introduced to fix issue #7463.</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);</span><br><span class=\"line\">\t\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (responseType.equals(<span class=\"string\">\"base64\"</span>)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tresponseString = Base64.encodeToString(responseBody.bytes(), Base64.NO_WRAP);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onDataReceived(eventEmitter, requestId, responseString);</span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onRequestSuccess(eventEmitter, requestId);</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, e.getMessage(), e);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> RequestBody <span class=\"title\">wrapRequestBodyWithProgressEmitter</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> RequestBody requestBody,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> RCTDeviceEventEmitter eventEmitter,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(requestBody == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> RequestBodyUtil.createProgressRequest(</span><br><span class=\"line\">\t\t\trequestBody,</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">new</span> ProgressListener() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">long</span> last = System.nanoTime();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">long</span> bytesWritten, <span class=\"keyword\">long</span> contentLength, <span class=\"keyword\">boolean</span> done)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">long</span> now = System.nanoTime();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (done || shouldDispatch(now, last)) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tResponseUtil.onDataSend(eventEmitter, requestId, bytesWritten, contentLength);</span><br><span class=\"line\">\t\t\t\t\t\tlast = now;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">readWithProgress</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tRCTDeviceEventEmitter eventEmitter,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">int</span> requestId,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tResponseBody responseBody</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> totalBytesRead = -<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">long</span> contentLength = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tProgressResponseBody progressResponseBody = (ProgressResponseBody) responseBody;</span><br><span class=\"line\">\t\t\ttotalBytesRead = progressResponseBody.totalBytesRead();</span><br><span class=\"line\">\t\t\tcontentLength = progressResponseBody.contentLength();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClassCastException e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Ignore</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tCharset charset = responseBody.contentType() == <span class=\"keyword\">null</span> ? StandardCharsets.UTF_8 :</span><br><span class=\"line\">\t\tresponseBody.contentType().charset(StandardCharsets.UTF_8);</span><br><span class=\"line\">\t\tProgressiveStringDecoder streamDecoder = <span class=\"keyword\">new</span> ProgressiveStringDecoder(charset);</span><br><span class=\"line\">\t\tInputStream inputStream = responseBody.byteStream();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[MAX_CHUNK_SIZE_BETWEEN_FLUSHES];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> read;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> ((read = inputStream.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onIncrementalDataReceived(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\tstreamDecoder.decodeNext(buffer, read),</span><br><span class=\"line\">\t\t\t\t\ttotalBytesRead,</span><br><span class=\"line\">\t\t\t\t\tcontentLength</span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">\t\t\tinputStream.close();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">shouldDispatch</span><span class=\"params\">(<span class=\"keyword\">long</span> now, <span class=\"keyword\">long</span> last)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> last + CHUNK_TIMEOUT_NS &lt; now;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">addRequest</span><span class=\"params\">(<span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestIds.add(requestId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">removeRequest</span><span class=\"params\">(<span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\tmRequestIds.remove(requestId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">cancelAllRequests</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (Integer requestId : mRequestIds) &#123;</span><br><span class=\"line\">\t\t\tcancelRequest(requestId);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmRequestIds.clear();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> WritableMap <span class=\"title\">translateHeaders</span><span class=\"params\">(Headers headers)</span> </span>&#123;</span><br><span class=\"line\">\t\tWritableMap responseHeaders = Arguments.createMap();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; headers.size(); i++) &#123;</span><br><span class=\"line\">\t\t\tString headerName = headers.name(i);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// multiple values for the same header</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (responseHeaders.hasKey(headerName)) &#123;</span><br><span class=\"line\">\t\t\t\tresponseHeaders.putString(</span><br><span class=\"line\">\t\t\t\theaderName,</span><br><span class=\"line\">\t\t\t\tresponseHeaders.getString(headerName) + <span class=\"string\">\", \"</span> + headers.value(i));</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tresponseHeaders.putString(headerName, headers.value(i));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> responseHeaders;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ReactMethod</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">abortRequest</span><span class=\"params\">(<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\tcancelRequest(requestId);</span><br><span class=\"line\">\t\tremoveRequest(requestId);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">cancelRequest</span><span class=\"params\">(<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> requestId)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// We have to use AsyncTask since this might trigger a NetworkOnMainThreadException, this is an</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// open issue on OkHttp: https://github.com/square/okhttp/issues/869</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> GuardedAsyncTask(getReactApplicationContext()) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doInBackgroundGuarded</span><span class=\"params\">(Void... params)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\tOkHttpCallUtil.cancelTag(mClient, Integer.valueOf(requestId));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;.execute();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ReactMethod</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clearCookies</span><span class=\"params\">(com.facebook.react.bridge.Callback callback)</span> </span>&#123;</span><br><span class=\"line\">\t\tmCookieHandler.clearCookies(callback);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"meta\">@Nullable</span> MultipartBody.<span class=\"function\">Builder <span class=\"title\">constructMultipartBody</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tReadableArray body,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tString contentType,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t<span class=\"keyword\">int</span> requestId</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\tRCTDeviceEventEmitter eventEmitter = getEventEmitter();</span><br><span class=\"line\">\t\tMultipartBody.Builder multipartBuilder = <span class=\"keyword\">new</span> MultipartBody.Builder();</span><br><span class=\"line\">\t\tmultipartBuilder.setType(MediaType.parse(contentType));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, size = body.size(); i &lt; size; i++) &#123;</span><br><span class=\"line\">\t\t\tReadableMap bodyPart = body.getMap(i);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// Determine part's content type.</span></span><br><span class=\"line\">\t\t\tReadableArray headersArray = bodyPart.getArray(<span class=\"string\">\"headers\"</span>);</span><br><span class=\"line\">\t\t\tHeaders headers = extractHeaders(headersArray, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (headers == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">\"Missing or invalid header format for FormData part.\"</span>,</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tMediaType partContentType = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\tString partContentTypeStr = headers.get(CONTENT_TYPE_HEADER_NAME);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (partContentTypeStr != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\tpartContentType = MediaType.parse(partContentTypeStr);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// Remove the content-type header because MultipartBuilder gets it explicitly as an</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">// argument and doesn't expect it in the headers array.</span></span><br><span class=\"line\">\t\t\t\theaders = headers.newBuilder().removeAll(CONTENT_TYPE_HEADER_NAME).build();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (bodyPart.hasKey(REQUEST_BODY_KEY_STRING)) &#123;</span><br><span class=\"line\">\t\t\t\tString bodyValue = bodyPart.getString(REQUEST_BODY_KEY_STRING);</span><br><span class=\"line\">\t\t\t\tmultipartBuilder.addPart(headers, RequestBody.create(partContentType, bodyValue));</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bodyPart.hasKey(REQUEST_BODY_KEY_URI)) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (partContentType == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">\"Binary FormData part needs a content-type header.\"</span>,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tString fileContentUriStr = bodyPart.getString(REQUEST_BODY_KEY_URI);</span><br><span class=\"line\">\t\t\t\tInputStream fileInputStream = RequestBodyUtil.getFileInputStream(getReactApplicationContext(), fileContentUriStr);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (fileInputStream == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tResponseUtil.onRequestError(</span><br><span class=\"line\">\t\t\t\t\t\teventEmitter,</span><br><span class=\"line\">\t\t\t\t\t\trequestId,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">\"Could not retrieve file for uri \"</span> + fileContentUriStr,</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">null</span></span><br><span class=\"line\">\t\t\t\t\t);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tmultipartBuilder.addPart(headers, RequestBodyUtil.create(partContentType, fileInputStream));</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tResponseUtil.onRequestError(eventEmitter, requestId, <span class=\"string\">\"Unrecognized FormData part.\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> multipartBuilder;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* Extracts the headers from the Array. If the format is invalid, this method will return null.</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"meta\">@Nullable</span> <span class=\"function\">Headers <span class=\"title\">extractHeaders</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t@Nullable ReadableArray headersArray,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\t@Nullable ReadableMap requestData</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (headersArray == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tHeaders.Builder headersBuilder = <span class=\"keyword\">new</span> Headers.Builder();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> headersIdx = <span class=\"number\">0</span>, size = headersArray.size(); headersIdx &lt; size; headersIdx++) &#123;</span><br><span class=\"line\">\t\t\tReadableArray header = headersArray.getArray(headersIdx);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (header == <span class=\"keyword\">null</span> || header.size() != <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tString headerName = header.getString(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t\tString headerValue = header.getString(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (headerName == <span class=\"keyword\">null</span> || headerValue == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\theadersBuilder.add(headerName, headerValue);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (headersBuilder.get(USER_AGENT_HEADER_NAME) == <span class=\"keyword\">null</span> &amp;&amp; mDefaultUserAgent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\theadersBuilder.add(USER_AGENT_HEADER_NAME, mDefaultUserAgent);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// Sanitize content encoding header, supported only when request specify payload as string</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> isGzipSupported = requestData != <span class=\"keyword\">null</span> &amp;&amp; requestData.hasKey(REQUEST_BODY_KEY_STRING);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!isGzipSupported) &#123;</span><br><span class=\"line\">\t\t\theadersBuilder.removeAll(CONTENT_ENCODING_HEADER_NAME);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> headersBuilder.build();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> RCTDeviceEventEmitter <span class=\"title\">getEventEmitter</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> getReactApplicationContext().getJSModule(RCTDeviceEventEmitter.class);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>在终端代开项目<code>cd {project}</code>执行</p>\n</li>\n<li><p><code>react-native run-android</code>开始编译，编译的过程很漫长，大概需要10到20分钟</p>\n</li>\n<li><p>如果中途失败记得删除<code>/node_modules/react-native/ReactAndroid/bulid</code>里面的所有内容，然后重新编译</p>\n</li>\n<li><p>关于源代码编译可以参考官方文档<a href=\"https://reactnative.cn/docs/building-from-source.html\" target=\"_blank\" rel=\"noopener\">中文</a>或者<a href=\"https://facebook.github.io/react-native/docs/building-from-source\" target=\"_blank\" rel=\"noopener\">英文</a>官网详细查看</p>\n</li>\n</ul>\n<ul>\n<li>关于详细代码可进入我的<a href=\"https://github.com/AaronBank/react-native.git\" target=\"_blank\" rel=\"noopener\">Github</a>查看</li>\n</ul>\n<p><em>感谢支持</em></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjypkjpno0000cdt5qzmbjdi2","category_id":"cjypkjpnu0002cdt5x5jyj9e1","_id":"cjypkjpo4000ccdt5y42lpc8m"},{"post_id":"cjypkjpnz0006cdt5ghjnejtc","category_id":"cjypkjpo20009cdt5hjral0yj","_id":"cjypkjpo7000hcdt59dew61js"},{"post_id":"cjypkjpo4000dcdt57nxkriya","category_id":"cjypkjpo6000ecdt5rhdgwv90","_id":"cjypkjpo7000jcdt5qpvh4cv4"},{"post_id":"cjypkjpoh000kcdt50nahuca5","category_id":"cjypkjpo20009cdt5hjral0yj","_id":"cjypkjpoq000qcdt59sys9bxr"},{"post_id":"cjypkjpom000mcdt5h4rx3exh","category_id":"cjypkjpoq000pcdt55f7wusrj","_id":"cjypkjpos000tcdt57o97g221"},{"post_id":"cjypkjpnx0004cdt5ldjarr2g","category_id":"cjypkjpo20009cdt5hjral0yj","_id":"cjypq8q8a0001fet5h5p9d1jw"},{"post_id":"cjypkjpo10008cdt5uyoh7ml2","category_id":"cjypkjpo20009cdt5hjral0yj","_id":"cjypqyabu0002i6t549uinxjn"},{"post_id":"cjypkjpny0005cdt5ffvmprdn","category_id":"cjypkjpo20009cdt5hjral0yj","_id":"cjypuv5e80007i6t53acyqmkg"},{"post_id":"cjyq0pcht0006xofybnvo5axt","category_id":"cjypkjpo20009cdt5hjral0yj","_id":"cjyq0pchv0008xofyysb6s530"}],"PostTag":[{"post_id":"cjypkjpno0000cdt5qzmbjdi2","tag_id":"cjypkjpnw0003cdt5a8se0mmg","_id":"cjypkjpo10007cdt5z8vzsljl"},{"post_id":"cjypkjpnz0006cdt5ghjnejtc","tag_id":"cjypkjpo2000acdt5fk7ob5cu","_id":"cjypkjpo6000gcdt5q6t4emjz"},{"post_id":"cjypkjpo4000dcdt57nxkriya","tag_id":"cjypkjpo6000fcdt508kvfcij","_id":"cjypkjpo7000icdt5gal9d2o9"},{"post_id":"cjypkjpoh000kcdt50nahuca5","tag_id":"cjypkjpop000ocdt56qfg63em","_id":"cjypkjpor000scdt5a0xbychu"},{"post_id":"cjypkjpom000mcdt5h4rx3exh","tag_id":"cjypkjpor000rcdt5lppq8ev3","_id":"cjypkjpos000ucdt5g0nxd3w4"},{"post_id":"cjypkjpnx0004cdt5ldjarr2g","tag_id":"cjypkjpo2000acdt5fk7ob5cu","_id":"cjypq8q880000fet5wsfyhjbv"},{"post_id":"cjypkjpo10008cdt5uyoh7ml2","tag_id":"cjypkjpo2000acdt5fk7ob5cu","_id":"cjypqyabu0001i6t5b4ipbxl7"},{"post_id":"cjypkjpny0005cdt5ffvmprdn","tag_id":"cjypkjpo2000acdt5fk7ob5cu","_id":"cjypuv5e80006i6t5rbypx0ld"},{"post_id":"cjyq0pcht0006xofybnvo5axt","tag_id":"cjypkjpo2000acdt5fk7ob5cu","_id":"cjyq0pchv0007xofydd37w5mh"}],"Tag":[{"name":"Git","_id":"cjypkjpnw0003cdt5a8se0mmg"},{"name":"ReactNative","_id":"cjypkjpo2000acdt5fk7ob5cu"},{"name":"ubuntu","_id":"cjypkjpo6000fcdt508kvfcij"},{"name":"Javascript","_id":"cjypkjpop000ocdt56qfg63em"},{"name":"Vue","_id":"cjypkjpor000rcdt5lppq8ev3"},{"name":"http://hexo-shen.oss-cn-beijing.aliyuncs.com/hexo/132622.jpg","_id":"cjypuuqv60004i6t50bk7am5c"}]}}